(self["webpackChunkv01"]=self["webpackChunkv01"]||[]).push([[998],{7111:function(e,t,n){var r=n(6733),s=n(9821),a=TypeError;e.exports=function(e){if(r(e))return e;throw a(s(e)+" is not a function")}},8505:function(e,t,n){var r=n(6733),s=String,a=TypeError;e.exports=function(e){if("object"==typeof e||r(e))return e;throw a("Can't set "+s(e)+" as a prototype")}},7728:function(e,t,n){var r=n(1321),s=TypeError;e.exports=function(e,t){if(r(t,e))return e;throw s("Incorrect invocation")}},1176:function(e,t,n){var r=n(5052),s=String,a=TypeError;e.exports=function(e){if(r(e))return e;throw a(s(e)+" is not an object")}},9540:function(e,t,n){var r=n(905),s=n(3231),a=n(9646),o=function(e){return function(t,n,o){var i,u=r(t),l=a(u),c=s(o,l);if(e&&n!=n){while(l>c)if(i=u[c++],i!=i)return!0}else for(;l>c;c++)if((e||c in u)&&u[c]===n)return e||c||0;return!e&&-1}};e.exports={includes:o(!0),indexOf:o(!1)}},6554:function(e,t,n){"use strict";var r=n(7400),s=n(3718),a=TypeError,o=Object.getOwnPropertyDescriptor,i=r&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(e){return e instanceof TypeError}}();e.exports=i?function(e,t){if(s(e)&&!o(e,"length").writable)throw a("Cannot set read only .length");return e.length=t}:function(e,t){return e.length=t}},1909:function(e,t,n){var r=n(5968);e.exports=r([].slice)},7079:function(e,t,n){var r=n(5968),s=r({}.toString),a=r("".slice);e.exports=function(e){return a(s(e),8,-1)}},1589:function(e,t,n){var r=n(1601),s=n(6733),a=n(7079),o=n(95),i=o("toStringTag"),u=Object,l="Arguments"==a(function(){return arguments}()),c=function(e,t){try{return e[t]}catch(n){}};e.exports=r?a:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=c(t=u(e),i))?n:l?a(t):"Object"==(r=a(t))&&s(t.callee)?"Arguments":r}},7081:function(e,t,n){var r=n(8270),s=n(4826),a=n(7933),o=n(1787);e.exports=function(e,t,n){for(var i=s(t),u=o.f,l=a.f,c=0;c<i.length;c++){var h=i[c];r(e,h)||n&&r(n,h)||u(e,h,l(t,h))}}},5762:function(e,t,n){var r=n(7400),s=n(1787),a=n(5358);e.exports=r?function(e,t,n){return s.f(e,t,a(1,n))}:function(e,t,n){return e[t]=n,e}},5358:function(e){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},6616:function(e,t,n){var r=n(6039),s=n(1787);e.exports=function(e,t,n){return n.get&&r(n.get,t,{getter:!0}),n.set&&r(n.set,t,{setter:!0}),s.f(e,t,n)}},4768:function(e,t,n){var r=n(6733),s=n(1787),a=n(6039),o=n(8400);e.exports=function(e,t,n,i){i||(i={});var u=i.enumerable,l=void 0!==i.name?i.name:t;if(r(n)&&a(n,l,i),i.global)u?e[t]=n:o(t,n);else{try{i.unsafe?e[t]&&(u=!0):delete e[t]}catch(c){}u?e[t]=n:s.f(e,t,{value:n,enumerable:!1,configurable:!i.nonConfigurable,writable:!i.nonWritable})}return e}},8400:function(e,t,n){var r=n(9859),s=Object.defineProperty;e.exports=function(e,t){try{s(r,e,{value:t,configurable:!0,writable:!0})}catch(n){r[e]=t}return t}},9563:function(e,t,n){"use strict";var r=n(9821),s=TypeError;e.exports=function(e,t){if(!delete e[t])throw s("Cannot delete property "+r(t)+" of "+r(e))}},7400:function(e,t,n){var r=n(4229);e.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},3777:function(e){var t="object"==typeof document&&document.all,n="undefined"==typeof t&&void 0!==t;e.exports={all:t,IS_HTMLDDA:n}},2635:function(e,t,n){var r=n(9859),s=n(5052),a=r.document,o=s(a)&&s(a.createElement);e.exports=function(e){return o?a.createElement(e):{}}},3064:function(e){var t=TypeError,n=9007199254740991;e.exports=function(e){if(e>n)throw t("Maximum allowed index exceeded");return e}},7445:function(e){e.exports={IndexSizeError:{s:"INDEX_SIZE_ERR",c:1,m:1},DOMStringSizeError:{s:"DOMSTRING_SIZE_ERR",c:2,m:0},HierarchyRequestError:{s:"HIERARCHY_REQUEST_ERR",c:3,m:1},WrongDocumentError:{s:"WRONG_DOCUMENT_ERR",c:4,m:1},InvalidCharacterError:{s:"INVALID_CHARACTER_ERR",c:5,m:1},NoDataAllowedError:{s:"NO_DATA_ALLOWED_ERR",c:6,m:0},NoModificationAllowedError:{s:"NO_MODIFICATION_ALLOWED_ERR",c:7,m:1},NotFoundError:{s:"NOT_FOUND_ERR",c:8,m:1},NotSupportedError:{s:"NOT_SUPPORTED_ERR",c:9,m:1},InUseAttributeError:{s:"INUSE_ATTRIBUTE_ERR",c:10,m:1},InvalidStateError:{s:"INVALID_STATE_ERR",c:11,m:1},SyntaxError:{s:"SYNTAX_ERR",c:12,m:1},InvalidModificationError:{s:"INVALID_MODIFICATION_ERR",c:13,m:1},NamespaceError:{s:"NAMESPACE_ERR",c:14,m:1},InvalidAccessError:{s:"INVALID_ACCESS_ERR",c:15,m:1},ValidationError:{s:"VALIDATION_ERR",c:16,m:0},TypeMismatchError:{s:"TYPE_MISMATCH_ERR",c:17,m:1},SecurityError:{s:"SECURITY_ERR",c:18,m:1},NetworkError:{s:"NETWORK_ERR",c:19,m:1},AbortError:{s:"ABORT_ERR",c:20,m:1},URLMismatchError:{s:"URL_MISMATCH_ERR",c:21,m:1},QuotaExceededError:{s:"QUOTA_EXCEEDED_ERR",c:22,m:1},TimeoutError:{s:"TIMEOUT_ERR",c:23,m:1},InvalidNodeTypeError:{s:"INVALID_NODE_TYPE_ERR",c:24,m:1},DataCloneError:{s:"DATA_CLONE_ERR",c:25,m:1}}},7995:function(e){e.exports="function"==typeof Bun&&Bun&&"string"==typeof Bun.version},2023:function(e,t,n){var r=n(598);e.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(r)},8801:function(e,t,n){var r=n(7079),s=n(9859);e.exports="process"==r(s.process)},598:function(e,t,n){var r=n(1333);e.exports=r("navigator","userAgent")||""},6358:function(e,t,n){var r,s,a=n(9859),o=n(598),i=a.process,u=a.Deno,l=i&&i.versions||u&&u.version,c=l&&l.v8;c&&(r=c.split("."),s=r[0]>0&&r[0]<4?1:+(r[0]+r[1])),!s&&o&&(r=o.match(/Edge\/(\d+)/),(!r||r[1]>=74)&&(r=o.match(/Chrome\/(\d+)/),r&&(s=+r[1]))),e.exports=s},3837:function(e){e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},5299:function(e,t,n){var r=n(5968),s=Error,a=r("".replace),o=function(e){return String(s(e).stack)}("zxcasd"),i=/\n\s*at [^:]*:[^\n]*/,u=i.test(o);e.exports=function(e,t){if(u&&"string"==typeof e&&!s.prepareStackTrace)while(t--)e=a(e,i,"");return e}},3103:function(e,t,n){var r=n(9859),s=n(7933).f,a=n(5762),o=n(4768),i=n(8400),u=n(7081),l=n(6541);e.exports=function(e,t){var n,c,h,p,d,f,m=e.target,g=e.global,y=e.stat;if(c=g?r:y?r[m]||i(m,{}):(r[m]||{}).prototype,c)for(h in t){if(d=t[h],e.dontCallGetSet?(f=s(c,h),p=f&&f.value):p=c[h],n=l(g?h:m+(y?".":"#")+h,e.forced),!n&&void 0!==p){if(typeof d==typeof p)continue;u(d,p)}(e.sham||p&&p.sham)&&a(d,"sham",!0),o(c,h,d,e)}}},4229:function(e){e.exports=function(e){try{return!!e()}catch(t){return!0}}},3171:function(e,t,n){var r=n(7188),s=Function.prototype,a=s.apply,o=s.call;e.exports="object"==typeof Reflect&&Reflect.apply||(r?o.bind(a):function(){return o.apply(a,arguments)})},7636:function(e,t,n){var r=n(4745),s=n(7111),a=n(7188),o=r(r.bind);e.exports=function(e,t){return s(e),void 0===t?e:a?o(e,t):function(){return e.apply(t,arguments)}}},7188:function(e,t,n){var r=n(4229);e.exports=!r((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")}))},266:function(e,t,n){var r=n(7188),s=Function.prototype.call;e.exports=r?s.bind(s):function(){return s.apply(s,arguments)}},1805:function(e,t,n){var r=n(7400),s=n(8270),a=Function.prototype,o=r&&Object.getOwnPropertyDescriptor,i=s(a,"name"),u=i&&"something"===function(){}.name,l=i&&(!r||r&&o(a,"name").configurable);e.exports={EXISTS:i,PROPER:u,CONFIGURABLE:l}},4745:function(e,t,n){var r=n(7079),s=n(5968);e.exports=function(e){if("Function"===r(e))return s(e)}},5968:function(e,t,n){var r=n(7188),s=Function.prototype,a=s.call,o=r&&s.bind.bind(a,a);e.exports=r?o:function(e){return function(){return a.apply(e,arguments)}}},1333:function(e,t,n){var r=n(9859),s=n(6733),a=function(e){return s(e)?e:void 0};e.exports=function(e,t){return arguments.length<2?a(r[e]):r[e]&&r[e][t]}},5300:function(e,t,n){var r=n(7111),s=n(9650);e.exports=function(e,t){var n=e[t];return s(n)?void 0:r(n)}},9859:function(e,t,n){var r=function(e){return e&&e.Math==Math&&e};e.exports=r("object"==typeof globalThis&&globalThis)||r("object"==typeof window&&window)||r("object"==typeof self&&self)||r("object"==typeof n.g&&n.g)||function(){return this}()||Function("return this")()},8270:function(e,t,n){var r=n(5968),s=n(2991),a=r({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,t){return a(s(e),t)}},5977:function(e){e.exports={}},8385:function(e,t,n){var r=n(1333);e.exports=r("document","documentElement")},4394:function(e,t,n){var r=n(7400),s=n(4229),a=n(2635);e.exports=!r&&!s((function(){return 7!=Object.defineProperty(a("div"),"a",{get:function(){return 7}}).a}))},9337:function(e,t,n){var r=n(5968),s=n(4229),a=n(7079),o=Object,i=r("".split);e.exports=s((function(){return!o("z").propertyIsEnumerable(0)}))?function(e){return"String"==a(e)?i(e,""):o(e)}:o},835:function(e,t,n){var r=n(6733),s=n(5052),a=n(6540);e.exports=function(e,t,n){var o,i;return a&&r(o=t.constructor)&&o!==n&&s(i=o.prototype)&&i!==n.prototype&&a(e,i),e}},8511:function(e,t,n){var r=n(5968),s=n(6733),a=n(5353),o=r(Function.toString);s(a.inspectSource)||(a.inspectSource=function(e){return o(e)}),e.exports=a.inspectSource},6407:function(e,t,n){var r,s,a,o=n(1180),i=n(9859),u=n(5052),l=n(5762),c=n(8270),h=n(5353),p=n(4399),d=n(5977),f="Object already initialized",m=i.TypeError,g=i.WeakMap,y=function(e){return a(e)?s(e):r(e,{})},b=function(e){return function(t){var n;if(!u(t)||(n=s(t)).type!==e)throw m("Incompatible receiver, "+e+" required");return n}};if(o||h.state){var x=h.state||(h.state=new g);x.get=x.get,x.has=x.has,x.set=x.set,r=function(e,t){if(x.has(e))throw m(f);return t.facade=e,x.set(e,t),t},s=function(e){return x.get(e)||{}},a=function(e){return x.has(e)}}else{var v=p("state");d[v]=!0,r=function(e,t){if(c(e,v))throw m(f);return t.facade=e,l(e,v,t),t},s=function(e){return c(e,v)?e[v]:{}},a=function(e){return c(e,v)}}e.exports={set:r,get:s,has:a,enforce:y,getterFor:b}},3718:function(e,t,n){var r=n(7079);e.exports=Array.isArray||function(e){return"Array"==r(e)}},6733:function(e,t,n){var r=n(3777),s=r.all;e.exports=r.IS_HTMLDDA?function(e){return"function"==typeof e||e===s}:function(e){return"function"==typeof e}},6541:function(e,t,n){var r=n(4229),s=n(6733),a=/#|\.prototype\./,o=function(e,t){var n=u[i(e)];return n==c||n!=l&&(s(t)?r(t):!!t)},i=o.normalize=function(e){return String(e).replace(a,".").toLowerCase()},u=o.data={},l=o.NATIVE="N",c=o.POLYFILL="P";e.exports=o},9650:function(e){e.exports=function(e){return null===e||void 0===e}},5052:function(e,t,n){var r=n(6733),s=n(3777),a=s.all;e.exports=s.IS_HTMLDDA?function(e){return"object"==typeof e?null!==e:r(e)||e===a}:function(e){return"object"==typeof e?null!==e:r(e)}},4231:function(e){e.exports=!1},9395:function(e,t,n){var r=n(1333),s=n(6733),a=n(1321),o=n(6969),i=Object;e.exports=o?function(e){return"symbol"==typeof e}:function(e){var t=r("Symbol");return s(t)&&a(t.prototype,i(e))}},9646:function(e,t,n){var r=n(4237);e.exports=function(e){return r(e.length)}},6039:function(e,t,n){var r=n(4229),s=n(6733),a=n(8270),o=n(7400),i=n(1805).CONFIGURABLE,u=n(8511),l=n(6407),c=l.enforce,h=l.get,p=Object.defineProperty,d=o&&!r((function(){return 8!==p((function(){}),"length",{value:8}).length})),f=String(String).split("String"),m=e.exports=function(e,t,n){"Symbol("===String(t).slice(0,7)&&(t="["+String(t).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),n&&n.getter&&(t="get "+t),n&&n.setter&&(t="set "+t),(!a(e,"name")||i&&e.name!==t)&&(o?p(e,"name",{value:t,configurable:!0}):e.name=t),d&&n&&a(n,"arity")&&e.length!==n.arity&&p(e,"length",{value:n.arity});try{n&&a(n,"constructor")&&n.constructor?o&&p(e,"prototype",{writable:!1}):e.prototype&&(e.prototype=void 0)}catch(s){}var r=c(e);return a(r,"source")||(r.source=f.join("string"==typeof t?t:"")),e};Function.prototype.toString=m((function(){return s(this)&&h(this).source||u(this)}),"toString")},917:function(e){var t=Math.ceil,n=Math.floor;e.exports=Math.trunc||function(e){var r=+e;return(r>0?n:t)(r)}},635:function(e,t,n){var r=n(3326);e.exports=function(e,t){return void 0===e?arguments.length<2?"":t:r(e)}},1787:function(e,t,n){var r=n(7400),s=n(4394),a=n(7137),o=n(1176),i=n(9310),u=TypeError,l=Object.defineProperty,c=Object.getOwnPropertyDescriptor,h="enumerable",p="configurable",d="writable";t.f=r?a?function(e,t,n){if(o(e),t=i(t),o(n),"function"===typeof e&&"prototype"===t&&"value"in n&&d in n&&!n[d]){var r=c(e,t);r&&r[d]&&(e[t]=n.value,n={configurable:p in n?n[p]:r[p],enumerable:h in n?n[h]:r[h],writable:!1})}return l(e,t,n)}:l:function(e,t,n){if(o(e),t=i(t),o(n),s)try{return l(e,t,n)}catch(r){}if("get"in n||"set"in n)throw u("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},7933:function(e,t,n){var r=n(7400),s=n(266),a=n(9195),o=n(5358),i=n(905),u=n(9310),l=n(8270),c=n(4394),h=Object.getOwnPropertyDescriptor;t.f=r?h:function(e,t){if(e=i(e),t=u(t),c)try{return h(e,t)}catch(n){}if(l(e,t))return o(!s(a.f,e,t),e[t])}},8151:function(e,t,n){var r=n(140),s=n(3837),a=s.concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,a)}},894:function(e,t){t.f=Object.getOwnPropertySymbols},1321:function(e,t,n){var r=n(5968);e.exports=r({}.isPrototypeOf)},140:function(e,t,n){var r=n(5968),s=n(8270),a=n(905),o=n(9540).indexOf,i=n(5977),u=r([].push);e.exports=function(e,t){var n,r=a(e),l=0,c=[];for(n in r)!s(i,n)&&s(r,n)&&u(c,n);while(t.length>l)s(r,n=t[l++])&&(~o(c,n)||u(c,n));return c}},9195:function(e,t){"use strict";var n={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,s=r&&!n.call({1:2},1);t.f=s?function(e){var t=r(this,e);return!!t&&t.enumerable}:n},6540:function(e,t,n){var r=n(5968),s=n(1176),a=n(8505);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{e=r(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set),e(n,[]),t=n instanceof Array}catch(o){}return function(n,r){return s(n),a(r),t?e(n,r):n.__proto__=r,n}}():void 0)},2914:function(e,t,n){var r=n(266),s=n(6733),a=n(5052),o=TypeError;e.exports=function(e,t){var n,i;if("string"===t&&s(n=e.toString)&&!a(i=r(n,e)))return i;if(s(n=e.valueOf)&&!a(i=r(n,e)))return i;if("string"!==t&&s(n=e.toString)&&!a(i=r(n,e)))return i;throw o("Can't convert object to primitive value")}},4826:function(e,t,n){var r=n(1333),s=n(5968),a=n(8151),o=n(894),i=n(1176),u=s([].concat);e.exports=r("Reflect","ownKeys")||function(e){var t=a.f(i(e)),n=o.f;return n?u(t,n(e)):t}},895:function(e,t,n){"use strict";var r=n(1176);e.exports=function(){var e=r(this),t="";return e.hasIndices&&(t+="d"),e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.unicodeSets&&(t+="v"),e.sticky&&(t+="y"),t}},8885:function(e,t,n){var r=n(9650),s=TypeError;e.exports=function(e){if(r(e))throw s("Can't call method on "+e);return e}},4752:function(e,t,n){"use strict";var r=n(9859),s=n(3171),a=n(6733),o=n(7995),i=n(598),u=n(1909),l=n(7579),c=r.Function,h=/MSIE .\./.test(i)||o&&function(){var e=r.Bun.version.split(".");return e.length<3||0==e[0]&&(e[1]<3||3==e[1]&&0==e[2])}();e.exports=function(e,t){var n=t?2:1;return h?function(r,o){var i=l(arguments.length,1)>n,h=a(r)?r:c(r),p=i?u(arguments,n):[],d=i?function(){s(h,this,p)}:h;return t?e(d,o):e(d)}:e}},4399:function(e,t,n){var r=n(3036),s=n(1441),a=r("keys");e.exports=function(e){return a[e]||(a[e]=s(e))}},5353:function(e,t,n){var r=n(9859),s=n(8400),a="__core-js_shared__",o=r[a]||s(a,{});e.exports=o},3036:function(e,t,n){var r=n(4231),s=n(5353);(e.exports=function(e,t){return s[e]||(s[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.27.1",mode:r?"pure":"global",copyright:"© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.27.1/LICENSE",source:"https://github.com/zloirock/core-js"})},4860:function(e,t,n){var r=n(6358),s=n(4229);e.exports=!!Object.getOwnPropertySymbols&&!s((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},5795:function(e,t,n){var r,s,a,o,i=n(9859),u=n(3171),l=n(7636),c=n(6733),h=n(8270),p=n(4229),d=n(8385),f=n(1909),m=n(2635),g=n(7579),y=n(2023),b=n(8801),x=i.setImmediate,v=i.clearImmediate,w=i.process,k=i.Dispatch,I=i.Function,N=i.MessageChannel,S=i.String,T=0,C={},$="onreadystatechange";try{r=i.location}catch(O){}var E=function(e){if(h(C,e)){var t=C[e];delete C[e],t()}},A=function(e){return function(){E(e)}},R=function(e){E(e.data)},_=function(e){i.postMessage(S(e),r.protocol+"//"+r.host)};x&&v||(x=function(e){g(arguments.length,1);var t=c(e)?e:I(e),n=f(arguments,1);return C[++T]=function(){u(t,void 0,n)},s(T),T},v=function(e){delete C[e]},b?s=function(e){w.nextTick(A(e))}:k&&k.now?s=function(e){k.now(A(e))}:N&&!y?(a=new N,o=a.port2,a.port1.onmessage=R,s=l(o.postMessage,o)):i.addEventListener&&c(i.postMessage)&&!i.importScripts&&r&&"file:"!==r.protocol&&!p(_)?(s=_,i.addEventListener("message",R,!1)):s=$ in m("script")?function(e){d.appendChild(m("script"))[$]=function(){d.removeChild(this),E(e)}}:function(e){setTimeout(A(e),0)}),e.exports={set:x,clear:v}},3231:function(e,t,n){var r=n(3329),s=Math.max,a=Math.min;e.exports=function(e,t){var n=r(e);return n<0?s(n+t,0):a(n,t)}},905:function(e,t,n){var r=n(9337),s=n(8885);e.exports=function(e){return r(s(e))}},3329:function(e,t,n){var r=n(917);e.exports=function(e){var t=+e;return t!==t||0===t?0:r(t)}},4237:function(e,t,n){var r=n(3329),s=Math.min;e.exports=function(e){return e>0?s(r(e),9007199254740991):0}},2991:function(e,t,n){var r=n(8885),s=Object;e.exports=function(e){return s(r(e))}},2066:function(e,t,n){var r=n(266),s=n(5052),a=n(9395),o=n(5300),i=n(2914),u=n(95),l=TypeError,c=u("toPrimitive");e.exports=function(e,t){if(!s(e)||a(e))return e;var n,u=o(e,c);if(u){if(void 0===t&&(t="default"),n=r(u,e,t),!s(n)||a(n))return n;throw l("Can't convert object to primitive value")}return void 0===t&&(t="number"),i(e,t)}},9310:function(e,t,n){var r=n(2066),s=n(9395);e.exports=function(e){var t=r(e,"string");return s(t)?t:t+""}},1601:function(e,t,n){var r=n(95),s=r("toStringTag"),a={};a[s]="z",e.exports="[object z]"===String(a)},3326:function(e,t,n){var r=n(1589),s=String;e.exports=function(e){if("Symbol"===r(e))throw TypeError("Cannot convert a Symbol value to a string");return s(e)}},9821:function(e){var t=String;e.exports=function(e){try{return t(e)}catch(n){return"Object"}}},1441:function(e,t,n){var r=n(5968),s=0,a=Math.random(),o=r(1..toString);e.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+o(++s+a,36)}},6969:function(e,t,n){var r=n(4860);e.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},7137:function(e,t,n){var r=n(7400),s=n(4229);e.exports=r&&s((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},7579:function(e){var t=TypeError;e.exports=function(e,n){if(e<n)throw t("Not enough arguments");return e}},1180:function(e,t,n){var r=n(9859),s=n(6733),a=r.WeakMap;e.exports=s(a)&&/native code/.test(String(a))},95:function(e,t,n){var r=n(9859),s=n(3036),a=n(8270),o=n(1441),i=n(4860),u=n(6969),l=s("wks"),c=r.Symbol,h=c&&c["for"],p=u?c:c&&c.withoutSetter||o;e.exports=function(e){if(!a(l,e)||!i&&"string"!=typeof l[e]){var t="Symbol."+e;i&&a(c,e)?l[e]=c[e]:l[e]=u&&h?h(t):p(t)}return l[e]}},6728:function(e,t,n){"use strict";var r=n(3103),s=n(2991),a=n(9646),o=n(6554),i=n(3064),u=n(4229),l=u((function(){return 4294967297!==[].push.call({length:4294967296},1)})),c=!function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(e){return e instanceof TypeError}}();r({target:"Array",proto:!0,arity:1,forced:l||c},{push:function(e){var t=s(this),n=a(t),r=arguments.length;i(n+r);for(var u=0;u<r;u++)t[n]=arguments[u],n++;return o(t,n),n}})},1951:function(e,t,n){"use strict";var r=n(3103),s=n(2991),a=n(9646),o=n(6554),i=n(9563),u=n(3064),l=1!==[].unshift(0),c=!function(){try{Object.defineProperty([],"length",{writable:!1}).unshift()}catch(e){return e instanceof TypeError}}();r({target:"Array",proto:!0,arity:1,forced:l||c},{unshift:function(e){var t=s(this),n=a(t),r=arguments.length;if(r){u(n+r);var l=n;while(l--){var c=l+r;l in t?t[c]=t[l]:i(t,c)}for(var h=0;h<r;h++)t[h]=arguments[h]}return o(t,n+r)}})},103:function(e,t,n){var r=n(9859),s=n(7400),a=n(6616),o=n(895),i=n(4229),u=r.RegExp,l=u.prototype,c=s&&i((function(){var e=!0;try{u(".","d")}catch(c){e=!1}var t={},n="",r=e?"dgimsy":"gimsy",s=function(e,r){Object.defineProperty(t,e,{get:function(){return n+=r,!0}})},a={dotAll:"s",global:"g",ignoreCase:"i",multiline:"m",sticky:"y"};for(var o in e&&(a.hasIndices="d"),a)s(o,a[o]);var i=Object.getOwnPropertyDescriptor(l,"flags").get.call(t);return i!==r||n!==r}));c&&a(l,"flags",{configurable:!0,get:o})},8596:function(e,t,n){var r=n(3103),s=n(9859),a=n(5795).clear;r({global:!0,bind:!0,enumerable:!0,forced:s.clearImmediate!==a},{clearImmediate:a})},5640:function(e,t,n){"use strict";var r=n(3103),s=n(9859),a=n(1333),o=n(5358),i=n(1787).f,u=n(8270),l=n(7728),c=n(835),h=n(635),p=n(7445),d=n(5299),f=n(7400),m=n(4231),g="DOMException",y=a("Error"),b=a(g),x=function(){l(this,v);var e=arguments.length,t=h(e<1?void 0:arguments[0]),n=h(e<2?void 0:arguments[1],"Error"),r=new b(t,n),s=y(t);return s.name=g,i(r,"stack",o(1,d(s.stack,1))),c(r,this,x),r},v=x.prototype=b.prototype,w="stack"in y(g),k="stack"in new b(1,2),I=b&&f&&Object.getOwnPropertyDescriptor(s,g),N=!!I&&!(I.writable&&I.configurable),S=w&&!N&&!k;r({global:!0,constructor:!0,forced:m||S},{DOMException:S?x:b});var T=a(g),C=T.prototype;if(C.constructor!==T)for(var $ in m||i(C,"constructor",o(1,T)),p)if(u(p,$)){var E=p[$],A=E.s;u(T,A)||i(T,A,o(6,E.c))}},6106:function(e,t,n){n(8596),n(6471)},6471:function(e,t,n){var r=n(3103),s=n(9859),a=n(5795).set,o=n(4752),i=s.setImmediate?o(a,!1):a;r({global:!0,bind:!0,enumerable:!0,forced:s.setImmediate!==i},{setImmediate:i})},9662:function(e,t,n){var r=n(614),s=n(6330),a=TypeError;e.exports=function(e){if(r(e))return e;throw a(s(e)+" is not a function")}},9670:function(e,t,n){var r=n(111),s=String,a=TypeError;e.exports=function(e){if(r(e))return e;throw a(s(e)+" is not an object")}},1318:function(e,t,n){var r=n(5656),s=n(1400),a=n(6244),o=function(e){return function(t,n,o){var i,u=r(t),l=a(u),c=s(o,l);if(e&&n!=n){while(l>c)if(i=u[c++],i!=i)return!0}else for(;l>c;c++)if((e||c in u)&&u[c]===n)return e||c||0;return!e&&-1}};e.exports={includes:o(!0),indexOf:o(!1)}},3658:function(e,t,n){"use strict";var r=n(9781),s=n(3157),a=TypeError,o=Object.getOwnPropertyDescriptor,i=r&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(e){return e instanceof TypeError}}();e.exports=i?function(e,t){if(s(e)&&!o(e,"length").writable)throw a("Cannot set read only .length");return e.length=t}:function(e,t){return e.length=t}},4326:function(e,t,n){var r=n(1702),s=r({}.toString),a=r("".slice);e.exports=function(e){return a(s(e),8,-1)}},9920:function(e,t,n){var r=n(2597),s=n(3887),a=n(1236),o=n(3070);e.exports=function(e,t,n){for(var i=s(t),u=o.f,l=a.f,c=0;c<i.length;c++){var h=i[c];r(e,h)||n&&r(n,h)||u(e,h,l(t,h))}}},8880:function(e,t,n){var r=n(9781),s=n(3070),a=n(9114);e.exports=r?function(e,t,n){return s.f(e,t,a(1,n))}:function(e,t,n){return e[t]=n,e}},9114:function(e){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},8052:function(e,t,n){var r=n(614),s=n(3070),a=n(6339),o=n(3072);e.exports=function(e,t,n,i){i||(i={});var u=i.enumerable,l=void 0!==i.name?i.name:t;if(r(n)&&a(n,l,i),i.global)u?e[t]=n:o(t,n);else{try{i.unsafe?e[t]&&(u=!0):delete e[t]}catch(c){}u?e[t]=n:s.f(e,t,{value:n,enumerable:!1,configurable:!i.nonConfigurable,writable:!i.nonWritable})}return e}},3072:function(e,t,n){var r=n(7854),s=Object.defineProperty;e.exports=function(e,t){try{s(r,e,{value:t,configurable:!0,writable:!0})}catch(n){r[e]=t}return t}},5117:function(e,t,n){"use strict";var r=n(6330),s=TypeError;e.exports=function(e,t){if(!delete e[t])throw s("Cannot delete property "+r(t)+" of "+r(e))}},9781:function(e,t,n){var r=n(7293);e.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},4154:function(e){var t="object"==typeof document&&document.all,n="undefined"==typeof t&&void 0!==t;e.exports={all:t,IS_HTMLDDA:n}},317:function(e,t,n){var r=n(7854),s=n(111),a=r.document,o=s(a)&&s(a.createElement);e.exports=function(e){return o?a.createElement(e):{}}},7207:function(e){var t=TypeError,n=9007199254740991;e.exports=function(e){if(e>n)throw t("Maximum allowed index exceeded");return e}},8113:function(e){e.exports="undefined"!=typeof navigator&&String(navigator.userAgent)||""},7392:function(e,t,n){var r,s,a=n(7854),o=n(8113),i=a.process,u=a.Deno,l=i&&i.versions||u&&u.version,c=l&&l.v8;c&&(r=c.split("."),s=r[0]>0&&r[0]<4?1:+(r[0]+r[1])),!s&&o&&(r=o.match(/Edge\/(\d+)/),(!r||r[1]>=74)&&(r=o.match(/Chrome\/(\d+)/),r&&(s=+r[1]))),e.exports=s},748:function(e){e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},2109:function(e,t,n){var r=n(7854),s=n(1236).f,a=n(8880),o=n(8052),i=n(3072),u=n(9920),l=n(4705);e.exports=function(e,t){var n,c,h,p,d,f,m=e.target,g=e.global,y=e.stat;if(c=g?r:y?r[m]||i(m,{}):(r[m]||{}).prototype,c)for(h in t){if(d=t[h],e.dontCallGetSet?(f=s(c,h),p=f&&f.value):p=c[h],n=l(g?h:m+(y?".":"#")+h,e.forced),!n&&void 0!==p){if(typeof d==typeof p)continue;u(d,p)}(e.sham||p&&p.sham)&&a(d,"sham",!0),o(c,h,d,e)}}},7293:function(e){e.exports=function(e){try{return!!e()}catch(t){return!0}}},4374:function(e,t,n){var r=n(7293);e.exports=!r((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")}))},6916:function(e,t,n){var r=n(4374),s=Function.prototype.call;e.exports=r?s.bind(s):function(){return s.apply(s,arguments)}},6530:function(e,t,n){var r=n(9781),s=n(2597),a=Function.prototype,o=r&&Object.getOwnPropertyDescriptor,i=s(a,"name"),u=i&&"something"===function(){}.name,l=i&&(!r||r&&o(a,"name").configurable);e.exports={EXISTS:i,PROPER:u,CONFIGURABLE:l}},1702:function(e,t,n){var r=n(4374),s=Function.prototype,a=s.call,o=r&&s.bind.bind(a,a);e.exports=r?o:function(e){return function(){return a.apply(e,arguments)}}},5005:function(e,t,n){var r=n(7854),s=n(614),a=function(e){return s(e)?e:void 0};e.exports=function(e,t){return arguments.length<2?a(r[e]):r[e]&&r[e][t]}},8173:function(e,t,n){var r=n(9662),s=n(8554);e.exports=function(e,t){var n=e[t];return s(n)?void 0:r(n)}},7854:function(e,t,n){var r=function(e){return e&&e.Math==Math&&e};e.exports=r("object"==typeof globalThis&&globalThis)||r("object"==typeof window&&window)||r("object"==typeof self&&self)||r("object"==typeof n.g&&n.g)||function(){return this}()||Function("return this")()},2597:function(e,t,n){var r=n(1702),s=n(7908),a=r({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,t){return a(s(e),t)}},3501:function(e){e.exports={}},4664:function(e,t,n){var r=n(9781),s=n(7293),a=n(317);e.exports=!r&&!s((function(){return 7!=Object.defineProperty(a("div"),"a",{get:function(){return 7}}).a}))},8361:function(e,t,n){var r=n(1702),s=n(7293),a=n(4326),o=Object,i=r("".split);e.exports=s((function(){return!o("z").propertyIsEnumerable(0)}))?function(e){return"String"==a(e)?i(e,""):o(e)}:o},2788:function(e,t,n){var r=n(1702),s=n(614),a=n(5465),o=r(Function.toString);s(a.inspectSource)||(a.inspectSource=function(e){return o(e)}),e.exports=a.inspectSource},9909:function(e,t,n){var r,s,a,o=n(4811),i=n(7854),u=n(111),l=n(8880),c=n(2597),h=n(5465),p=n(6200),d=n(3501),f="Object already initialized",m=i.TypeError,g=i.WeakMap,y=function(e){return a(e)?s(e):r(e,{})},b=function(e){return function(t){var n;if(!u(t)||(n=s(t)).type!==e)throw m("Incompatible receiver, "+e+" required");return n}};if(o||h.state){var x=h.state||(h.state=new g);x.get=x.get,x.has=x.has,x.set=x.set,r=function(e,t){if(x.has(e))throw m(f);return t.facade=e,x.set(e,t),t},s=function(e){return x.get(e)||{}},a=function(e){return x.has(e)}}else{var v=p("state");d[v]=!0,r=function(e,t){if(c(e,v))throw m(f);return t.facade=e,l(e,v,t),t},s=function(e){return c(e,v)?e[v]:{}},a=function(e){return c(e,v)}}e.exports={set:r,get:s,has:a,enforce:y,getterFor:b}},3157:function(e,t,n){var r=n(4326);e.exports=Array.isArray||function(e){return"Array"==r(e)}},614:function(e,t,n){var r=n(4154),s=r.all;e.exports=r.IS_HTMLDDA?function(e){return"function"==typeof e||e===s}:function(e){return"function"==typeof e}},4705:function(e,t,n){var r=n(7293),s=n(614),a=/#|\.prototype\./,o=function(e,t){var n=u[i(e)];return n==c||n!=l&&(s(t)?r(t):!!t)},i=o.normalize=function(e){return String(e).replace(a,".").toLowerCase()},u=o.data={},l=o.NATIVE="N",c=o.POLYFILL="P";e.exports=o},8554:function(e){e.exports=function(e){return null===e||void 0===e}},111:function(e,t,n){var r=n(614),s=n(4154),a=s.all;e.exports=s.IS_HTMLDDA?function(e){return"object"==typeof e?null!==e:r(e)||e===a}:function(e){return"object"==typeof e?null!==e:r(e)}},1913:function(e){e.exports=!1},2190:function(e,t,n){var r=n(5005),s=n(614),a=n(7976),o=n(3307),i=Object;e.exports=o?function(e){return"symbol"==typeof e}:function(e){var t=r("Symbol");return s(t)&&a(t.prototype,i(e))}},6244:function(e,t,n){var r=n(7466);e.exports=function(e){return r(e.length)}},6339:function(e,t,n){var r=n(1702),s=n(7293),a=n(614),o=n(2597),i=n(9781),u=n(6530).CONFIGURABLE,l=n(2788),c=n(9909),h=c.enforce,p=c.get,d=String,f=Object.defineProperty,m=r("".slice),g=r("".replace),y=r([].join),b=i&&!s((function(){return 8!==f((function(){}),"length",{value:8}).length})),x=String(String).split("String"),v=e.exports=function(e,t,n){"Symbol("===m(d(t),0,7)&&(t="["+g(d(t),/^Symbol\(([^)]*)\)/,"$1")+"]"),n&&n.getter&&(t="get "+t),n&&n.setter&&(t="set "+t),(!o(e,"name")||u&&e.name!==t)&&(i?f(e,"name",{value:t,configurable:!0}):e.name=t),b&&n&&o(n,"arity")&&e.length!==n.arity&&f(e,"length",{value:n.arity});try{n&&o(n,"constructor")&&n.constructor?i&&f(e,"prototype",{writable:!1}):e.prototype&&(e.prototype=void 0)}catch(s){}var r=h(e);return o(r,"source")||(r.source=y(x,"string"==typeof t?t:"")),e};Function.prototype.toString=v((function(){return a(this)&&p(this).source||l(this)}),"toString")},4758:function(e){var t=Math.ceil,n=Math.floor;e.exports=Math.trunc||function(e){var r=+e;return(r>0?n:t)(r)}},3070:function(e,t,n){var r=n(9781),s=n(4664),a=n(3353),o=n(9670),i=n(4948),u=TypeError,l=Object.defineProperty,c=Object.getOwnPropertyDescriptor,h="enumerable",p="configurable",d="writable";t.f=r?a?function(e,t,n){if(o(e),t=i(t),o(n),"function"===typeof e&&"prototype"===t&&"value"in n&&d in n&&!n[d]){var r=c(e,t);r&&r[d]&&(e[t]=n.value,n={configurable:p in n?n[p]:r[p],enumerable:h in n?n[h]:r[h],writable:!1})}return l(e,t,n)}:l:function(e,t,n){if(o(e),t=i(t),o(n),s)try{return l(e,t,n)}catch(r){}if("get"in n||"set"in n)throw u("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},1236:function(e,t,n){var r=n(9781),s=n(6916),a=n(5296),o=n(9114),i=n(5656),u=n(4948),l=n(2597),c=n(4664),h=Object.getOwnPropertyDescriptor;t.f=r?h:function(e,t){if(e=i(e),t=u(t),c)try{return h(e,t)}catch(n){}if(l(e,t))return o(!s(a.f,e,t),e[t])}},8006:function(e,t,n){var r=n(6324),s=n(748),a=s.concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,a)}},5181:function(e,t){t.f=Object.getOwnPropertySymbols},7976:function(e,t,n){var r=n(1702);e.exports=r({}.isPrototypeOf)},6324:function(e,t,n){var r=n(1702),s=n(2597),a=n(5656),o=n(1318).indexOf,i=n(3501),u=r([].push);e.exports=function(e,t){var n,r=a(e),l=0,c=[];for(n in r)!s(i,n)&&s(r,n)&&u(c,n);while(t.length>l)s(r,n=t[l++])&&(~o(c,n)||u(c,n));return c}},5296:function(e,t){"use strict";var n={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,s=r&&!n.call({1:2},1);t.f=s?function(e){var t=r(this,e);return!!t&&t.enumerable}:n},2140:function(e,t,n){var r=n(6916),s=n(614),a=n(111),o=TypeError;e.exports=function(e,t){var n,i;if("string"===t&&s(n=e.toString)&&!a(i=r(n,e)))return i;if(s(n=e.valueOf)&&!a(i=r(n,e)))return i;if("string"!==t&&s(n=e.toString)&&!a(i=r(n,e)))return i;throw o("Can't convert object to primitive value")}},3887:function(e,t,n){var r=n(5005),s=n(1702),a=n(8006),o=n(5181),i=n(9670),u=s([].concat);e.exports=r("Reflect","ownKeys")||function(e){var t=a.f(i(e)),n=o.f;return n?u(t,n(e)):t}},4488:function(e,t,n){var r=n(8554),s=TypeError;e.exports=function(e){if(r(e))throw s("Can't call method on "+e);return e}},6200:function(e,t,n){var r=n(2309),s=n(9711),a=r("keys");e.exports=function(e){return a[e]||(a[e]=s(e))}},5465:function(e,t,n){var r=n(7854),s=n(3072),a="__core-js_shared__",o=r[a]||s(a,{});e.exports=o},2309:function(e,t,n){var r=n(1913),s=n(5465);(e.exports=function(e,t){return s[e]||(s[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.27.2",mode:r?"pure":"global",copyright:"© 2014-2023 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.27.2/LICENSE",source:"https://github.com/zloirock/core-js"})},6293:function(e,t,n){var r=n(7392),s=n(7293);e.exports=!!Object.getOwnPropertySymbols&&!s((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},1400:function(e,t,n){var r=n(9303),s=Math.max,a=Math.min;e.exports=function(e,t){var n=r(e);return n<0?s(n+t,0):a(n,t)}},5656:function(e,t,n){var r=n(8361),s=n(4488);e.exports=function(e){return r(s(e))}},9303:function(e,t,n){var r=n(4758);e.exports=function(e){var t=+e;return t!==t||0===t?0:r(t)}},7466:function(e,t,n){var r=n(9303),s=Math.min;e.exports=function(e){return e>0?s(r(e),9007199254740991):0}},7908:function(e,t,n){var r=n(4488),s=Object;e.exports=function(e){return s(r(e))}},7593:function(e,t,n){var r=n(6916),s=n(111),a=n(2190),o=n(8173),i=n(2140),u=n(5112),l=TypeError,c=u("toPrimitive");e.exports=function(e,t){if(!s(e)||a(e))return e;var n,u=o(e,c);if(u){if(void 0===t&&(t="default"),n=r(u,e,t),!s(n)||a(n))return n;throw l("Can't convert object to primitive value")}return void 0===t&&(t="number"),i(e,t)}},4948:function(e,t,n){var r=n(7593),s=n(2190);e.exports=function(e){var t=r(e,"string");return s(t)?t:t+""}},6330:function(e){var t=String;e.exports=function(e){try{return t(e)}catch(n){return"Object"}}},9711:function(e,t,n){var r=n(1702),s=0,a=Math.random(),o=r(1..toString);e.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+o(++s+a,36)}},3307:function(e,t,n){var r=n(6293);e.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},3353:function(e,t,n){var r=n(9781),s=n(7293);e.exports=r&&s((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},4811:function(e,t,n){var r=n(7854),s=n(614),a=r.WeakMap;e.exports=s(a)&&/native code/.test(String(a))},5112:function(e,t,n){var r=n(7854),s=n(2309),a=n(2597),o=n(9711),i=n(6293),u=n(3307),l=r.Symbol,c=s("wks"),h=u?l["for"]||l:l&&l.withoutSetter||o;e.exports=function(e){return a(c,e)||(c[e]=i&&a(l,e)?l[e]:h("Symbol."+e)),c[e]}},7658:function(e,t,n){"use strict";var r=n(2109),s=n(7908),a=n(6244),o=n(3658),i=n(7207),u=n(7293),l=u((function(){return 4294967297!==[].push.call({length:4294967296},1)})),c=function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(e){return e instanceof TypeError}},h=l||!c();r({target:"Array",proto:!0,arity:1,forced:h},{push:function(e){var t=s(this),n=a(t),r=arguments.length;i(n+r);for(var u=0;u<r;u++)t[n]=arguments[u],n++;return o(t,n),n}})},541:function(e,t,n){"use strict";var r=n(2109),s=n(7908),a=n(6244),o=n(3658),i=n(5117),u=n(7207),l=1!==[].unshift(0),c=function(){try{Object.defineProperty([],"length",{writable:!1}).unshift()}catch(e){return e instanceof TypeError}},h=l||!c();r({target:"Array",proto:!0,arity:1,forced:h},{unshift:function(e){var t=s(this),n=a(t),r=arguments.length;if(r){u(n+r);var l=n;while(l--){var c=l+r;l in t?t[c]=t[l]:i(t,c)}for(var h=0;h<r;h++)t[h]=arguments[h]}return o(t,n+r)}})},5113:function(e,t,n){"use strict";n.r(t),n.d(t,{Abs:function(){return rt},Acos:function(){return st},Acosh:function(){return at},AdadeltaOptimizer:function(){return ku},AdagradOptimizer:function(){return Nu},AdamOptimizer:function(){return Eu},AdamaxOptimizer:function(){return Lu},Add:function(){return ot},AddN:function(){return it},All:function(){return ut},Any:function(){return lt},ArgMax:function(){return ct},ArgMin:function(){return ht},Asin:function(){return pt},Asinh:function(){return dt},Atan:function(){return ft},Atan2:function(){return gt},Atanh:function(){return mt},AvgPool:function(){return yt},AvgPool3D:function(){return xt},AvgPool3DGrad:function(){return vt},AvgPoolGrad:function(){return bt},BatchMatMul:function(){return wt},BatchToSpaceND:function(){return kt},Bincount:function(){return It},BroadcastArgs:function(){return St},BroadcastTo:function(){return Nt},Callback:function(){return m_},CallbackList:function(){return dT},Cast:function(){return Tt},Ceil:function(){return Ct},ClipByValue:function(){return $t},Complex:function(){return Et},ComplexAbs:function(){return At},Concat:function(){return Rt},Conv2D:function(){return _t},Conv2DBackpropFilter:function(){return Ot},Conv2DBackpropInput:function(){return Ft},Conv3D:function(){return Dt},Conv3DBackpropFilterV2:function(){return Mt},Conv3DBackpropInputV2:function(){return Lt},Cos:function(){return zt},Cosh:function(){return Pt},CropAndResize:function(){return Vt},Cumprod:function(){return Bt},Cumsum:function(){return Wt},CustomCallback:function(){return gT},DataStorage:function(){return X},DenseBincount:function(){return Ut},DepthToSpace:function(){return Gt},DepthwiseConv2dNative:function(){return jt},DepthwiseConv2dNativeBackpropFilter:function(){return Ht},DepthwiseConv2dNativeBackpropInput:function(){return qt},Diag:function(){return Kt},Dilation2D:function(){return Xt},Dilation2DBackpropFilter:function(){return Yt},Dilation2DBackpropInput:function(){return Jt},ENV:function(){return Ze},EarlyStopping:function(){return b_},Einsum:function(){return Qt},Elu:function(){return en},EluGrad:function(){return tn},Environment:function(){return He},Equal:function(){return rn},Erf:function(){return nn},Exp:function(){return sn},ExpandDims:function(){return an},Expm1:function(){return on},FFT:function(){return un},Fill:function(){return ln},FlipLeftRight:function(){return cn},Floor:function(){return hn},FloorDiv:function(){return pn},FromPixels:function(){return ps},FusedBatchNorm:function(){return dn},FusedConv2D:function(){return ms},FusedDepthwiseConv2D:function(){return gs},GatherNd:function(){return mn},GatherV2:function(){return fn},GraphModel:function(){return hF},Greater:function(){return gn},GreaterEqual:function(){return yn},History:function(){return mT},IFFT:function(){return xn},Identity:function(){return bn},Imag:function(){return vn},InputSpec:function(){return hS},IsFinite:function(){return wn},IsInf:function(){return kn},IsNan:function(){return In},KernelBackend:function(){return J},LRN:function(){return Mn},LRNGrad:function(){return Ln},LayerVariable:function(){return iS},LayersModel:function(){return XC},LeakyRelu:function(){return Nn},Less:function(){return Sn},LessEqual:function(){return Tn},LinSpace:function(){return Cn},Log:function(){return $n},Log1p:function(){return En},LogSoftmax:function(){return Fn},LogicalAnd:function(){return An},LogicalNot:function(){return Rn},LogicalOr:function(){return _n},LogicalXor:function(){return On},LowerBound:function(){return Dn},Max:function(){return zn},MaxPool:function(){return Bn},MaxPool3D:function(){return Vn},MaxPool3DGrad:function(){return Un},MaxPoolGrad:function(){return Wn},MaxPoolWithArgmax:function(){return Gn},Maximum:function(){return Pn},Mean:function(){return jn},Min:function(){return Hn},Minimum:function(){return qn},MirrorPad:function(){return Kn},Mod:function(){return Xn},MomentumOptimizer:function(){return Pu},Multinomial:function(){return Jn},Multiply:function(){return Yn},Neg:function(){return Zn},NonMaxSuppressionV3:function(){return er},NonMaxSuppressionV4:function(){return tr},NonMaxSuppressionV5:function(){return nr},NotEqual:function(){return Qn},OP_SCOPE_SUFFIX:function(){return oo},OneHot:function(){return sr},OnesLike:function(){return rr},Optimizer:function(){return wu},OptimizerConstructors:function(){return Tc},Pack:function(){return ar},PadV2:function(){return or},Pool:function(){return ir},Pow:function(){return ur},Prelu:function(){return lr},Prod:function(){return cr},RMSPropOptimizer:function(){return Bu},RNN:function(){return uE},RaggedGather:function(){return hr},RaggedRange:function(){return pr},RaggedTensorToTensor:function(){return dr},Range:function(){return fr},Rank:function(){return $a},Real:function(){return mr},RealDiv:function(){return Zt},Reciprocal:function(){return gr},Reduction:function(){return Jb},Relu:function(){return yr},Relu6:function(){return Ir},Reshape:function(){return br},ResizeBilinear:function(){return wr},ResizeBilinearGrad:function(){return kr},ResizeNearestNeighbor:function(){return xr},ResizeNearestNeighborGrad:function(){return vr},Reverse:function(){return Nr},RotateWithOffset:function(){return ds},Round:function(){return Sr},Rsqrt:function(){return Tr},SGDOptimizer:function(){return zu},ScatterNd:function(){return Cr},SearchSorted:function(){return $r},Select:function(){return Er},Selu:function(){return Ar},Sequential:function(){return t$},Sigmoid:function(){return Dr},Sign:function(){return Fr},Sin:function(){return _r},Sinh:function(){return Or},Slice:function(){return Rr},Softmax:function(){return Wr},Softplus:function(){return Mr},SpaceToBatchND:function(){return Pr},SparseFillEmptyRows:function(){return Vr},SparseReshape:function(){return Ur},SparseSegmentMean:function(){return Gr},SparseSegmentSum:function(){return jr},SparseToDense:function(){return Hr},SplitV:function(){return Br},Sqrt:function(){return Lr},Square:function(){return Kr},SquaredDifference:function(){return qr},Step:function(){return hs},StridedSlice:function(){return Xr},StringNGrams:function(){return Jr},StringSplit:function(){return Yr},StringToHashBucketFast:function(){return Zr},Sub:function(){return Qr},Sum:function(){return zr},SymbolicTensor:function(){return pS},Tan:function(){return es},Tanh:function(){return ts},Tensor:function(){return Sa},TensorBuffer:function(){return ba},Tile:function(){return ns},TopK:function(){return rs},Transform:function(){return ss},Transpose:function(){return as},Unique:function(){return os},Unpack:function(){return is},UnsortedSegmentSum:function(){return us},UpperBound:function(){return ls},Variable:function(){return Ca},ZerosLike:function(){return cs},_FusedMatMul:function(){return fs},abs:function(){return Ru},acos:function(){return $c},acosh:function(){return Ac},add:function(){return Yi},addN:function(){return _c},all:function(){return Fc},any:function(){return Mc},argMax:function(){return zc},argMin:function(){return Bc},asin:function(){return Vc},asinh:function(){return Gc},atan:function(){return Hc},atan2:function(){return Kc},atanh:function(){return Jc},avgPool:function(){return xh},avgPool3d:function(){return wh},backend:function(){return Ki},backend_util:function(){return y},basicLSTMCell:function(){return Rh},batchNorm:function(){return Mh},batchNorm2d:function(){return zh},batchNorm3d:function(){return Bh},batchNorm4d:function(){return Vh},batchToSpaceND:function(){return Oh},bincount:function(){return Gh},booleanMaskAsync:function(){return my},broadcastArgs:function(){return Hh},broadcastTo:function(){return Kh},broadcast_util:function(){return i},browser:function(){return c},buffer:function(){return ki},callbacks:function(){return v_},cast:function(){return Ni},ceil:function(){return Jh},clipByValue:function(){return Zh},clone:function(){return Ti},complex:function(){return lo},concat:function(){return Ih},concat1d:function(){return ep},concat2d:function(){return np},concat3d:function(){return sp},concat4d:function(){return op},constraints:function(){return x},conv1d:function(){return cp},conv2d:function(){return up},conv2dTranspose:function(){return fp},conv3d:function(){return gp},conv3dTranspose:function(){return vp},copyRegisteredKernels:function(){return $s},cos:function(){return kp},cosh:function(){return Np},cosineWindow:function(){return Ey},cumprod:function(){return Tp},cumsum:function(){return $p},customGrad:function(){return mu},data:function(){return j},denseBincount:function(){return Ap},deprecationWarn:function(){return _i},depthToSpace:function(){return _p},depthwiseConv2d:function(){return Fp},deregisterOp:function(){return C_},device_util:function(){return a},diag:function(){return Mp},dilation2d:function(){return zp},disableDeprecationWarnings:function(){return Ri},dispose:function(){return zi},disposeVariables:function(){return Oi},div:function(){return tu},divNoNan:function(){return Gp},dot:function(){return Hp},dropout:function(){return Cy},einsum:function(){return Kp},elu:function(){return Jp},enableDebugMode:function(){return Ai},enableProdMode:function(){return Ei},enclosingPowerOfTwo:function(){return $y},engine:function(){return Fi},env:function(){return Je},equal:function(){return Bp},erf:function(){return Zp},euclideanNorm:function(){return yd},exp:function(){return xd},expandDims:function(){return wd},expm1:function(){return Id},eye:function(){return Cd},fft:function(){return Cg},fill:function(){return Iu},findBackend:function(){return ji},findBackendFactory:function(){return Hi},floor:function(){return Ed},floorDiv:function(){return Qi},fused:function(){return m},gather:function(){return Rd},gatherND:function(){return Ny},gather_util:function(){return h},getBackend:function(){return Ui},getGradient:function(){return ks},getKernel:function(){return ws},getKernelsForBackend:function(){return Is},grad:function(){return cu},grads:function(){return hu},greater:function(){return Od},greaterEqual:function(){return Dd},ifft:function(){return Eg},imag:function(){return kl},image:function(){return Ox},inTopKAsync:function(){return Ry},initializers:function(){return v},input:function(){return s$},io:function(){return u},irfft:function(){return Rg},isFinite:function(){return Ld},isInf:function(){return Pd},isNaN:function(){return Wd},keep:function(){return Pi},kernel_impls:function(){return b},layers:function(){return w},leakyRelu:function(){return Ud},less:function(){return jd},lessEqual:function(){return qd},linalg:function(){return Fx},linspace:function(){return Kd},loadGraphModel:function(){return pF},loadGraphModelSync:function(){return dF},loadLayersModel:function(){return ZC},localResponseNormalization:function(){return Jd},log:function(){return Zd},log1p:function(){return ef},logSigmoid:function(){return sf},logSoftmax:function(){return of},logSumExp:function(){return lf},logicalAnd:function(){return hf},logicalNot:function(){return df},logicalOr:function(){return mf},logicalXor:function(){return yf},losses:function(){return Dx},lowerBound:function(){return wf},matMul:function(){return bl},math:function(){return l},max:function(){return ud},maxPool:function(){return If},maxPool3d:function(){return Sf},maxPoolWithArgmax:function(){return Cf},maximum:function(){return Mu},mean:function(){return Ef},memory:function(){return Di},meshgrid:function(){return _f},metrics:function(){return k},min:function(){return cd},minimum:function(){return Ff},mirrorPad:function(){return Mf},mod:function(){return zf},model:function(){return n$},models:function(){return I},moments:function(){return Bf},movingAverage:function(){return yy},mul:function(){return ru},multiRNNCell:function(){return Vf},multinomial:function(){return Gf},neg:function(){return Nl},nextFrame:function(){return Bx},norm:function(){return md},notEqual:function(){return Hf},oneHot:function(){return vl},ones:function(){return Rf},onesLike:function(){return Kf},op:function(){return io},outerProduct:function(){return Jf},pad:function(){return Zf},pad1d:function(){return em},pad2d:function(){return nm},pad3d:function(){return sm},pad4d:function(){return om},pool:function(){return pm},pow:function(){return Tu},prelu:function(){return fm},print:function(){return Ci},prod:function(){return gm},profile:function(){return Mi},raggedGather:function(){return bm},raggedRange:function(){return vm},raggedTensorToTensor:function(){return km},rand:function(){return Nm},randomGamma:function(){return Am},randomNormal:function(){return _m},randomStandardNormal:function(){return Fm},randomUniform:function(){return Mm},range:function(){return Lm},ready:function(){return Vi},real:function(){return Tl},reciprocal:function(){return Pm},registerBackend:function(){return qi},registerCallbackConstructor:function(){return a$},registerGradient:function(){return Ss},registerKernel:function(){return Ns},registerOp:function(){return S_},regularizers:function(){return N},relu:function(){return Wm},relu6:function(){return Um},removeBackend:function(){return Gi},reshape:function(){return yh},reverse:function(){return jm},reverse1d:function(){return qm},reverse2d:function(){return Xm},reverse3d:function(){return Ym},reverse4d:function(){return Qm},rfft:function(){return Dg},round:function(){return tg},rsqrt:function(){return rg},scalar:function(){return yu},scatterND:function(){return xy},scatter_util:function(){return p},searchSorted:function(){return vf},selu:function(){return ag},separableConv2d:function(){return ig},sequential:function(){return r$},serialization:function(){return o},setBackend:function(){return Wi},setPlatform:function(){return Xi},setdiff1dAsync:function(){return lg},sigmoid:function(){return Sh},sign:function(){return hg},signal:function(){return _x},sin:function(){return dg},sinh:function(){return mg},slice:function(){return Ch},slice1d:function(){return yg},slice2d:function(){return xg},slice3d:function(){return wg},slice4d:function(){return Ig},slice_util:function(){return d},softmax:function(){return Sg},softplus:function(){return nf},spaceToBatchND:function(){return um},sparse:function(){return Mx},sparseToDense:function(){return ky},spectral:function(){return Rx},split:function(){return Og},sqrt:function(){return au},square:function(){return iu},squaredDifference:function(){return Lg},squeeze:function(){return Pg},stack:function(){return Wg},step:function(){return Ug},stridedSlice:function(){return jg},string:function(){return Lx},sub:function(){return $u},sum:function(){return pd},sumOutType:function(){return Da},tan:function(){return qg},tanh:function(){return Eh},tensor:function(){return ho},tensor1d:function(){return Kg},tensor2d:function(){return Xg},tensor3d:function(){return Rl},tensor4d:function(){return Jg},tensor5d:function(){return Yg},tensor6d:function(){return Zg},tensor_util:function(){return s},test_util:function(){return f},tidy:function(){return Li},tile:function(){return Sd},time:function(){return Bi},topk:function(){return ey},train:function(){return zx},transpose:function(){return $l},truncatedNormal:function(){return ny},unique:function(){return sy},unregisterGradient:function(){return Cs},unregisterKernel:function(){return Ts},unsortedSegmentSum:function(){return oy},unstack:function(){return uy},upcastType:function(){return Fa},upperBound:function(){return ly},util:function(){return r},valueAndGrad:function(){return pu},valueAndGrads:function(){return du},variable:function(){return cy},variableGrads:function(){return fu},version:function(){return S4},version_converter:function(){return mF},version_core:function(){return Sc},version_layers:function(){return xC},where:function(){return Vp},whereAsync:function(){return dy},zeros:function(){return Af},zerosLike:function(){return lu}});var r={};n.r(r),n.d(r,{arraysEqual:function(){return he},assert:function(){return oe},assertNonNegativeIntegerDimensions:function(){return We},assertNonNull:function(){return ue},assertShapesMatch:function(){return ie},bytesFromStringArray:function(){return Ce},bytesPerElement:function(){return Te},checkConversionForErrors:function(){return Ie},clamp:function(){return ee},computeStrides:function(){return Fe},convertBackendValuesAndArrayBuffer:function(){return Le},createScalarValue:function(){return Xs},createShuffledIndices:function(){return me},decodeString:function(){return ta},distSquared:function(){return ae},encodeString:function(){return ea},fetch:function(){return Qs},fingerPrint64:function(){return Ks},flatten:function(){return ra},getArrayFromDType:function(){return ke},getTypedArrayFromDType:function(){return we},hasEncodingLoss:function(){return Se},hexToLong:function(){return Os},indexToLoc:function(){return Ue},inferDtype:function(){return Re},inferFromImplicitShape:function(){return be},isBoolean:function(){return Ee},isFunction:function(){return _e},isInt:function(){return pe},isNumber:function(){return Ae},isPromise:function(){return Ge},isScalarShape:function(){return ce},isString:function(){return $e},isTypedArray:function(){return na},isValidDtype:function(){return Ne},locToIndex:function(){return Ve},makeOnesTypedArray:function(){return ze},makeZerosNestedTypedArray:function(){return Be},makeZerosTypedArray:function(){return Pe},nearestDivisor:function(){return Oe},nearestLargerEven:function(){return te},now:function(){return Zs},parseAxisParam:function(){return xe},randUniform:function(){return se},repeatedTry:function(){return ye},rightPad:function(){return ge},shuffle:function(){return Z},shuffleCombo:function(){return Q},sizeFromShape:function(){return le},sizeToSquarishShape:function(){return fe},squeezeShape:function(){return ve},sum:function(){return re},swap:function(){return ne},tanh:function(){return de},toNestedArray:function(){return Me},toTypedArray:function(){return Ys}});var s={};n.r(s),n.d(s,{assertTypesMatch:function(){return La},getTensorsInContainer:function(){return Pa},isTensorInList:function(){return za},makeTypesMatch:function(){return Ma}});var a={};n.r(a),n.d(a,{isBrowser:function(){return Qa},isMobile:function(){return Za},mockIsMobile:function(){return Ya}});var o={};n.r(o),n.d(o,{Serializable:function(){return bu},SerializationMap:function(){return xu},registerClass:function(){return vu}});var i={};n.r(i),n.d(i,{assertAndGetBroadcastShape:function(){return Fu},getBroadcastDims:function(){return _u},getReductionAxes:function(){return Ou}});var u={};n.r(u),n.d(u,{browserFiles:function(){return Yu},browserHTTPRequest:function(){return ll},concatenateArrayBuffers:function(){return ko},copyModel:function(){return gi},decodeWeights:function(){return go},encodeWeights:function(){return mo},fromMemory:function(){return dl},fromMemorySync:function(){return fl},getLoadHandlers:function(){return Lo},getModelArtifactsForJSON:function(){return To},getModelArtifactsForJSONSync:function(){return So},getModelArtifactsInfoForJSON:function(){return Co},getSaveHandlers:function(){return Mo},getWeightSpecs:function(){return $o},http:function(){return ul},isHTTPScheme:function(){return ol},listModels:function(){return fi},loadWeights:function(){return el},moveModel:function(){return yi},registerLoadRouter:function(){return Do},registerSaveRouter:function(){return Fo},removeModel:function(){return mi},weightsLoaderFactory:function(){return tl},withSaveHandler:function(){return ml},withSaveHandlerSync:function(){return gl}});var l={};n.r(l),n.d(l,{confusionMatrix:function(){return Al}});var c={};n.r(c),n.d(c,{fromPixels:function(){return Bl},fromPixelsAsync:function(){return zl},toPixels:function(){return Pl}});var h={};n.r(h),n.d(h,{prepareAndValidate:function(){return Wl}});var p={};n.r(p),n.d(p,{calculateShapes:function(){return Gl},validateInput:function(){return Ul},validateUpdateShape:function(){return Vl}});var d={};n.r(d),n.d(d,{assertParamsValid:function(){return ql},computeFlatOffset:function(){return oc},computeOutShape:function(){return Xl},getNormalizedAxes:function(){return Ql},isSliceContinous:function(){return ac},maskToAxes:function(){return Kl},parseSliceParams:function(){return ic},sliceInfo:function(){return uc},startForAxis:function(){return rc},startIndicesWithElidedDims:function(){return ec},stopForAxis:function(){return sc},stopIndicesWithElidedDims:function(){return tc},stridesForAxis:function(){return nc},stridesWithElidedDims:function(){return Jl}});var f={};n.r(f),n.d(f,{TEST_EPSILON_FLOAT16:function(){return pc},createVideoElement:function(){return Ic},encodeStrings:function(){return kc},expectArrayBuffersEqual:function(){return wc},expectArraysClose:function(){return dc},expectArraysEqual:function(){return yc},expectNumbersClose:function(){return bc},expectPromiseToFail:function(){return gc},expectValuesInRange:function(){return vc},play:function(){return Nc},testEpsilon:function(){return fc}});var m={};n.r(m),n.d(m,{conv2d:function(){return Py},depthwiseConv2d:function(){return jy},matMul:function(){return qy}});var g={};n.r(g),n.d(g,{collectGatherOpShapeInfo:function(){return Uv},computeOutShape:function(){return Vv},segOpComputeOptimalWindowSize:function(){return Wv}});var y={};n.r(y),n.d(y,{ERF_A1:function(){return av},ERF_A2:function(){return ov},ERF_A3:function(){return iv},ERF_A4:function(){return uv},ERF_A5:function(){return lv},ERF_P:function(){return sv},PARALLELIZE_THRESHOLD:function(){return Kx},RowPartitionType:function(){return Ux},SELU_SCALE:function(){return rv},SELU_SCALEALPHA:function(){return nv},applyActivation:function(){return My},assertAndGetBroadcastShape:function(){return Fu},assertAxesAreInnerMostDims:function(){return rd},assertParamsConsistent:function(){return Wx},assignToTypedArray:function(){return mv},axesAreInnerMostDims:function(){return Qp},calculateShapes:function(){return Gl},checkEinsumDimSizes:function(){return Nv},checkPadOnDimRoundingMode:function(){return mh},combineLocations:function(){return ed},combineRaggedTensorToTensorShapes:function(){return Gx},complexWithEvenIndex:function(){return pv},complexWithOddIndex:function(){return dv},computeConv2DInfo:function(){return eh},computeConv3DInfo:function(){return th},computeDefaultPad:function(){return sh},computeDilation2DInfo:function(){return Yc},computeOptimalWindowSize:function(){return Xx},computeOutAndReduceShapes:function(){return td},computeOutShape:function(){return Vx},computePool2DInfo:function(){return Zc},computePool3DInfo:function(){return Qc},convertConv2DDataFormat:function(){return fh},decodeEinsumEquation:function(){return kv},eitherStridesOrDilationsAreOne:function(){return ph},expandShapeToKeepDim:function(){return nd},exponent:function(){return yv},exponents:function(){return gv},fromStringArrayToUint8:function(){return jv},fromUint8ToStringArray:function(){return Gv},getAxesPermutation:function(){return sd},getBroadcastDims:function(){return _u},getComplexWithIndex:function(){return fv},getEinsumComputePath:function(){return Sv},getEinsumPermutation:function(){return Iv},getFusedBiasGradient:function(){return Dy},getFusedDyActivation:function(){return Fy},getImageCenter:function(){return Jx},getInnerMostAxes:function(){return od},getPermuted:function(){return Zx},getRaggedRank:function(){return Hx},getReductionAxes:function(){return Ou},getReshaped:function(){return Yx},getReshapedPermuted:function(){return Qx},getRowPartitionTypesHelper:function(){return jx},getSliceBeginCoords:function(){return ev},getSliceSize:function(){return tv},getSparseFillEmptyRowsIndicesDenseShapeMismatch:function(){return Ev},getSparseFillEmptyRowsNegativeIndexErrorMessage:function(){return Av},getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:function(){return Rv},getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:function(){return Fv},getSparseReshapeInputOutputMismatchErrorMessage:function(){return Mv},getSparseReshapeInputOutputMultipleErrorMessage:function(){return Dv},getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:function(){return _v},getSparseReshapeNegativeOutputDimErrorMessage:function(){return Ov},getSparseSegmentReductionIndicesOutOfRangeErrorMessage:function(){return Bv},getSparseSegmentReductionNegativeSegmentIdsErrorMessage:function(){return Lv},getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:function(){return zv},getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:function(){return Pv},getUndoAxesPermutation:function(){return ad},isIdentityPermutation:function(){return Tv},log:function(){return bs},mergeRealAndImagArrays:function(){return cv},prepareAndValidate:function(){return Wl},prepareSplitSize:function(){return $v},segment_util:function(){return g},shouldFuse:function(){return Ly},slice_util:function(){return d},splitRealAndImagArrays:function(){return hv},stridesOrDilationsArePositive:function(){return dh},tupleValuesAreOne:function(){return hh},upcastType:function(){return Fa},validateDefaultValueShape:function(){return qx},validateInput:function(){return Ul},validateUpdateShape:function(){return Vl},warn:function(){return ys}});var b={};n.r(b),n.d(b,{nonMaxSuppressionV3Impl:function(){return yb},nonMaxSuppressionV4Impl:function(){return bb},nonMaxSuppressionV5Impl:function(){return xb},whereImpl:function(){return hy}});var x={};n.r(x),n.d(x,{maxNorm:function(){return US},minMaxNorm:function(){return HS},nonNeg:function(){return jS},unitNorm:function(){return GS}});var v={};n.r(v),n.d(v,{constant:function(){return XS},glorotNormal:function(){return nT},glorotUniform:function(){return tT},heNormal:function(){return rT},heUniform:function(){return sT},identity:function(){return QS},leCunNormal:function(){return aT},leCunUniform:function(){return oT},ones:function(){return KS},orthogonal:function(){return iT},randomNormal:function(){return YS},randomUniform:function(){return JS},truncatedNormal:function(){return ZS},varianceScaling:function(){return eT},zeros:function(){return qS}});var w={};n.r(w),n.d(w,{Layer:function(){return gS},RNN:function(){return uE},RNNCell:function(){return lE},activation:function(){return HA},add:function(){return tR},alphaDropout:function(){return jR},average:function(){return nR},averagePooling1d:function(){return hR},averagePooling2d:function(){return fR},averagePooling3d:function(){return yR},avgPool1d:function(){return pR},avgPool2d:function(){return mR},avgPool3d:function(){return bR},avgPooling1d:function(){return dR},avgPooling2d:function(){return gR},avgPooling3d:function(){return xR},batchNormalization:function(){return uR},bidirectional:function(){return LR},categoryEncoding:function(){return JR},centerCrop:function(){return KR},concatenate:function(){return rR},conv1d:function(){return LA},conv2d:function(){return zA},conv2dTranspose:function(){return PA},conv3d:function(){return BA},conv3dTranspose:function(){return WA},convLstm2d:function(){return OR},convLstm2dCell:function(){return FR},cropping2D:function(){return UA},dense:function(){return qA},depthwiseConv2d:function(){return jA},dot:function(){return iR},dropout:function(){return KA},elu:function(){return RA},embedding:function(){return eR},flatten:function(){return JA},gaussianDropout:function(){return GR},gaussianNoise:function(){return UR},globalAveragePooling1d:function(){return vR},globalAveragePooling2d:function(){return wR},globalMaxPool1d:function(){return PR},globalMaxPool2d:function(){return BR},globalMaxPooling1d:function(){return kR},globalMaxPooling2d:function(){return IR},gru:function(){return CR},gruCell:function(){return $R},input:function(){return s$},inputLayer:function(){return AA},layerNormalization:function(){return lR},leakyReLU:function(){return OA},lstm:function(){return ER},lstmCell:function(){return AR},masking:function(){return HR},maxPool1d:function(){return WR},maxPool2d:function(){return VR},maxPooling1d:function(){return NR},maxPooling2d:function(){return SR},maxPooling3d:function(){return TR},maximum:function(){return sR},minimum:function(){return aR},multiply:function(){return oR},permute:function(){return QA},prelu:function(){return FA},reLU:function(){return _A},repeatVector:function(){return YA},rescaling:function(){return qR},reshape:function(){return ZA},resizing:function(){return XR},rnn:function(){return DR},separableConv2d:function(){return VA},simpleRNN:function(){return RR},simpleRNNCell:function(){return _R},softmax:function(){return DA},spatialDropout1d:function(){return XA},stackedRNNCells:function(){return MR},thresholdedReLU:function(){return MA},timeDistributed:function(){return zR},upSampling2d:function(){return GA},zeroPadding2d:function(){return cR}});var k={};n.r(k),n.d(k,{MAPE:function(){return i_},MSE:function(){return c_},binaryAccuracy:function(){return YR},binaryCrossentropy:function(){return ZR},categoricalAccuracy:function(){return e_},categoricalCrossentropy:function(){return t_},cosineProximity:function(){return s_},mape:function(){return u_},meanAbsoluteError:function(){return a_},meanAbsolutePercentageError:function(){return o_},meanSquaredError:function(){return l_},mse:function(){return h_},precision:function(){return n_},recall:function(){return r_},sparseCategoricalAccuracy:function(){return QR}});var I={};n.r(I),n.d(I,{modelFromJSON:function(){return YC}});var N={};n.r(N),n.d(N,{l1:function(){return d_},l1l2:function(){return p_},l2:function(){return f_}});var S={};n.r(S),n.d(S,{json:function(){return M_}});var T={};n.r(T),n.d(T,{json:function(){return L_}});var C={};n.r(C),n.d(C,{json:function(){return z_}});var $={};n.r($),n.d($,{json:function(){return P_}});var E={};n.r(E),n.d(E,{json:function(){return B_}});var A={};n.r(A),n.d(A,{json:function(){return W_}});var R={};n.r(R),n.d(R,{json:function(){return V_}});var _={};n.r(_),n.d(_,{json:function(){return U_}});var O={};n.r(O),n.d(O,{json:function(){return G_}});var F={};n.r(F),n.d(F,{json:function(){return j_}});var D={};n.r(D),n.d(D,{json:function(){return H_}});var M={};n.r(M),n.d(M,{json:function(){return q_}});var L={};n.r(L),n.d(L,{json:function(){return K_}});var z={};n.r(z),n.d(z,{json:function(){return X_}});var P={};n.r(P),n.d(P,{json:function(){return J_}});var B={};n.r(B),n.d(B,{json:function(){return Y_}});var W={};n.r(W),n.d(W,{json:function(){return Z_}});var V={};n.r(V),n.d(V,{json:function(){return Q_}});var U={};n.r(U),n.d(U,{json:function(){return eO}});var G={};n.r(G),n.d(G,{OP_SCOPE_SUFFIX:function(){return oo},abs:function(){return Ru},acos:function(){return $c},acosh:function(){return Ac},add:function(){return Yi},addN:function(){return _c},all:function(){return Fc},any:function(){return Mc},argMax:function(){return zc},argMin:function(){return Bc},asin:function(){return Vc},asinh:function(){return Gc},atan:function(){return Hc},atan2:function(){return Kc},atanh:function(){return Jc},avgPool:function(){return xh},avgPool3d:function(){return wh},basicLSTMCell:function(){return Rh},batchNorm:function(){return Mh},batchNorm2d:function(){return zh},batchNorm3d:function(){return Bh},batchNorm4d:function(){return Vh},batchToSpaceND:function(){return Oh},bincount:function(){return Gh},booleanMaskAsync:function(){return my},broadcastArgs:function(){return Hh},broadcastTo:function(){return Kh},buffer:function(){return ki},cast:function(){return Ni},ceil:function(){return Jh},clipByValue:function(){return Zh},clone:function(){return Ti},complex:function(){return lo},concat:function(){return Ih},concat1d:function(){return ep},concat2d:function(){return np},concat3d:function(){return sp},concat4d:function(){return op},conv1d:function(){return cp},conv2d:function(){return up},conv2dTranspose:function(){return fp},conv3d:function(){return gp},conv3dTranspose:function(){return vp},cos:function(){return kp},cosh:function(){return Np},cosineWindow:function(){return Ey},cumprod:function(){return Tp},cumsum:function(){return $p},denseBincount:function(){return Ap},depthToSpace:function(){return _p},depthwiseConv2d:function(){return Fp},diag:function(){return Mp},dilation2d:function(){return zp},div:function(){return tu},divNoNan:function(){return Gp},dot:function(){return Hp},dropout:function(){return Cy},einsum:function(){return Kp},elu:function(){return Jp},enclosingPowerOfTwo:function(){return $y},equal:function(){return Bp},erf:function(){return Zp},euclideanNorm:function(){return yd},exp:function(){return xd},expandDims:function(){return wd},expm1:function(){return Id},eye:function(){return Cd},fft:function(){return Cg},fill:function(){return Iu},floor:function(){return Ed},floorDiv:function(){return Qi},fused:function(){return m},gather:function(){return Rd},gatherND:function(){return Ny},greater:function(){return Od},greaterEqual:function(){return Dd},ifft:function(){return Eg},imag:function(){return kl},image:function(){return Ox},inTopKAsync:function(){return Ry},irfft:function(){return Rg},isFinite:function(){return Ld},isInf:function(){return Pd},isNaN:function(){return Wd},leakyRelu:function(){return Ud},less:function(){return jd},lessEqual:function(){return qd},linalg:function(){return Fx},linspace:function(){return Kd},localResponseNormalization:function(){return Jd},log:function(){return Zd},log1p:function(){return ef},logSigmoid:function(){return sf},logSoftmax:function(){return of},logSumExp:function(){return lf},logicalAnd:function(){return hf},logicalNot:function(){return df},logicalOr:function(){return mf},logicalXor:function(){return yf},losses:function(){return Dx},lowerBound:function(){return wf},matMul:function(){return bl},max:function(){return ud},maxPool:function(){return If},maxPool3d:function(){return Sf},maxPoolWithArgmax:function(){return Cf},maximum:function(){return Mu},mean:function(){return Ef},meshgrid:function(){return _f},min:function(){return cd},minimum:function(){return Ff},mirrorPad:function(){return Mf},mod:function(){return zf},moments:function(){return Bf},movingAverage:function(){return yy},mul:function(){return ru},multiRNNCell:function(){return Vf},multinomial:function(){return Gf},neg:function(){return Nl},norm:function(){return md},notEqual:function(){return Hf},oneHot:function(){return vl},ones:function(){return Rf},onesLike:function(){return Kf},op:function(){return io},outerProduct:function(){return Jf},pad:function(){return Zf},pad1d:function(){return em},pad2d:function(){return nm},pad3d:function(){return sm},pad4d:function(){return om},pool:function(){return pm},pow:function(){return Tu},prelu:function(){return fm},print:function(){return Ci},prod:function(){return gm},raggedGather:function(){return bm},raggedRange:function(){return vm},raggedTensorToTensor:function(){return km},rand:function(){return Nm},randomGamma:function(){return Am},randomNormal:function(){return _m},randomStandardNormal:function(){return Fm},randomUniform:function(){return Mm},range:function(){return Lm},real:function(){return Tl},reciprocal:function(){return Pm},relu:function(){return Wm},relu6:function(){return Um},reshape:function(){return yh},reverse:function(){return jm},reverse1d:function(){return qm},reverse2d:function(){return Xm},reverse3d:function(){return Ym},reverse4d:function(){return Qm},rfft:function(){return Dg},round:function(){return tg},rsqrt:function(){return rg},scalar:function(){return yu},scatterND:function(){return xy},searchSorted:function(){return vf},selu:function(){return ag},separableConv2d:function(){return ig},setdiff1dAsync:function(){return lg},sigmoid:function(){return Sh},sign:function(){return hg},signal:function(){return _x},sin:function(){return dg},sinh:function(){return mg},slice:function(){return Ch},slice1d:function(){return yg},slice2d:function(){return xg},slice3d:function(){return wg},slice4d:function(){return Ig},softmax:function(){return Sg},softplus:function(){return nf},spaceToBatchND:function(){return um},sparse:function(){return Mx},sparseToDense:function(){return ky},spectral:function(){return Rx},split:function(){return Og},sqrt:function(){return au},square:function(){return iu},squaredDifference:function(){return Lg},squeeze:function(){return Pg},stack:function(){return Wg},step:function(){return Ug},stridedSlice:function(){return jg},string:function(){return Lx},sub:function(){return $u},sum:function(){return pd},tan:function(){return qg},tanh:function(){return Eh},tensor:function(){return ho},tensor1d:function(){return Kg},tensor2d:function(){return Xg},tensor3d:function(){return Rl},tensor4d:function(){return Jg},tensor5d:function(){return Yg},tensor6d:function(){return Zg},tile:function(){return Sd},topk:function(){return ey},transpose:function(){return $l},truncatedNormal:function(){return ny},unique:function(){return sy},unsortedSegmentSum:function(){return oy},unstack:function(){return uy},upperBound:function(){return ly},variable:function(){return cy},where:function(){return Vp},whereAsync:function(){return dy},zeros:function(){return Af},zerosLike:function(){return lu}});var j={};n.r(j),n.d(j,{CSVDataset:function(){return cD},Dataset:function(){return YF},FileDataSource:function(){return ND},TextLineDataset:function(){return rD},URLDataSource:function(){return SD},array:function(){return QF},csv:function(){return TD},func:function(){return CD},generator:function(){return $D},microphone:function(){return AD},version_data:function(){return RD},webcam:function(){return ED},zip:function(){return eD}});var H={};n.r(H),n.d(H,{addImpl:function(){return dM},bincountImpl:function(){return xL},bincountReduceImpl:function(){return vL},castImpl:function(){return uM},ceilImpl:function(){return SL},concatImpl:function(){return _L},equalImpl:function(){return Az},expImpl:function(){return Wz},expm1Impl:function(){return Hz},floorImpl:function(){return dP},gatherNdImpl:function(){return IP},gatherV2Impl:function(){return TP},greaterEqualImpl:function(){return _P},greaterImpl:function(){return EP},lessEqualImpl:function(){return HP},lessImpl:function(){return UP},linSpaceImpl:function(){return XP},logImpl:function(){return ZP},maxImpl:function(){return mB},maximumImpl:function(){return bB},minimumImpl:function(){return DB},multiplyImpl:function(){return vz},negImpl:function(){return qB},notEqualImpl:function(){return aW},prodImpl:function(){return wW},raggedGatherImpl:function(){return RW},raggedRangeImpl:function(){return DW},raggedTensorToTensorImpl:function(){return VW},rangeImpl:function(){return jW},rsqrtImpl:function(){return lV},scatterImpl:function(){return pV},sigmoidImpl:function(){return QD},simpleAbsImpl:function(){return IM},sliceImpl:function(){return fL},sparseFillEmptyRowsImpl:function(){return zV},sparseReshapeImpl:function(){return WV},sparseSegmentReductionImpl:function(){return GV},sqrtImpl:function(){return QV},squaredDifferenceImpl:function(){return rU},stridedSliceImpl:function(){return uU},stringNGramsImpl:function(){return pU},stringSplitImpl:function(){return gU},stringToHashBucketFastImpl:function(){return xU},subImpl:function(){return Zz},tileImpl:function(){return TU},topKImpl:function(){return RU},transposeImpl:function(){return _M},uniqueImpl:function(){return GU}});n(6728);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const q=1e-7,K=1e-4;class X{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class J{refCount(e){return Y("refCount")}incRef(e){return Y("incRef")}timerAvailable(){return!0}time(e){return Y("time")}read(e){return Y("read")}readSync(e){return Y("readSync")}readToGPU(e,t){return Y("readToGPU")}numDataIds(){return Y("numDataIds")}disposeData(e,t){return Y("disposeData")}write(e,t,n){return Y("write")}move(e,t,n,r,s){return Y("move")}createTensorFromGPUData(e,t,n){return Y("createTensorFromGPUData")}memory(){return Y("memory")}floatPrecision(){return Y("floatPrecision")}epsilon(){return 32===this.floatPrecision()?q:K}dispose(){return Y("dispose")}}function Y(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}n(103);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Z(e){let t=e.length,n=0;while(t>0)n=Math.random()*t|0,t--,ne(e,t,n)}function Q(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;while(n>0)r=Math.random()*n|0,n--,ne(e,n,r),ne(t,n,r)}function ee(e,t,n){return Math.max(e,Math.min(t,n))}function te(e){return e%2===0?e:e+1}function ne(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function re(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function se(e,t){const n=Math.random();return t*n+(1-n)*e}function ae(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n}function oe(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function ie(e,t,n=""){oe(he(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function ue(e){oe(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function le(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function ce(e){return 0===e.length}function he(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function pe(e){return e%1===0}function de(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function fe(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function me(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return Z(t),t}function ge(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function ye(e,t=(e=>0),n,r){return new Promise(((s,a)=>{let o=0;const i=()=>{if(e())return void s();o++;const u=t(o);null!=n&&o>=n?a():null!=r?r(i,u):setTimeout(i,u)};i()}))}function be(e,t){let n=1,r=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(-1===e[a]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${a}`);r=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function xe(e,t){const n=t.length;return e=null==e?t.map(((e,t)=>t)):[].concat(e),oe(e.every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),oe(e.every((e=>pe(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function ve(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:xe(t,e).sort();let o=0;for(let i=0;i<e.length;++i){if(null!=a){if(a[o]===i&&1!==e[i])throw new Error(`Can't squeeze axis ${i} since its dim '${e[i]}' is not 1`);(null==a[o]||a[o]>i)&&1===e[i]&&(n.push(e[i]),r.push(i)),a[o]<=i&&o++}1!==e[i]&&(n.push(e[i]),r.push(i))}return{newShape:n,keptDims:r}}function we(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function ke(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function Ie(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function Ne(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function Se(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function Te(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Ce(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function $e(e){return"string"===typeof e||e instanceof String}function Ee(e){return"boolean"===typeof e}function Ae(e){return"number"===typeof e}function Re(e){return Array.isArray(e)?Re(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Ae(e)?"float32":$e(e)?"string":Ee(e)?"bool":"float32"}function _e(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Oe(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function Fe(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function De(e,t,n,r=!1){const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],o=t.slice(1),i=o.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<a;t++)s[t]=De(e+t*i,o,n,r)}return s}function Me(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return De(0,e,t,n)}function Le(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function ze(e,t){const n=Pe(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function Pe(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Be(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Me(e,new Float32Array(n));if("int32"===t)return Me(e,new Int32Array(n));if("bool"===t)return Me(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function We(e){e.forEach((t=>{oe(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Ve(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=n[s]*e[s];return r}function Ue(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(e/n[s]),e-=r[s]*n[s];return r[r.length-1]=e,r}function Ge(e){return e&&e.then&&"function"===typeof e.then}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const je="tfjsflags";class He{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=qe,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Je().getBool("IS_TEST")||Je().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];Je().getBool("IS_TEST")||Je().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Ge(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(je in e){const t=e[je].split(",");t.forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=Xe(t,n)}))}}}function qe(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(Ke(t,n[0],n[1]),n.join("=")))),t}function Ke(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function Xe(e,t){if(t=t.toLowerCase(),"true"===t||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function Je(){return Ze}let Ye,Ze=null;function Qe(e){Ze=e}function et(){if(null==Ye){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof process)e=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}Ye=e}return Ye}function tt(){const e=et();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}function nt(e,t){const n=tt();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const rt="Abs",st="Acos",at="Acosh",ot="Add",it="AddN",ut="All",lt="Any",ct="ArgMax",ht="ArgMin",pt="Asin",dt="Asinh",ft="Atan",mt="Atanh",gt="Atan2",yt="AvgPool",bt="AvgPoolGrad",xt="AvgPool3D",vt="AvgPool3DGrad",wt="BatchMatMul",kt="BatchToSpaceND",It="Bincount",Nt="BroadcastTo",St="BroadcastArgs",Tt="Cast",Ct="Ceil",$t="ClipByValue",Et="Complex",At="ComplexAbs",Rt="Concat",_t="Conv2D",Ot="Conv2DBackpropFilter",Ft="Conv2DBackpropInput",Dt="Conv3D",Mt="Conv3DBackpropFilterV2",Lt="Conv3DBackpropInputV2",zt="Cos",Pt="Cosh",Bt="Cumprod",Wt="Cumsum",Vt="CropAndResize",Ut="DenseBincount",Gt="DepthToSpace",jt="DepthwiseConv2dNative",Ht="DepthwiseConv2dNativeBackpropFilter",qt="DepthwiseConv2dNativeBackpropInput",Kt="Diag",Xt="Dilation2D",Jt="Dilation2DBackpropInput",Yt="Dilation2DBackpropFilter",Zt="RealDiv",Qt="Einsum",en="Elu",tn="EluGrad",nn="Erf",rn="Equal",sn="Exp",an="ExpandDims",on="Expm1",un="FFT",ln="Fill",cn="FlipLeftRight",hn="Floor",pn="FloorDiv",dn="FusedBatchNorm",fn="GatherV2",mn="GatherNd",gn="Greater",yn="GreaterEqual",bn="Identity",xn="IFFT",vn="Imag",wn="IsFinite",kn="IsInf",In="IsNan",Nn="LeakyRelu",Sn="Less",Tn="LessEqual",Cn="LinSpace",$n="Log",En="Log1p",An="LogicalAnd",Rn="LogicalNot",_n="LogicalOr",On="LogicalXor",Fn="LogSoftmax",Dn="LowerBound",Mn="LRN",Ln="LRNGrad",zn="Max",Pn="Maximum",Bn="MaxPool",Wn="MaxPoolGrad",Vn="MaxPool3D",Un="MaxPool3DGrad",Gn="MaxPoolWithArgmax",jn="Mean",Hn="Min",qn="Minimum",Kn="MirrorPad",Xn="Mod",Jn="Multinomial",Yn="Multiply",Zn="Neg",Qn="NotEqual",er="NonMaxSuppressionV3",tr="NonMaxSuppressionV4",nr="NonMaxSuppressionV5",rr="OnesLike",sr="OneHot",ar="Pack",or="PadV2",ir="Pool",ur="Pow",lr="Prelu",cr="Prod",hr="RaggedGather",pr="RaggedRange",dr="RaggedTensorToTensor",fr="Range",mr="Real",gr="Reciprocal",yr="Relu",br="Reshape",xr="ResizeNearestNeighbor",vr="ResizeNearestNeighborGrad",wr="ResizeBilinear",kr="ResizeBilinearGrad",Ir="Relu6",Nr="Reverse",Sr="Round",Tr="Rsqrt",Cr="ScatterNd",$r="SearchSorted",Er="Select",Ar="Selu",Rr="Slice",_r="Sin",Or="Sinh",Fr="Sign",Dr="Sigmoid",Mr="Softplus",Lr="Sqrt",zr="Sum",Pr="SpaceToBatchND",Br="SplitV",Wr="Softmax",Vr="SparseFillEmptyRows",Ur="SparseReshape",Gr="SparseSegmentMean",jr="SparseSegmentSum",Hr="SparseToDense",qr="SquaredDifference",Kr="Square",Xr="StridedSlice",Jr="StringNGrams",Yr="StringSplit",Zr="StringToHashBucketFast",Qr="Sub",es="Tan",ts="Tanh",ns="Tile",rs="TopK",ss="Transform",as="Transpose",os="Unique",is="Unpack",us="UnsortedSegmentSum",ls="UpperBound",cs="ZerosLike",hs="Step",ps="FromPixels",ds="RotateWithOffset",fs="_FusedMatMul",ms="FusedConv2D",gs="FusedDepthwiseConv2D";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ys(...e){Je().getBool("IS_TEST")||Je().getBool("PROD")||console.warn(...e)}function bs(...e){Je().getBool("IS_TEST")||Je().getBool("PROD")||console.log(...e)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const xs=nt("kernelRegistry",(()=>new Map)),vs=nt("gradRegistry",(()=>new Map));function ws(e,t){const n=Es(e,t);return xs.get(n)}function ks(e){return vs.get(e)}function Is(e){const t=xs.entries(),n=[];while(1){const{done:r,value:s}=t.next();if(r)break;const[a,o]=s,[i]=a.split("_");i===e&&n.push(o)}return n}function Ns(e){const{kernelName:t,backendName:n}=e,r=Es(t,n);xs.has(r)&&ys(`The kernel '${t}' for backend '${n}' is already registered`),xs.set(r,e)}function Ss(e){const{kernelName:t}=e;vs.has(t)&&Je().getBool("DEBUG")&&ys(`Overriding the gradient for '${t}'`),vs.set(t,e)}function Ts(e,t){const n=Es(e,t);if(!xs.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);xs.delete(n)}function Cs(e){if(!vs.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);vs.delete(e)}function $s(e,t){const n=Is(e);n.forEach((e=>{const n=Object.assign({},e,{backendName:t});Ns(n)}))}function Es(e,t){return`${t}_${e}`}var As=n(5278),Rs=n.n(As);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const _s=Rs()||As;function Os(e){return _s.fromString(e,!0,16)}const Fs=Os("c3a5c85c97cb3127"),Ds=Os("b492b66fbe98f273"),Ms=Os("9ae16a3b2f90404f");function Ls(e){return e.xor(e.shru(47))}function zs(e,t,n){const r=e.slice(t,t+n);return _s.fromBytes(Array.from(r),!0,!0)}function Ps(e,t){return zs(e,t,8)}function Bs(e,t){return zs(e,t,4)}function Ws(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Vs(e,t,n=Os("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function Us(e,t,n,r,s,a){s=s.add(e),a=Ws(a.add(s).add(r),21);const o=s;return s=s.add(t),s=s.add(n),a=a.add(Ws(s,44)),[s.add(r),a.add(o)]}function Gs(e,t,n,r){return Us(Ps(e,t),Ps(e,t+8),Ps(e,t+16),Ps(e,t+24),n,r)}function js(e,t=e.length){if(t>=8){const n=Ms.add(2*t),r=Ps(e,0).add(Ms),s=Ps(e,t-8),a=Ws(s,37).mul(n).add(r),o=Ws(r,25).add(s).mul(n);return Vs(a,o,n)}if(t>=4){const n=Ms.add(2*t),r=Bs(e,0);return Vs(r.shl(3).add(t),Bs(e,t-4),n)}if(t>0){const n=e[0],r=e[t>>1],s=e[t-1],a=n+(r<<8),o=t+(s<<2);return Ls(Ms.mul(a).xor(Fs.mul(o))).mul(Ms)}return Ms}function Hs(e,t=e.length){const n=Ms.add(2*t),r=Ps(e,0).mul(Ds),s=Ps(e,8),a=Ps(e,t-8).mul(n),o=Ps(e,t-16).mul(Ms);return Vs(Ws(r.add(s),43).add(Ws(a,30)).add(o),r.add(Ws(s.add(Ms),18)).add(a),n)}function qs(e,t=e.length){const n=Ms.add(2*t),r=Ps(e,0).mul(Ms),s=Ps(e,8),a=Ps(e,t-8).mul(n),o=Ps(e,t-16).mul(Ms),i=Ws(r.add(s),43).add(Ws(a,30)).add(o),u=Vs(i,r.add(Ws(s.add(Ms),18)).add(a),n),l=Ps(e,16).mul(n),c=Ps(e,24),h=i.add(Ps(e,t-32)).mul(n),p=u.add(Ps(e,t-24)).mul(n);return Vs(Ws(l.add(c),43).add(Ws(h,30)).add(p),l.add(Ws(c.add(r),18)).add(h),n)}function Ks(e,t=e.length){const n=_s.fromNumber(81,!0);if(t<=32)return t<=16?js(e,t):Hs(e,t);if(t<=64)return qs(e,t);let r=n,s=n.mul(Ds).add(113),a=Ls(s.mul(Ms).add(113)).mul(Ms),o=[_s.UZERO,_s.UZERO],i=[_s.UZERO,_s.UZERO];r=r.mul(Ms).add(Ps(e,0));let u=0;const l=64*(t-1>>6),c=l+(t-1&63)-63;do{r=Ws(r.add(s).add(o[0]).add(Ps(e,u+8)),37).mul(Ds),s=Ws(s.add(o[1]).add(Ps(e,u+48)),42).mul(Ds),r=r.xor(i[1]),s=s.add(o[0]).add(Ps(e,u+40)),a=Ws(a.add(i[0]),33).mul(Ds),o=Gs(e,u,o[1].mul(Ds),r.add(i[0])),i=Gs(e,u+32,a.add(i[1]),s.add(Ps(e,u+16))),[a,r]=[r,a],u+=64}while(u!==l);const h=Ds.add(a.and(255).shl(1));return u=c,i[0]=i[0].add(t-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),r=Ws(r.add(s).add(o[0]).add(Ps(e,u+8)),37).mul(h),s=Ws(s.add(o[1]).add(Ps(e,u+48)),42).mul(h),r=r.xor(i[1].mul(9)),s=s.add(o[0].mul(9).add(Ps(e,u+40))),a=Ws(a.add(i[0]),33).mul(h),o=Gs(e,u,o[1].mul(h),r.add(i[0])),i=Gs(e,u+32,a.add(i[1]),s.add(Ps(e,u+16))),[a,r]=[r,a],Vs(Vs(o[0],i[0],h).add(Ls(s).mul(Fs)).add(a),Vs(o[1],i[1],h).add(r),h)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xs(e,t){return"string"===t?ea(e):Ys([e],t)}function Js(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}function Ys(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ra(e)),Je().getBool("DEBUG")&&Ie(e,t),Js(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Zs(){return Je().platform.now()}function Qs(e,t){return Je().platform.fetch(e,t)}function ea(e,t="utf-8"){return t=t||"utf-8",Je().platform.encode(e,t)}function ta(e,t="utf-8"){return t=t||"utf-8",Je().platform.decode(e,t)}function na(e){return Je().platform.isTypedArray(e)}function ra(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||Ge(e)||null==e||na(e)&&n)t.push(e);else if(Array.isArray(e)||na(e))for(let r=0;r<e.length;++r)ra(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let s=0;s<=r;s++)ra(e[s],t,n)}return t}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class sa{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new oa)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let a;const o=Zs();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();a=Promise.resolve({kernelMs:Zs()-o})}if(Je().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<r.length;u++){const t=r[u];t.data().then((n=>{aa(n,t.dtype,e)}))}const i={kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))};return i}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function aa(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){const t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class oa{logKernelProfile(e,t,n,r,s,a){const o="number"===typeof r?ge(`${r}ms`,9):r["error"],i=ge(e,25),u=t.rank,l=t.size,c=ge(t.shape.toString(),14);let h="";for(const p in s){const e=s[p];if(null!=e){const n=e.shape||t.shape,r=n.length;h+=`${p}: ${r}D ${r>0?n:""} `}}console.log(`%c${i}\t%c${o}\t%c${u}D ${c}\t%c${l}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ia(e,t,n){const r={},s={};for(let u=0;u<t.length;u++)r[t[u].id]=!0;for(let u=0;u<e.length;u++){const n=e[u],a=n.inputs;for(const e in a){const o=a[e];let i=!1;for(let e=0;e<t.length;e++)if(r[o.id]){n.outputs.forEach((e=>r[e.id]=!0)),i=!0,s[n.id]=!0;break}if(i)break}}const a={};a[n.id]=!0;const o={};for(let u=e.length-1;u>=0;u--){const t=e[u],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(a[t.outputs[e].id]){for(const e in n)a[n[e].id]=!0,o[t.id]=!0;break}}const i=[];for(let u=0;u<e.length;u++){const t=e[u];if(s[t.id]&&o[t.id]){const e={};for(const s in t.inputs){const n=t.inputs[s];r[n.id]&&(e[s]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,i.push(n)}}return i}function ua(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],o=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const i=a.gradient(o);for(const t in a.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const s=n((()=>i[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const o=a.inputs[t];if(!he(s.shape,o.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${o.shape}'`);if(null==e[o.id])e[o.id]=s;else{const t=e[o.id];e[o.id]=r(t,s),t.dispose()}}}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const la=20,ca=3,ha=7;function pa(e,t,n,r){const s=Fe(t),a=da(e,t,n,s),o=t.length,i=ga(e,t,n,s,a),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${o}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(i.map((e=>"    "+e)).join("\n")),u.join("\n")}function da(e,t,n,r){const s=le(t),a=r[r.length-1],o=new Array(a).fill(0),i=t.length,u="complex64"===n?ya(e):e;if(i>1)for(let l=0;l<s/a;l++){const e=l*a;for(let t=0;t<a;t++)o[t]=Math.max(o[t],fa(u[e+t],0,n).length)}return o}function fa(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(ha))} + ${parseFloat(e[1].toFixed(ha))}j`:$e(e)?`'${e}'`:"bool"===n?ma(e):parseFloat(e.toFixed(ha)).toString(),ge(r,t)}function ma(e){return 0===e?"false":"true"}function ga(e,t,n,r,s,a=!0){const o="complex64"===n?2:1,i=t[0],u=t.length;if(0===u){if("complex64"===n){const t=ya(e);return[fa(t[0],0,n)]}return"bool"===n?[ma(e[0])]:[e[0].toString()]}if(1===u){if(i>la){const t=ca*o;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((i-ca)*o,i*o));return"complex64"===n&&(r=ya(r),a=ya(a)),["["+r.map(((e,t)=>fa(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>fa(e,s[i-ca+t],n))).join(", ")+"]"]}const t="complex64"===n?ya(e):Array.from(e);return["["+t.map(((e,t)=>fa(e,s[t],n))).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),h=r[0]*o,p=[];if(i>la){for(let t=0;t<ca;t++){const r=t*h,a=r+h;p.push(...ga(e.slice(r,a),l,n,c,s,!1))}p.push("...");for(let t=i-ca;t<i;t++){const r=t*h,a=r+h;p.push(...ga(e.slice(r,a),l,n,c,s,t===i-1))}}else for(let m=0;m<i;m++){const t=m*h,r=t+h;p.push(...ga(e.slice(t,r),l,n,c,s,m===i-1))}const d=2===u?",":"";p[0]="["+(i>0?p[0]+d:"");for(let m=1;m<p.length-1;m++)p[m]=" "+p[m]+d;let f=",\n";for(let m=2;m<u;m++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function ya(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ba{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=le(e),null!=n){const e=n.length;oe(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ke(t,this.size),this.strides=Fe(e)}set(e,...t){0===t.length&&(t=[0]),oe(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return xa().makeTensor(this.values,this.shape,this.dtype)}}let xa=null,va=null,wa=null;function ka(e){xa=e}function Ia(e){va=e}function Na(e){wa=e}class Sa{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=le(e),this.strides=Fe(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return va.buffer(this.shape,this.dtype,e)}bufferSync(){return va.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Me(this.shape,e,"complex64"===this.dtype)}arraySync(){return Me(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=xa().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>ta(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),xa().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=xa().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>ta(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await xa().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(xa().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return va.print(this,e)}clone(){return this.throwIfDisposed(),va.clone(this)}toString(e=!1){const t=this.dataSync();return pa(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),va.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),xa().makeVariable(this,e,t,n)}}function Ta(){return nt("Tensor",(()=>Sa))}Object.defineProperty(Sa,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Ta();class Ca extends Sa{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!he(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);xa().disposeTensor(this),this.dataId=e.dataId,xa().incRef(this,null)}dispose(){xa().disposeVariable(this),this.isDisposedInternal=!0}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var $a,Ea,Aa,Ra,_a;Object.defineProperty(Ca,Symbol.hasInstance,{value:e=>e instanceof Sa&&null!=e.assign&&e.assign instanceof Function}),function(e){e["R0"]="R0",e["R1"]="R1",e["R2"]="R2",e["R3"]="R3",e["R4"]="R4",e["R5"]="R5",e["R6"]="R6"}($a||($a={})),function(e){e["float32"]="float32",e["int32"]="int32",e["bool"]="int32",e["complex64"]="complex64"}(Ea||(Ea={})),function(e){e["float32"]="float32",e["int32"]="int32",e["bool"]="bool",e["complex64"]="complex64"}(Aa||(Aa={})),function(e){e["float32"]="float32",e["int32"]="float32",e["bool"]="float32",e["complex64"]="complex64"}(Ra||(Ra={})),function(e){e["float32"]="complex64",e["int32"]="complex64",e["bool"]="complex64",e["complex64"]="complex64"}(_a||(_a={}));const Oa={float32:Ra,int32:Ea,bool:Aa,complex64:_a};function Fa(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Oa[e][t]}function Da(e){return Fa(e,"int32")}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ma(e,t){if(e.dtype===t.dtype)return[e,t];const n=Fa(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function La(e,t){oe(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function za(e,t){return t.some((t=>t.id===e.id))}function Pa(e){const t=[],n=new Set;return Ba(e,t,n),t}function Ba(e,t,n){if(null==e)return;if(e instanceof Sa)return void t.push(e);if(!Wa(e))return;const r=e;for(const s in r){const e=r[s];n.has(e)||(n.add(e),Ba(e,t,n))}}function Wa(e){return Array.isArray(e)||"object"===typeof e}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Va(e){return null!=e.kernelName}class Ua{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ga{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Ua}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],r=await this.initializeBackend(n).success;if(r)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(ys(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e),r=n?await t:t;if(!r)return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new sa(this.backendInstance),!0}setupRegisteredKernels(){const e=Is(this.backendName);e.forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){const t=Is(e);t.forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof J||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,ys(`Initialization of backend ${e} failed`),ys(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return ys(`Initialization of backend ${e} failed`),ys(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return Ga.nextTensorId++}nextVariableId(){return Ga.nextVariableId++}clone(e){const t=qa.runKernel(bn,{x:e}),n={x:e},r=e=>({x:()=>{const t="float32",n={x:e},r={dtype:t};return qa.runKernel(Tt,n,r)}}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[t],r,s,{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;const r=null!=ws(e,this.backendName);if(!r)throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-s-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let o,i;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=Va(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Va(e)){const{kernelName:t,inputs:s,attrs:a}=e;null==this.backendName&&this.backend;const u=ws(t,this.backendName);oe(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),o=()=>{const e=this.backend.numDataIds();i=u.kernelFunc({inputs:s,attrs:a,backend:this.backend});const o=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const l=o.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,s,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();i=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:c}=e,h=Va(e)?null:e.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(u,l,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs):t=o()})),r&&this.addTapeNode(u,l,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((e=>null!=l[e]?l[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=ks(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(oe(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const o=n.filter(((e,t)=>s[t]));return a.concat(o)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&$e(e[0])&&(s=e.map((e=>ea(e))));const a=r.write(s,t,n),o=new Sa(t,n,a,this.nextTensorId());if(this.trackTensor(o,r),"string"===n){const e=this.state.tensorInfo.get(a),t=Ce(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,r){n=n||"float32";const s={dataId:e,shape:t,dtype:n};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,a=new Sa(r,s,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new Ca(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Te(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Ca||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*Te(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},i=ks(e);null!=i&&(r=i.gradFunc),null!=r&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=Pe(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Pa(e),n=new Set(t.map((e=>e.id)));for(let s=0;s<this.state.activeScope.track.length;s++){const e=this.state.activeScope.track[s];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(oe(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));oe(s instanceof Sa,(()=>"The result y returned by f() must be a tensor."));const a=ia(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?ja(s.shape):n,ua(e,a,(e=>this.tidy(e)),Ka);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return oe(_e(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;oe(t.every((e=>e instanceof Sa)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((e,t)=>{r[t]=e}));const s=(r,s)=>(n=e(...t,s),oe(n.value instanceof Sa,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),oe(_e(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),a=(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];oe(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),oe(a.every((e=>e instanceof Sa)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return a.forEach(((e,t)=>{o[t]=()=>e})),o};return this.runKernelFunc({forwardFunc:s,backwardsFunc:a,inputs:r})}}readSync(e){const t=this.state.tensorInfo.get(e);return t.backend.readSync(e)}read(e){const t=this.state.tensorInfo.get(e);return t.backend.read(e)}readToGPU(e,t){const n=this.state.tensorInfo.get(e);return n.backend.readToGPU(e,t)}async time(e){const t=Zs(),n=await this.backend.time(e);return n.wallMs=Zs()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Ua;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function ja(e){const t=ze(le(e),"float32");return qa.makeTensor(t,e,"float32")}function Ha(){const e=et();if(null==e._tfengine){const t=new He(e);e._tfengine=new Ga(t)}return Qe(e._tfengine.ENV),ka((()=>e._tfengine)),e._tfengine}Ga.nextTensorId=0,Ga.nextVariableId=0;const qa=Ha();function Ka(e,t){const n={a:e,b:t};return qa.runKernel(ot,n)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xa(){return"undefined"!==typeof navigator&&null!=navigator}let Ja;function Ya(e){Ja=e}function Za(e){if(void 0!==Ja)return Ja;if(e||Xa()){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Qa(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const eo=Je();eo.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),eo.registerFlag("IS_BROWSER",(()=>Qa())),eo.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),eo.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),eo.registerFlag("PROD",(()=>!1)),eo.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>eo.getBool("DEBUG"))),eo.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),eo.registerFlag("IS_TEST",(()=>!1)),eo.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),eo.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),eo.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),eo.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));n(5640);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function to(e,t){let n=e;if(na(e))return"string"===t?[]:[e.length];const r="object"===typeof e;if(r){if("texture"in e){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if("buffer"in e&&!(e.buffer instanceof ArrayBuffer))return[e.buffer.size/(null==t?4:Te(t))]}if(!Array.isArray(e))return[];const s=[];while(Array.isArray(n)||na(n)&&"string"!==t)s.push(n.length),n=n[0];return Array.isArray(e)&&Je().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&no(e,s,[]),s}function no(e,t,n){if(n=n||[],!Array.isArray(e)&&!na(e))return void oe(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));oe(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),oe(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let s=0;s<e.length;++s)no(e[s],r,n.concat(s))}function ro(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function so(e,t,n,r="numeric"){if(e instanceof Sa)return ro(r,e.dtype,t,n),e;let s=Re(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),ro(r,s,t,n),null==e||!na(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=to(e,s);na(e)||Array.isArray(e)||(e=[e]);const o=!0,i="string"!==s?Ys(e,s):ra(e,[],o);return qa.makeTensor(i,a,s)}function ao(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);const s=e;return s.map(((e,s)=>so(e,`${t}[${s}]`,n,r)))}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const oo="__op";function io(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=oo;const s=(...e)=>{qa.startScope(n);try{const t=r(...e);return Ge(t)&&console.error("Cannot return a Promise inside of tidy."),qa.endScope(t),t}catch(t){throw qa.endScope(null),t}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uo(e,t){const n=so(e,"real","complex"),r=so(t,"imag","complex");ie(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return qa.runKernel(Et,s)}const lo=io({complex_:uo});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function co(e,t,n,r){if(null==r)r=Re(e);else if("complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if("object"===typeof e&&("texture"in e||"buffer"in e&&!(e.buffer instanceof ArrayBuffer))){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return qa.backend.createTensorFromGPUData(e,t||n,r)}if(!na(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){We(t);const e=le(t),r=le(n);oe(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let s=0;s<n.length;++s){const e=n[s],r=s!==n.length-1||e!==le(t.slice(s));oe(n[s]===t[s]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return na(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Ys(e,r):ra(e,[],!0),qa.makeTensor(e,t,r)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ho(e,t,n){const r=to(e,n);return co(e,t,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const po={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},fo=4;async function mo(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let o=0;o<s.length;++o){const a=s[o],i=Array.isArray(e)?e[o].tensor:e[a];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error(`Unsupported dtype in weight '${a}': ${i.dtype}`);const u={name:a,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+fo*t.length,r=new Uint8Array(n);let s=0;for(let a=0;a<t.length;a++){const e=t[a],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,s),s+=fo,r.set(e,s),s+=e.length}e(r)}));r.push(e)}else r.push(i.data());null!=t&&(u.group=t),n.push(u)}const a=await Promise.all(r);return{data:yo(a),specs:n}}function go(e,t){const n={};let r,s=0;for(const a of t){const t=a.name,o=a.dtype,i=a.shape,u=le(i);let l;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${o}.`)}const i=po[n.dtype],c=e.slice(s,s+u*i),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===o)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=_o()),l=r(h)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=Math.round(t*n.scale+n.min)}}s+=u*i}else if("string"===o){const t=le(a.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(s,s+fo))[0];s+=fo;const n=new Uint8Array(e.slice(s,s+t));l.push(n),s+=t}}else{const r=po[o],a=e.slice(s,s+u*r);if("float32"===o)l=new Float32Array(a);else if("int32"===o)l=new Int32Array(a);else if("bool"===o)l=new Uint8Array(a);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);{l=new Float32Array(a);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const s=ho(e,i,"float32"),o=ho(r,i,"float32");n[t]=lo(s,o),s.dispose(),o.dispose()}}s+=u*r}"complex64"!==o&&(n[t]=ho(l,i,o))}return n}function yo(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const bo="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function xo(e){return bo?Buffer.byteLength(e):new Blob([e]).size}function vo(e){if(bo)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let r=0,s=t.length;r<s;r++)n+=String.fromCharCode(t[r]);return btoa(n)}function wo(e){if(bo){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}function ko(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Io(e){const t="/";e=e.trim();while(e.endsWith(t))e=e.slice(0,e.length-1);const n=e.split(t);return n[n.length-1]}function No(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function So(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function To(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),So(e,n,r)}function Co(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:xo(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:xo(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function $o(e){const t=[];for(const n of e)t.push(...n.weights);return t}function Eo(){const e=e=>{let t=e<<13,n=0;while(0===(8388608&t))n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function Ao(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function Ro(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function _o(){const e=Eo(),t=Ao(),n=Ro();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let o=0;o<r.length;o++){const s=r[o],i=e[n[s>>10]+(1023&s)]+t[s>>10];a[o]=i}return new Float32Array(s)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Oo{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Oo.instance&&(Oo.instance=new Oo),Oo.instance}static registerSaveRouter(e){Oo.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Oo.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Oo.getHandlers(e,"save")}static getLoadHandlers(e,t){return Oo.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[],s="load"===t?Oo.getInstance().loadRouters:Oo.getInstance().saveRouters;return s.forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const Fo=e=>Oo.registerSaveRouter(e),Do=e=>Oo.registerLoadRouter(e),Mo=e=>Oo.getSaveHandlers(e),Lo=(e,t)=>Oo.getLoadHandlers(e,t),zo="tensorflowjs",Po=1,Bo="models_store",Wo="model_info_store";function Vo(){if(!Je().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Uo(e){const t=e.result;t.createObjectStore(Bo,{keyPath:"modelPath"}),t.createObjectStore(Wo,{keyPath:"modelPath"})}class Go{constructor(e){if(this.indexedDB=Vo(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(zo,Po);r.onupgradeneeded=()=>Uo(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(Bo,"readonly"),r=t.objectStore(Bo),a=r.get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(a.result.modelArtifacts)},a.onerror=e=>(s.close(),n(a.error)),t.oncomplete=()=>s.close()}else{const r=Co(t),a=s.transaction(Wo,"readwrite");let o=a.objectStore(Wo);const i=o.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;i.onsuccess=()=>{u=s.transaction(Bo,"readwrite");const i=u.objectStore(Bo),l=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});l.onsuccess=()=>e({modelArtifactsInfo:r}),l.onerror=e=>{o=a.objectStore(Wo);const t=o.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(l.error)),t.onerror=e=>(s.close(),n(l.error))}},i.onerror=e=>(s.close(),n(i.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}Go.URL_SCHEME="indexeddb://";const jo=e=>Je().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Go.URL_SCHEME)?Ho(e.slice(Go.URL_SCHEME.length)):null;function Ho(e){return new Go(e)}function qo(e){return e.startsWith(Go.URL_SCHEME)?e.slice(Go.URL_SCHEME.length):e}Oo.registerSaveRouter(jo),Oo.registerLoadRouter(jo);class Ko{constructor(){this.indexedDB=Vo()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(zo,Po);n.onupgradeneeded=()=>Uo(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(Wo,"readonly"),a=s.objectStore(Wo),o=a.getAll();o.onsuccess=()=>{const t={};for(const e of o.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},o.onerror=e=>(r.close(),t(o.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){return e=qo(e),new Promise(((t,n)=>{const r=this.indexedDB.open(zo,Po);r.onupgradeneeded=()=>Uo(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(Wo,"readwrite"),o=a.objectStore(Wo),i=o.get(e);let u;i.onsuccess=()=>{if(null==i.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=o.delete(e),a=()=>{u=s.transaction(Bo,"readwrite");const r=u.objectStore(Bo),a=r.delete(e);a.onsuccess=()=>t(i.result.modelArtifactsInfo),a.onerror=e=>n(i.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(i.error))}},i.onerror=e=>(s.close(),n(i.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Xo="/",Jo="tensorflowjs_models",Yo="info",Zo="model_topology",Qo="weight_specs",ei="weight_data",ti="model_metadata";function ni(e){return{info:[Jo,e,Yo].join(Xo),topology:[Jo,e,Zo].join(Xo),weightSpecs:[Jo,e,Qo].join(Xo),weightData:[Jo,e,ei].join(Xo),modelMetadata:[Jo,e,ti].join(Xo)}}function ri(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function si(e){const t=e.split(Xo);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Xo)}function ai(e){return e.startsWith(oi.URL_SCHEME)?e.slice(oi.URL_SCHEME.length):e}class oi{constructor(e){if(!Je().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ni(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=Co(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,vo(e.weightData));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:s}}catch(t){throw ri(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=wo(a),t}}oi.URL_SCHEME="localstorage://";const ii=e=>Je().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(oi.URL_SCHEME)?ui(e.slice(oi.URL_SCHEME.length)):null;function ui(e){return new oi(e)}Oo.registerSaveRouter(ii),Oo.registerLoadRouter(ii);class li{constructor(){oe(Je().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),oe("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Jo+Xo,n=Xo+Yo;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);if(s.startsWith(t)&&s.endsWith(n)){const t=si(s);e[t]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){e=ai(e);const t=ni(e);if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);const n=JSON.parse(this.LS.getItem(t.info));return ri(t),n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ci="://";class hi{constructor(){this.managers={}}static getInstance(){return null==hi.instance&&(hi.instance=new hi),hi.instance}static registerManager(e,t){oe(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(ci)&&(e=e.slice(0,e.indexOf(ci))),oe(e.length>0,(()=>"scheme must not be an empty string."));const n=hi.getInstance();oe(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=hi.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(hi.getInstance().managers)}}function pi(e){if(-1===e.indexOf(ci))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${hi.getSchemes().join(",")}`);return{scheme:e.split(ci)[0],path:e.split(ci)[1]}}async function di(e,t,n=!1){oe(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=Oo.getLoadHandlers(e);oe(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),oe(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const s=r[0],a=Oo.getSaveHandlers(t);oe(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),oe(a.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const o=a[0],i=pi(e).scheme,u=pi(e).path,l=i===pi(e).scheme,c=await s.load();n&&l&&await hi.getManager(i).removeModel(u);const h=await o.save(c);return n&&!l&&await hi.getManager(i).removeModel(u),h.modelArtifactsInfo}async function fi(){const e=hi.getSchemes(),t={};for(const n of e){const e=await hi.getManager(n).listModels();for(const r in e){const s=n+ci+r;t[s]=e[r]}}return t}async function mi(e){const t=pi(e),n=hi.getManager(t.scheme);return n.removeModel(t.path)}async function gi(e,t){const n=!1;return di(e,t,n)}async function yi(e,t){const n=!0;return di(e,t,n)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class bi{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&Je().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();const t=this.functionRefs[e.data.index];t(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}}if(Je().get("IS_BROWSER")){Je().setPlatform("browser",new bi);try{hi.registerManager(oi.URL_SCHEME,new li)}catch(T4){}try{hi.registerManager(Go.URL_SCHEME,new Ko)}catch(T4){}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const xi={importFetch:()=>n(327)};let vi;class wi{constructor(){this.util=n(6843),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Je().global.fetch?Je().global.fetch(e,t):(null==vi&&(vi=xi.importFetch()),vi(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ki(e,t="float32",n){return t=t||"float32",We(e),new ba(e,t,n)}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ii(e,t){const n=so(e,"x","cast");if(!Ne(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return qa.runKernel(Tt,r,s)}Je().get("IS_NODE")&&!Je().get("IS_BROWSER")&&Je().setPlatform("node",new wi);const Ni=io({cast_:Ii});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Si(e){const t=so(e,"x","clone","string_or_numeric"),n={x:t};return qa.runKernel(bn,n)}const Ti=io({clone_:Si});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ci(e,t=!1){console.log(e.toString(t))}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ha();const $i={buffer:ki,cast:Ni,clone:Ti,print:Ci};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ei(){Je().set("PROD",!0)}function Ai(){Je().set("DEBUG",!0)}function Ri(){Je().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function _i(e){Je().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Oi(){qa.disposeVariables()}function Fi(){return qa}function Di(){return qa.memory()}function Mi(e){return qa.profile(e)}function Li(e,t){return qa.tidy(e,t)}function zi(e){const t=Pa(e);t.forEach((e=>e.dispose()))}function Pi(e){return qa.keep(e)}function Bi(e){return qa.time(e)}function Wi(e){return qa.setBackend(e)}function Vi(){return qa.ready()}function Ui(){return qa.backendName}function Gi(e){qa.removeBackend(e)}function ji(e){return qa.findBackend(e)}function Hi(e){return qa.findBackendFactory(e)}function qi(e,t,n=1){return qa.registerBackend(e,t,n)}function Ki(){return qa.backend}function Xi(e,t){Je().setPlatform(e,t)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ji(e,t){let n=so(e,"a","add"),r=so(t,"b","add");[n,r]=Ma(n,r);const s={a:n,b:r};return qa.runKernel(ot,s)}Ia($i),Na(_i);const Yi=io({add_:Ji});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zi(e,t){let n=so(e,"a","floorDiv"),r=so(t,"b","floorDiv");[n,r]=Ma(n,r);const s={a:n,b:r};return qa.runKernel(pn,s)}const Qi=io({floorDiv_:Zi});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eu(e,t){let n=so(e,"a","div"),r=so(t,"b","div");if([n,r]=Ma(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Qi(n,r);const s={a:n,b:r},a={};return qa.runKernel(Zt,s,a)}const tu=io({div_:eu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nu(e,t){let n=so(e,"a","mul"),r=so(t,"b","mul");[n,r]=Ma(n,r);const s={a:n,b:r};return qa.runKernel(Yn,s)}const ru=io({mul_:nu});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function su(e){const t=so(e,"x","sqrt","float32"),n={x:t};return qa.runKernel(Lr,n)}const au=io({sqrt_:su});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ou(e){const t=so(e,"x","square"),n={};return qa.runKernel("Square",{x:t},n)}const iu=io({square_:ou});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uu(e){const t=so(e,"x","zerosLike"),n={x:t};return qa.runKernel(cs,n)}const lu=io({zerosLike_:uu});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cu(e){return oe(_e(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const r=so(t,"x","tf.grad","string_or_numeric"),s=null!=n?so(n,"dy","tf.grad"):null;return qa.tidy((()=>{const{value:t,grads:n}=qa.gradients((()=>e(r)),[r],s);return null!=s&&ie(t.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),gu(n),n[0]}))}}function hu(e){return oe(_e(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{oe(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=ao(t,"args","tf.grads","string_or_numeric"),s=null!=n?so(n,"dy","tf.grads"):null;return qa.tidy((()=>{const{value:t,grads:n}=qa.gradients((()=>e(...r)),r,s);return null!=s&&ie(t.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),gu(n),n}))}}function pu(e){return oe(_e(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{oe(t instanceof Sa,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),oe(null==n||n instanceof Sa,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:r,value:s}=qa.gradients((()=>e(t)),[t],n);return gu(r),{grad:r[0],value:s}}}function du(e){return oe(_e(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{oe(Array.isArray(t)&&t.every((e=>e instanceof Sa)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),oe(null==n||n instanceof Sa,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const r=qa.gradients((()=>e(...t)),t,n);return null!=n&&ie(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),gu(r.grads),r}}function fu(e,t){oe(_e(e),(()=>"The f passed in variableGrads(f) must be a function")),oe(null==t||Array.isArray(t)&&t.every((e=>e instanceof Ca)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in qa.registeredVariables)t.push(qa.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,s=t.length;t=t.filter((e=>e.trainable)),oe(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const a=!0,{value:o,grads:i}=qa.gradients(e,t,null,a);oe(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),oe(0===o.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`));const u={};return t.forEach(((e,t)=>{null!=i[t]&&(u[e.name]=i[t])})),null!=r&&r.forEach((e=>u[e.name]=null)),{value:o,grads:u}}function mu(e){return qa.customGrad(e)}function gu(e){const t=e.filter((e=>null==e)).length;if(t>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yu(e,t){if((na(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&na(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");const n=[],r=[];return co(e,n,r,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class bu{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class xu{constructor(){this.classNameMap={}}static getMap(){return null==xu.instance&&(xu.instance=new xu),xu.instance}static register(e){xu.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function vu(e){oe(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),oe("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),oe(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),xu.register(e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class wu extends bu{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return zi(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return fu(e,t)}dispose(){null!=this.iterations_&&zi(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:yu(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(wu,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ku extends wu{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=qa.backend.epsilon())}static get className(){return"Adadelta"}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);t.forEach(((t,n)=>{const r=qa.registeredVariables[t],s=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Li((()=>lu(r).variable(s)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Li((()=>lu(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const o=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Li((()=>{const e=Yi(ru(o,this.rho),ru(iu(a),1-this.rho)),t=ru(tu(au(Yi(i,this.epsilon)),au(Yi(o,this.epsilon))),a),n=Yi(ru(i,this.rho),ru(iu(t),1-this.rho));o.assign(e),i.assign(n);const s=Yi(ru(t,-this.learningRate),r);r.assign(s)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(zi(this.accumulatedGrads.map((e=>e.variable))),zi(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t["learningRate"],t["rho"],t["epsilon"])}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Iu(e,t,n){We(e);const r={shape:e,value:t,dtype:n};return qa.runKernel(ln,{},r)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Nu extends wu{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}static get className(){return"Adagrad"}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);t.forEach(((t,n)=>{const r=qa.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Li((()=>Iu(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;Li((()=>{const e=Yi(a,iu(s));a.assign(e);const t=Yi(ru(tu(s,au(Yi(e,qa.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&zi(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(t)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t["learningRate"],t["initialAccumulatorValue"])}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Su(e,t){let n=so(e,"base","pow"),r=so(t,"exp","pow");[n,r]=Ma(n,r);const s={a:n,b:r};return qa.runKernel(ur,s)}const Tu=io({pow_:Su});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Cu(e,t){let n=so(e,"a","sub"),r=so(t,"b","sub");[n,r]=Ma(n,r);const s={a:n,b:r};return qa.runKernel(Qr,s)}const $u=io({sub_:Cu});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Eu extends wu{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Li((()=>{this.accBeta1=yu(t).variable(),this.accBeta2=yu(n).variable()})),null==r&&(this.epsilon=qa.backend.epsilon())}static get className(){return"Adam"}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Li((()=>{const n=$u(1,this.accBeta1),r=$u(1,this.accBeta2);t.forEach(((t,s)=>{const a=qa.registeredVariables[t],o=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:Li((()=>lu(a).variable(o)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:Li((()=>lu(a).variable(o)))});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const u=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,c=Yi(ru(u,this.beta1),ru(i,1-this.beta1)),h=Yi(ru(l,this.beta2),ru(iu(i),1-this.beta2)),p=tu(c,n),d=tu(h,r);u.assign(c),l.assign(h);const f=Yi(ru(tu(p,Yi(au(d),this.epsilon)),-this.learningRate),a);a.assign(f)})),this.accBeta1.assign(ru(this.accBeta1,this.beta1)),this.accBeta2.assign(ru(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&zi(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&zi(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Li((()=>{this.accBeta1.assign(Tu(this.beta1,this.iterations_+1)),this.accBeta2.assign(Tu(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t["learningRate"],t["beta1"],t["beta2"],t["epsilon"])}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Au(e){const t=so(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return qa.runKernel(At,e)}{const e={x:t};return qa.runKernel(rt,e)}}const Ru=io({abs_:Au});n(1951);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _u(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,o=e[a]||1,i=t[t.length-1-s]||1;i>1&&1===o&&r.unshift(a)}return r}function Ou(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,o=t[a];(null==s||1===s&&o>1)&&n.unshift(a)}return n}function Fu(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let a=t[t.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a){const n=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(n)}n.unshift(r)}}return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Du(e,t){let n=so(e,"a","maximum"),r=so(t,"b","maximum");[n,r]=Ma(n,r),"bool"===n.dtype&&(n=Ni(n,"int32"),r=Ni(r,"int32")),Fu(n.shape,r.shape);const s={a:n,b:r};return qa.runKernel(Pn,s)}const Mu=io({maximum_:Du});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Lu extends wu{constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Li((()=>{this.iteration=yu(0).variable(),this.accBeta1=yu(t).variable()})),null==r&&(this.epsilon=qa.backend.epsilon())}static get className(){return"Adamax"}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Li((()=>{const n=$u(1,this.accBeta1),r=tu(-this.learningRate,Yi(ru(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=qa.registeredVariables[t],o=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:lu(a).variable(o)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:lu(a).variable(o)});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const u=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,c=Yi(ru(u,this.beta1),ru(i,1-this.beta1)),h=ru(l,this.beta2),p=Ru(i),d=Mu(h,p);u.assign(c),l.assign(d);const f=Yi(ru(tu(r,n),tu(c,Yi(d,this.epsilon))),a);a.assign(f)})),this.iteration.assign(Yi(this.iteration,1)),this.accBeta1.assign(ru(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&zi(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&zi(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t["learningRate"],t["beta1"],t["beta2"],t["epsilon"],t["decay"])}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class zu extends wu{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}static get className(){return"SGD"}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);t.forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=qa.registeredVariables[t];Li((()=>{const e=Yi(ru(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Pi(yu(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),0!==e.length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t["learningRate"])}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Pu extends zu{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=yu(this.momentum)}static get className(){return"Momentum"}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);t.forEach(((t,n)=>{const r=qa.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Li((()=>lu(r).variable(e)))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&Li((()=>{let e;const t=Yi(ru(this.m,s),a);e=this.useNesterov?Yi(ru(this.c,Yi(a,ru(t,this.m))),r):Yi(ru(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&zi(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(t)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t["learningRate"],t["momentum"],t["useNesterov"])}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Bu extends wu{constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=qa.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}static get className(){return"RMSProp"}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);t.forEach(((t,n)=>{const r=qa.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Li((()=>lu(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Li((()=>lu(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Li((()=>lu(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;Li((()=>{const e=Yi(ru(o,this.decay),ru(iu(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=Yi(ru(t,this.decay),ru(a,1-this.decay)),u=tu(ru(a,this.learningRate),au($u(e,Yi(iu(s),this.epsilon)))),l=Yi(ru(i,this.momentum),u);o.assign(e),t.assign(s),i.assign(l);const c=$u(r,l);r.assign(c)}else{const e=Yi(ru(o,this.decay),ru(iu(a),1-this.decay)),t=Yi(ru(i,this.momentum),tu(ru(a,this.learningRate),au(Yi(e,this.epsilon))));o.assign(e),i.assign(t);const n=$u(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&zi(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&zi(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&zi(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t["learningRate"],t["decay"],t["momentum"],t["epsilon"],t["centered"])}}
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Wu=[ku,Nu,Eu,Lu,Pu,Bu,zu];function Vu(){for(const e of Wu)vu(e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Uu="model",Gu=".json",ju=".weights.bin";function Hu(e){return new Promise((e=>setTimeout(e))).then(e)}class qu{constructor(e){if(!Je().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(qu.URL_SCHEME)&&(e=e.slice(qu.URL_SCHEME.length)),null!=e&&0!==e.length||(e=Uu),this.modelJsonFileName=e+Gu,this.weightDataFileName=e+ju}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=No(e,n),s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=s,await Hu((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Hu((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Co(e)}}}}qu.URL_SCHEME="downloads://";class Ku{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),s=r.modelTopology;if(null==s)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));const a=r.weightsManifest;if(null==a)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:s});const o=To(r,(e=>this.loadWeights(e)));e(o)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const a of e)t.push(...a.weights),n.push(...a.paths);const r=this.checkManifestAndWeightFiles(e),s=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(s).then((e=>[t,ko(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const s=new FileReader;s.onload=e=>{const t=e.target.result;n(t)},s.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>Io(e.name))),r={};for(const s of e)s.paths.forEach((e=>{const s=Io(e);if(-1!==t.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(t.push(s),-1===n.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(s)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}const Xu=e=>Je().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(qu.URL_SCHEME)?Ju(e.slice(qu.URL_SCHEME.length)):null;function Ju(e="model"){return new qu(e)}function Yu(e){return new Ku(e)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zu(e,t,n,r){o(e),n=null==n?0:n,r=null==r?1:r,i(n,r);let s=0;const a=a=>(a.then((a=>{const o=n+ ++s/e.length*(r-n);return t(o),a})),a);function o(e){oe(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}function i(e,t){oe(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),oe(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),oe(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}return Promise.all(e.map(a))}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function Qu(e,t){null==t&&(t={});const n=null==t.fetchFunc?Je().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=0,a=.5,o=null==t.onProgress?await Promise.all(r):await Zu(r,t.onProgress,s,a),i=o.map((e=>e.arrayBuffer())),u=.5,l=1,c=null==t.onProgress?await Promise.all(i):await Zu(i,t.onProgress,u,l);return c}async function el(e,t="",n,r){const s=e=>Qu(e,{requestInit:r}),a=tl(s);return a(e,t,n)}function tl(e){return async(t,n="",r)=>{const s=t.map((()=>!1)),a={},o=null!=r?r.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=po[u]*le(e.shape),c=()=>{s[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),o[n]=!0)})):c(),i.push(e.name),n+=l}))})),!o.every((e=>e))){const e=r.filter(((e,t)=>!o[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${i.join(", ")}.`)}const u=s.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const c=await e(l),h={};let p=0;return u.forEach((e=>{const n=t[e].paths.length;let r=0;for(let t=0;t<n;t++)r+=c[p+t].byteLength;const s=new ArrayBuffer(r),o=new Uint8Array(s);let i=0;for(let t=0;t<n;t++){const e=new Uint8Array(c[p+t]);o.set(e,i),i+=e.byteLength}const u=a[e];u.forEach((e=>{const t=s.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=go(t,[e.manifestEntry]);for(const r in n)h[r]=n[r]})),p+=n})),h}}Oo.registerSaveRouter(Xu);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const nl="application/octet-stream",rl="application/json";class sl{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(oe("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Je().platform.fetch,oe(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&oe(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=No(e,n);t.body.append("model.json",new Blob([JSON.stringify(r)],{type:rl}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:nl}),"model.weights.bin");const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:Co(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(s){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return To(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=al(t),s=this.weightPathPrefix||n,a=$o(e),o=[],i=[];for(const l of e)for(const e of l.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):o.push(s+e+r);this.weightUrlConverter&&o.push(...await Promise.all(i));const u=await Qu(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,ko(u)]}}function al(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),s=n>t?e.substring(n):"";return[r+"/",s]}function ol(e){return null!=e.match(sl.URL_SCHEME_REGEX)}sl.URL_SCHEME_REGEX=/^https?:\/\//;const il=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>ol(e))):ol(e),n)return ul(e,t)}return null};function ul(e,t){return new sl(e,t)}function ll(e,t){return ul(e,t)}Oo.registerSaveRouter(il),Oo.registerLoadRouter(il);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class cl{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class hl{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class pl{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function dl(e,t,n,r){const s=arguments;return new pl(fl(...s))}function fl(e,t,n,r){if(1===arguments.length){const t=null!=e.modelTopology||null!=e.weightSpecs;return t?new cl(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new cl({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new cl({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function ml(e){return new hl(e)}function gl(e){return new hl(e)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yl(e,t,n=!1,r=!1){let s=so(e,"a","matMul"),a=so(t,"b","matMul");[s,a]=Ma(s,a);const o={a:s,b:a},i={transposeA:n,transposeB:r};return qa.runKernel(wt,o,i)}const bl=io({matMul_:yl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xl(e,t,n=1,r=0,s="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a=so(e,"indices","oneHot","int32"),o={indices:a},i={dtype:s,depth:t,onValue:n,offValue:r};return qa.runKernel(sr,o,i)}const vl=io({oneHot_:xl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wl(e){const t=so(e,"input","imag"),n={input:t};return qa.runKernel(vn,n)}const kl=io({imag_:wl});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Il(e){const t=so(e,"x","neg"),n={x:t};return qa.runKernel(Zn,n)}const Nl=io({neg_:Il});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Sl(e){const t=so(e,"input","real"),n={input:t};return qa.runKernel(mr,n)}const Tl=io({real_:Sl});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Cl(e,t,n){const r=so(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),oe(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{oe(e>=0&&e<r.rank,(()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`))})),r.rank<=1)return r.clone();const s={x:r},a={perm:t};return"complex64"===r.dtype?Li((()=>{let e=Tl(r),t=kl(r);return e=qa.runKernel(as,{x:e},a),t=qa.runKernel(as,{x:t},a),n&&(t=Nl(t)),lo(e,t)})):qa.runKernel(as,s,a)}const $l=io({transpose_:Cl});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function El(e,t,n){const r=so(e,"labels","confusionMatrix"),s=so(t,"predictions","confusionMatrix");oe(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),oe(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),oe(1===s.rank,(()=>`Expected the rank of predictions to be 1, but got ${s.rank}`)),oe(r.shape[0]===s.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`)),oe(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const a=vl(Ni(r,"int32"),n),o=vl(Ni(s,"int32"),n),i=$l(a),u=bl(i,o);return Ni(u,"int32")}const Al=io({confusionMatrix_:El});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rl(e,t,n){if(ue(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=to(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return co(e,t,r,n)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let _l;function Ol(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)o=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);i=!0}const u=ws(ps,qa.backendName);if(null!=u){const n={pixels:e},r={numChannels:t};return qa.runKernel(ps,n,r)}const[l,c]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let h,p;if(o)h=e.getContext("2d").getImageData(0,0,l,c).data;else if(r||n)h=e.data;else if(a||s||i){if(null==_l)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");_l=new OffscreenCanvas(1,1).getContext("2d")}else _l=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});_l.canvas.width=l,_l.canvas.height=c,_l.drawImage(e,0,0,l,c),h=_l.getImageData(0,0,l,c).data}if(4===t)p=new Int32Array(h);else{const e=l*c;p=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)p[n*t+e]=h[4*n+e]}const d=[c,l,t];return Rl(p,d,"int32")}function Fl(e){return null!=e&&e.data instanceof Uint8Array}function Dl(){return"undefined"!==typeof window&&"undefined"!==typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")}function Ml(e){return null!=e&&0!==e.width&&0!==e.height}function Ll(e){return Dl()&&!(e instanceof ImageBitmap)&&Ml(e)&&!Fl(e)}async function zl(e,t=3){let n=null;if(Je().getBool("WRAP_TO_IMAGEBITMAP")&&Ll(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Ol(n,t)}async function Pl(e,t){let n=so(e,"img","toPixels");if(!(e instanceof Sa)){const e=n;n=Ni(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,s]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2];if(a>4||2===a)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const o=await n.data(),i="float32"===n.dtype?255:1,u=new Uint8ClampedArray(s*r*4);for(let l=0;l<r*s;++l){const e=[0,0,0,255];for(let r=0;r<a;r++){const t=o[l*a+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===a?(e[0]=t*i,e[1]=t*i,e[2]=t*i):e[r]=t*i}const t=4*l;u[t+0]=Math.round(e[0]),u[t+1]=Math.round(e[1]),u[t+2]=Math.round(e[2]),u[t+3]=Math.round(e[3])}if(null!=t){t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const Bl=io({fromPixels_:Ol});function Wl(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===le(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let o=1;for(let h=0;h<s.length-1;++h)o*=s[h];const i=e.shape,u=s.slice();u.pop();let l=1;for(let h=a;h<n;++h)l*=i[h],u.push(i[h]);const c=[...Fe(e.shape).map((e=>e/l)),1].slice(0,a);return[u,o,l,c]}function Vl(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let o=0;o<s;++o)if(n.shape[o]!==t.shape[o])throw new Error(a+` updates.shape[${o}] (${n.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<n.rank-s;++o)if(n.shape[o+s]!==e[o+r])throw new Error(a+` updates.shape[${o+s}] (${n.shape[o+s]}) != shape[${o+s}] (${e[o+s]})`)}function Ul(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Vl(n,t,e)}function Gl(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let o=1;for(let h=s;h<a;++h)o*=n[h];const i=s<1?1:s,u=le(t.shape)/i,l=[...Fe(n.slice(0,s)),1],c=le(n);return{sliceRank:s,numUpdates:u,sliceSize:o,strides:l,outputSize:c}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const jl=-2,Hl=-1;function ql(e,t,n){const r=e.shape.length;oe(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),oe(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)oe(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function Kl(e){const t=[];let n=0;while(e>0)1&e&&t.push(n),e/=2,n++;return t}function Xl(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function Jl(e,t,n,r){const s=[...e];for(let a=s.length;a<r.length;a++)s.push(1);for(let a=0;a<n;a++)0===a?s[t]=1:(s.splice(t,0,1),s.pop());return s}function Yl(e,t,n){return n<=e?n:n-(t-1)}function Zl(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Ql(e,t,n,r,s,a,o,i,u){const l=e.length;let c=new Array(l),h=new Array(l),p=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=ec(o,u,l,r,e),h=tc(i,u,l,s,e),p=Jl(a,u,l,e)}else for(let d=0;d<l;d++)c[d]=rc(o,r,a,e,d,u),h[d]=sc(i,s,a,e,d,u),p[d]=nc(a,d,u);return{begin:c,end:h,strides:p}}function ec(e,t,n,r,s){const a=[...s],o=Zl(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=0;else{const s=Yl(t,n,i);let o=r[s];e&1<<s&&(o=0),a[i]=o}return a}function tc(e,t,n,r,s){const a=[...s],o=Zl(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=Number.MAX_SAFE_INTEGER;else{const s=Yl(t,n,i);let o=r[s];e&1<<s&&(o=Number.MAX_SAFE_INTEGER),a[i]=o}for(let i=0;i<a.length;i++){const e=s[i];a[i]<0&&(a[i]+=e),a[i]=ee(0,a[i],s[i])}return a}function nc(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function rc(e,t,n,r,s,a){let o=t[s];const i=n[s]||1;(e&1<<s||a&1<<s||null==o)&&(o=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[s];return o<0&&(o+=u),o=ee(0,o,u-1),o}function sc(e,t,n,r,s,a){let o=t[s];const i=n[s]||1;(e&1<<s||a&1<<s||null==o)&&(o=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[s];return o<0&&(o+=u),o=i>0?ee(0,o,u):ee(-1,o,u-1),o}function ac(e,t,n){let r=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){r=s;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function oc(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function ic(e,t,n){let r;const s=e.shape.length;let a;return r="number"===typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{oe(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"===typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(oe(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function uc(e,t,n,r,s,a,o,i,u){let l;if(null==r?(l=new Array(t.length),l.fill(1)):l=r,null!=o&&0!==(o&o-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:s,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:u};for(let x=0;x<h.dims;x++)c&&0!==(1<<x&i)&&h.numAddAxisAfterEllipsis++,1<<x&o&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};lc(h,p);let d=!0,f=!0,m=!0;const g=[],y=[];for(let x=0;x<e.length;++x){if(0===p.strides[x])throw Error(`strides[${x}] must be non-zero`);const t=!!(p.shrinkAxisMask&1<<x),n=e[x];if(-1===n){g.push(t?1:-1);continue}const r=[p.beginMask&1<<x,p.endMask&1<<x],s=[p.strides[x]>0?0:-1,p.strides[x]>0?n:n-1];if(t&&p.strides[x]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[x];const a=!!(p.beginMask&1<<x&&p.endMask&1<<x);if(p.beginValid&&p.endValid){if(t){const e=p.begin[x]<0?n+p.begin[x]:p.begin[x];if(p.begin[x]=e,p.end[x]=p.begin[x]+1,e<0||e>=n)throw Error(`slice index ${p.begin[x]} of dimension ${x} out of bounds.`)}else p.begin[x]=cc(p.begin[x],0,p.strides[x],n,r,s),p.end[x]=cc(p.end[x],1,p.strides[x],n,r,s);const e=1===p.strides[x]&&0===p.begin[x]&&p.end[x]===n;d=d&&e,f=f&&(0===x&&1===p.strides[x]||e)}else d=d&&1===p.strides[x]&&a,f=f&&(0===x&&1===p.strides[x]||a);let o,i=!1;if(p.beginValid&&p.endValid?(o=p.end[x]-p.begin[x],i=!0):t?(o=1,i=!0):a&&n>=0&&(o=p.strides[x]<0?-n:n,i=!0),i){let e;e=0===o||o<0!==p.strides[x]<0?0:Math.trunc(o/p.strides[x])+(o%p.strides[x]!==0?1:0),g.push(e)}else g.push(-1)}for(let x=0;x<p.finalShapeGatherIndices.length;++x){const e=p.finalShapeGatherIndices[x];e>=0?y.push(g[e]):e===jl&&y.push(1)}const b=y.filter(((e,t)=>p.finalShapeGatherIndices[t]!==jl));return{finalShapeSparse:b,finalShape:y,isIdentity:d,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function lc(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(jl),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(Hl),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}function cc(e,t,n,r,s,a){if(s[t])return n>0?a[t]:a[t+1&1];{const t=e<0?r+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const hc=.001,pc=.1;function dc(e,t,n){return null==n&&(n=fc()),mc(e,t,((e,t)=>xc(e,t,n)))}function fc(){return 32===qa.backend.floatPrecision()?hc:pc}function mc(e,t,n){let r=!0;if((na(e)||na(t))&&(r=!1),na(e)&&na(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=to(e),r=to(t);if(!he(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const s=na(e)?e:ra(e),a=na(t)?t:ra(t);if(s.length!==a.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${a.length}.\nActual:   ${s}.\nExpected: ${a}.`);for(let o=0;o<a.length;++o){const e=s[o],t=a[o];if(!n(e,t))throw new Error(`Arrays differ: actual[${o}] = ${e}, expected[${o}] = ${t}.\nActual:   ${s}.\nExpected: ${a}.`)}"undefined"!==typeof expect&&expect().nothing()}function gc(e,t){e().then((()=>t.fail()),(()=>t())),"undefined"!==typeof expect&&expect().nothing()}function yc(e,t){const n="string"===typeof t||"number"===typeof t||"boolean"===typeof t?[t]:t;return $e(e)||$e(e[0])||$e(t)||$e(t[0])?mc(e,n,((e,t)=>e==t)):mc(e,t,((e,t)=>xc(e,t,0)))}function bc(e,t,n){if(null==n&&(n=fc()),!xc(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);"undefined"!==typeof expect&&expect().nothing()}function xc(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function vc(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function wc(e,t){const n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let s=0;s<r.length;s++)if(n[s]!==r[s])throw new Error(`Expected ArrayBuffer value at ${s} to be ${r[s]} but got ${n[s]} instead`)}function kc(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?kc(n):e[t]=ea(n)}return e}function Ic(e){const t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise((e=>{t.addEventListener("loadeddata",(n=>e(t))),t.load()}))}async function Nc(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise((t=>{e.requestVideoFrameCallback(t)}))}
/** @license See the LICENSE file. */
const Sc="4.2.0";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Tc{static sgd(e){return new zu(e)}static momentum(e,t,n=!1){return new Pu(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new Bu(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new Eu(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new ku(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new Lu(e,t,n,r,s)}static adagrad(e,t=.1){return new Nu(e,t)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Cc(e){const t=so(e,"x","acos"),n={x:t};return qa.runKernel(st,n)}const $c=io({acos_:Cc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ec(e){const t=so(e,"x","acosh"),n={x:t};return qa.runKernel(at,n)}const Ac=io({acosh_:Ec});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rc(e){oe(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),oe(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>so(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!he(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return qa.runKernel(it,r)}const _c=io({addN_:Rc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Oc(e,t=null,n=!1){const r=so(e,"x","all","bool"),s={x:r},a={axis:t,keepDims:n};return qa.runKernel(ut,s,a)}const Fc=io({all_:Oc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Dc(e,t=null,n=!1){const r=so(e,"x","any","bool"),s={x:r},a={axis:t,keepDims:n};return qa.runKernel(lt,s,a)}const Mc=io({any_:Dc});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Lc(e,t=0){const n=so(e,"x","argMax"),r={x:n},s={axis:t};return qa.runKernel(ct,r,s)}const zc=io({argMax_:Lc});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Pc(e,t=0){const n=so(e,"x","argMin"),r={x:n},s={axis:t};return qa.runKernel(ht,r,s)}const Bc=io({argMin_:Pc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Wc(e){const t=so(e,"x","asin"),n={x:t};return qa.runKernel(pt,n)}const Vc=io({asin_:Wc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Uc(e){const t=so(e,"x","asinh"),n={x:t};return qa.runKernel(dt,n)}const Gc=io({asinh_:Uc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jc(e){const t=so(e,"x","atan"),n={x:t};return qa.runKernel(ft,n)}const Hc=io({atan_:jc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qc(e,t){let n=so(e,"a","atan2"),r=so(t,"b","atan2");[n,r]=Ma(n,r);const s={a:n,b:r};return qa.runKernel(gt,s)}const Kc=io({atan2_:qc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xc(e){const t=so(e,"x","atanh"),n={x:t};return qa.runKernel(mt,n)}const Jc=io({atanh_:Xc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Yc(e,t,n,r,s="NHWC",a){const o=e[3],i=[...t,o],u=fh(s);return eh(e,i,n,a,r,null,null,u)}function Zc(e,t,n,r,s,a,o="channelsLast"){const[i,u]=ah(t);let l;if("channelsLast"===o)l=[i,u,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);l=[i,u,e[1],e[1]]}return eh(e,l,n,r,s,a,!1,o)}function Qc(e,t,n,r,s,a,o="NDHWC"){const[i,u,l]=oh(t);let c,h;if("NDHWC"===o)h="channelsLast",c=[i,u,l,e[4],e[4]];else{if("NCDHW"!==o)throw new Error(`Unknown dataFormat ${o}`);h="channelsFirst",c=[i,u,l,e[1],e[1]]}return th(e,c,n,r,s,!1,h,a)}function eh(e,t,n,r,s,a,o=!1,i="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,h]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,h,l,c]=e}const[p,d,,f]=t,[m,g]=ah(n),[y,b]=ah(r),x=ih(p,y),v=ih(d,b),{padInfo:w,outHeight:k,outWidth:I}=uh(s,l,c,m,g,x,v,a,i),N=o?f*h:f;let S;return"channelsFirst"===i?S=[u,N,k,I]:"channelsLast"===i&&(S=[u,k,I,N]),{batchSize:u,dataFormat:i,inHeight:l,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:N,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:d,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:S,filterShape:t}}function th(e,t,n,r,s,a=!1,o="channelsLast",i){let[u,l,c,h,p]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h,p]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,p,l,c,h]=e}const[d,f,m,,g]=t,[y,b,x]=oh(n),[v,w,k]=oh(r),I=ih(d,v),N=ih(f,w),S=ih(m,k),{padInfo:T,outDepth:C,outHeight:$,outWidth:E}=lh(s,l,c,h,y,b,x,I,N,S,i),A=a?g*p:g;let R;return"channelsFirst"===o?R=[u,A,C,$,E]:"channelsLast"===o&&(R=[u,C,$,E,A]),{batchSize:u,dataFormat:o,inDepth:l,inHeight:c,inWidth:h,inChannels:p,outDepth:C,outHeight:$,outWidth:E,outChannels:A,padInfo:T,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:d,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:N,effectiveFilterWidth:S,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:R,filterShape:t}}function nh(e,t,n,r,s){null==r&&(r=sh(e,t,n));const a=e[0],o=e[1],i=ch((a-t+2*r)/n+1,s),u=ch((o-t+2*r)/n+1,s);return[i,u]}function rh(e,t,n,r,s,a){null==s&&(s=sh(e,t[0],r[0]));const o=[0,0,0,n];for(let i=0;i<3;i++)e[i]+2*s>=t[i]&&(o[i]=ch((e[i]-t[i]+2*s)/r[i]+1,a));return o}function sh(e,t,n,r=1){const s=ih(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function ah(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function oh(e){return"number"===typeof e?[e,e,e]:e}function ih(e,t){return t<=1?e:e+(e-1)*(t-1)}function uh(e,t,n,r,s,a,o,i,u){let l,c,h;if("number"===typeof e){const s=0===e?"VALID":"NUMBER";l={top:e,bottom:e,left:e,right:e,type:s};const o=nh([t,n],a,r,e,i);c=o[0],h=o[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),i=Math.max(0,(h-1)*s+o-n),u=Math.floor(e/2),p=e-u,d=Math.floor(i/2),f=i-d;l={top:u,bottom:p,left:d,right:f,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),h=Math.ceil((n-o+1)/s);else{if("object"!==typeof e)throw Error(`Unknown padding parameter: ${e}`);{const p="channelsLast"===u?e[1][0]:e[2][0],d="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1],g=0===p&&0===d&&0===f&&0===m?"VALID":"EXPLICIT";l={top:p,bottom:d,left:f,right:m,type:g},c=ch((t-a+p+d)/r+1,i),h=ch((n-o+f+m)/s+1,i)}}return{padInfo:l,outHeight:c,outWidth:h}}function lh(e,t,n,r,s,a,o,i,u,l,c){let h,p,d,f;if("valid"===e&&(e=0),"number"===typeof e){const m=0===e?"VALID":"NUMBER";h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:m};const g=rh([t,n,r,1],[i,u,l],1,[s,a,o],e,c);p=g[0],d=g[1],f=g[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{p=Math.ceil(t/s),d=Math.ceil(n/a),f=Math.ceil(r/o);const e=(p-1)*s+i-t,c=(d-1)*a+u-n,m=(f-1)*o+l-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,v=Math.floor(m/2),w=m-v;h={top:b,bottom:x,left:v,right:w,front:g,back:y,type:"SAME"}}}return{padInfo:h,outDepth:p,outHeight:d,outWidth:f}}function ch(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function hh(e){const[t,n,r]=ah(e);return 1===t&&1===n&&1===r}function ph(e,t){return hh(e)||hh(t)}function dh(e){return ah(e).every((e=>e>0))}function fh(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function mh(e,t,n){if(null!=n){if("string"===typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"===typeof t)oe(pe(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!==typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{oe(pe(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gh(e,t){const n=so(e,"x","reshape","string_or_numeric"),r={x:n},s={shape:t};return qa.runKernel(br,r,s)}const yh=io({reshape_:gh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bh(e,t,n,r,s){const a=so(e,"x","avgPool","float32"),o=1;oe(ph(n,o),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`));let i=a,u=!1;3===a.rank&&(u=!0,i=yh(a,[1,a.shape[0],a.shape[1],a.shape[2]])),oe(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),mh("avgPool",r,s);const l={x:i},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let h=qa.runKernel(yt,l,c);return h=Ni(h,a.dtype),u?yh(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const xh=io({avgPool_:bh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vh(e,t,n,r,s,a="NDHWC"){const o=so(e,"x","avgPool3d","float32");let i=o,u=!1;4===o.rank&&(u=!0,i=yh(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),oe(5===i.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`)),oe("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),oe("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),mh("avgPool3d",r,s);const l={x:i},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a};let h=qa.runKernel(xt,l,c);return h=Ni(h,i.dtype),u?yh(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const wh=io({avgPool3d_:vh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kh(e,t=0){oe(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=ao(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Ti(n[0]);const r=n,s={axis:t};return qa.runKernel(Rt,r,s)}const Ih=io({concat_:kh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Nh(e){const t=so(e,"x","sigmoid","float32"),n={x:t};return qa.runKernel(Dr,n)}const Sh=io({sigmoid_:Nh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Th(e,t,n){const r=so(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:t,size:n};return qa.runKernel(Rr,s,a)}const Ch=io({slice_:Th});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $h(e){const t=so(e,"x","tanh","float32"),n={x:t};return qa.runKernel(ts,n)}const Eh=io({tanh_:$h});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ah(e,t,n,r,s,a){const o=so(e,"forgetBias","basicLSTMCell"),i=so(t,"lstmKernel","basicLSTMCell"),u=so(n,"lstmBias","basicLSTMCell"),l=so(r,"data","basicLSTMCell"),c=so(s,"c","basicLSTMCell"),h=so(a,"h","basicLSTMCell"),p=Ih([l,h],1),d=bl(p,i),f=Yi(d,u),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=Ch(f,[0,0],y),x=Ch(f,[0,g],y),v=Ch(f,[0,2*g],y),w=Ch(f,[0,3*g],y),k=Yi(ru(Sh(b),Eh(x)),ru(c,Sh(Yi(o,v)))),I=ru(Eh(k),Sh(w));return[k,I]}const Rh=io({basicLSTMCell_:Ah});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _h(e,t,n){const r=so(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));oe(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),oe(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),oe(r.shape[0]%s===0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const a={x:r},o={blockShape:t,crops:n};return qa.runKernel(kt,a,o)}const Oh=io({batchToSpaceND_:_h});function Fh(e){let t;return t=0===e.rank||1===e.rank?yh(e,[1,1,1,e.size]):2===e.rank?yh(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?yh(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Dh(e,t,n,r,s,a){null==a&&(a=.001);const o=so(e,"x","batchNorm"),i=so(t,"mean","batchNorm"),u=so(n,"variance","batchNorm");let l,c;null!=s&&(l=so(s,"scale","batchNorm")),null!=r&&(c=so(r,"offset","batchNorm")),oe(i.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),oe(null==c||i.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),oe(null==l||i.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=Fh(o),p={x:h,scale:l,offset:c,mean:i,variance:u},d={varianceEpsilon:a},f=qa.runKernel(dn,p,d);return yh(f,o.shape)}const Mh=io({batchNorm_:Dh});function Lh(e,t,n,r,s,a){const o=so(e,"x","batchNorm"),i=so(t,"mean","batchNorm"),u=so(n,"variance","batchNorm");let l,c;return null!=s&&(l=so(s,"scale","batchNorm")),null!=r&&(c=so(r,"offset","batchNorm")),oe(2===o.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`)),oe(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`)),oe(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&oe(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&oe(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Mh(o,i,u,c,l,a)}const zh=io({batchNorm2d_:Lh});function Ph(e,t,n,r,s,a){const o=so(e,"x","batchNorm"),i=so(t,"mean","batchNorm"),u=so(n,"variance","batchNorm");let l,c;return null!=s&&(l=so(s,"scale","batchNorm")),null!=r&&(c=so(r,"offset","batchNorm")),oe(3===o.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`)),oe(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`)),oe(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&oe(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&oe(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Mh(o,i,u,c,l,a)}const Bh=io({batchNorm3d_:Ph});function Wh(e,t,n,r,s,a){const o=so(e,"x","batchNorm"),i=so(t,"mean","batchNorm"),u=so(n,"variance","batchNorm");let l,c;return null!=s&&(l=so(s,"scale","batchNorm")),null!=r&&(c=so(r,"offset","batchNorm")),oe(4===o.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`)),oe(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`)),oe(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&oe(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&oe(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Mh(o,i,u,c,l,a)}const Vh=io({batchNorm4d_:Wh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Uh(e,t,n){const r=so(e,"x","bincount"),s=so(t,"weights","bincount");oe("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),oe(n>=0,(()=>`size must be non-negative, but got ${n}.`)),oe(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const a={x:r,weights:s},o={size:n};return qa.runKernel(It,a,o)}const Gh=io({bincount_:Uh});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jh(e,t){const n=so(e,"s0","broadcastArgs","int32"),r=so(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:n,s1:r};return qa.runKernel(St,s)}const Hh=io({broadcastArgs_:jh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qh(e,t){let n=so(e,"broadcastTo","x");const r=n.shape;if(We(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();while(e.length<t.length)e.unshift(1);n=yh(n,e)}const s=n.shape,a=Array.from(t);for(let l=t.length-1;l>=0;l--)if(s[l]===t[l])a[l]=1;else if(1!==n.shape[l])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);const o=a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0));if(0===o.length)return Ti(n);const i={x:n},u={reps:a};return qa.runKernel(ns,i,u)}const Kh=io({broadcastTo_:qh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xh(e){const t=so(e,"x","ceil","float32"),n={x:t};return qa.runKernel(Ct,n)}const Jh=io({ceil_:Xh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Yh(e,t,n){const r=so(e,"x","clipByValue");if(oe(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return Iu(r.shape,t,r.dtype);const s={x:r},a={clipValueMin:t,clipValueMax:n};return qa.runKernel($t,s,a)}const Zh=io({clipByValue_:Yh});function Qh(e){return Ih(e,0)}const ep=io({concat1d_:Qh});function tp(e,t){return Ih(e,t)}const np=io({concat2d_:tp});function rp(e,t){return Ih(e,t)}const sp=io({concat3d_:rp});function ap(e,t){return Ih(e,t)}const op=io({concat4d_:ap});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ip(e,t,n,r,s="NHWC",a=[1,1],o){const i=so(e,"x","conv2d","float32"),u=so(t,"filter","conv2d","float32");let l=i,c=!1;3===i.rank&&(c=!0,l=yh(i,[1,i.shape[0],i.shape[1],i.shape[2]])),oe(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),oe(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),mh("conv2d",r,o);const h="NHWC"===s?l.shape[3]:l.shape[1];oe(h===u.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`)),oe(ph(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),oe(dh(a),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),oe(dh(n),(()=>"Error in conv2D: Strides should be larger than 0."));const p={x:l,filter:u},d={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o},f=qa.runKernel(_t,p,d);return c?yh(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const up=io({conv2d_:ip});function lp(e,t,n,r,s="NWC",a=1,o){const i=so(e,"x","conv1d"),u=so(t,"filter","conv1d");let l=i,c=!1;2===i.rank&&(c=!0,l=yh(i,[1,i.shape[0],i.shape[1]])),oe(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),oe(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),mh("conv1d",r,o),oe(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),oe(ph(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),oe(dh(a),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),oe(dh(n),(()=>"Error in conv1D: Stride should be larger than 0.")),oe("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=yh(u,[1,u.shape[0],u.shape[1],u.shape[2]]),p=yh(l,[l.shape[0],1,l.shape[1],l.shape[2]]),d=[1,n],f=[1,a],m="NHWC",g=up(p,h,d,r,m,f,o);return yh(g,c?[g.shape[2],g.shape[3]]:[g.shape[0],g.shape[2],g.shape[3]])}const cp=io({conv1d_:lp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hp(e,t,n,r,s,a="NHWC",o){oe(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let i=e,u=t,l=!1;3===t.rank&&(l=!0,u=yh(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),oe(4===i.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`)),oe(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),oe(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?i[3]:i[1],h="NHWC"===a?u.shape[3]:u.shape[1];oe(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),oe(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),mh("conv2dDerInput",s,o);const p={dy:u,filter:n},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:o,inputShape:i},f=qa.runKernel(Ft,p,d);return l?yh(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const pp=io({conv2DBackpropInput_:hp});function dp(e,t,n,r,s,a){const o=so(e,"x","conv2dTranspose"),i=so(t,"filter","conv2dTranspose");return pp(n,o,i,r,s,"NHWC",a)}const fp=io({conv2dTranspose_:dp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mp(e,t,n,r,s="NDHWC",a=[1,1,1]){const o=so(e,"x","conv3d"),i=so(t,"filter","conv3d");let u=o,l=!1;4===o.rank&&(l=!0,u=yh(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),oe(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),oe(5===i.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`)),oe(u.shape[4]===i.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`)),oe(ph(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),oe("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`)),oe(dh(a),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),oe(dh(n),(()=>"Error in conv3D: Strides should be larger than 0."));const c={x:u,filter:i},h={strides:n,pad:r,dataFormat:s,dilations:a},p=qa.runKernel(Dt,c,h);return l?yh(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const gp=io({conv3d_:mp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yp(e,t,n,r,s){oe(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,o=t,i=!1;4===t.rank&&(i=!0,o=yh(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const u=a[4],l=o.shape[4];oe(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),oe(5===o.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`)),oe(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),oe(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),oe(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const c={dy:o,filter:n},h={pad:s,strides:r,inputShape:a},p=qa.runKernel(Lt,c,h);return i?yh(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const bp=io({conv3DBackpropInput_:yp});function xp(e,t,n,r,s){const a=so(e,"x","conv3dTranspose"),o=so(t,"filter","conv3dTranspose");return bp(n,a,o,r,s)}const vp=io({conv3dTranspose_:xp});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wp(e){const t=so(e,"x","cos","float32"),n={x:t};return qa.runKernel(zt,n)}const kp=io({cos_:wp});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ip(e){const t=so(e,"x","cosh","float32"),n={x:t};return qa.runKernel(Pt,n)}const Np=io({cosh_:Ip});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Sp(e,t=0,n=!1,r=!1){const s=so(e,"x","cumprod"),a={x:s},o={axis:t,exclusive:n,reverse:r};return qa.runKernel(Bt,a,o)}const Tp=io({cumprod_:Sp});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Cp(e,t=0,n=!1,r=!1){const s=so(e,"x","cumsum"),a={x:s},o={axis:t,exclusive:n,reverse:r};return qa.runKernel(Wt,a,o)}const $p=io({cumsum_:Cp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ep(e,t,n,r=!1){const s=so(e,"x","denseBincount"),a=so(t,"weights","denseBincount");oe("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),oe(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),oe(n>=0,(()=>`size must be non-negative, but got ${n}.`)),oe(a.size===s.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`));const o={x:s,weights:a},i={size:n,binaryOutput:r};return qa.runKernel(Ut,o,i)}const Ap=io({denseBincount_:Ep});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rp(e,t,n="NHWC"){const r=so(e,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],o="NHWC"===n?r.shape[3]:r.shape[1];oe(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),oe(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),oe(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),oe(o%(t*t)===0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${r.shape}`));const i={x:r},u={blockSize:t,dataFormat:n};return qa.runKernel(Gt,i,u)}const _p=io({depthToSpace_:Rp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Op(e,t,n,r,s="NHWC",a=[1,1],o){const i=so(e,"x","depthwiseConv2d","float32"),u=so(t,"filter","depthwiseConv2d","float32");let l=i,c=!1;3===i.rank&&(c=!0,l=yh(i,[1,i.shape[0],i.shape[1],i.shape[2]])),oe(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),oe(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`));const h="NHWC"===s?l.shape[3]:l.shape[1];oe(h===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${u.shape[2]}.`)),mh("depthwiseConv2d",r,o);const p={x:l,filter:u},d={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o},f=qa.runKernel(jt,p,d);return c?yh(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Fp=io({depthwiseConv2d_:Op});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Dp(e){const t=so(e,"x","diag"),n={x:t};return qa.runKernel(Kt,n)}const Mp=io({diag_:Dp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Lp(e,t,n,r,s=[1,1],a="NHWC"){const o=so(e,"x","dilation2d"),i=so(t,"filter","dilation2d");oe(3===o.rank||4===o.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`)),oe(3===i.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`)),oe("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let u=o,l=!1;3===o.rank&&(u=yh(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=!0),oe(u.shape[3]===i.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${i.shape[2]}`));const c={x:u,filter:i},h={strides:n,pad:r,dilations:s},p=qa.runKernel(Xt,c,h);return l?yh(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const zp=io({dilation2d_:Lp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Pp(e,t){let n=so(e,"a","equal","string_or_numeric"),r=so(t,"b","equal","string_or_numeric");[n,r]=Ma(n,r),Fu(n.shape,r.shape);const s={a:n,b:r};return qa.runKernel(rn,s)}const Bp=io({equal_:Pp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Wp(e,t,n){const r=so(t,"a","where"),s=so(n,"b","where"),a=so(e,"condition","where","bool"),o=Fu(Fu(a.shape,r.shape),s.shape),i=Kh(a,o),u=Kh(r,o),l=Kh(s,o),c={condition:i,t:u,e:l};return qa.runKernel(Er,c)}const Vp=io({where_:Wp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Up(e,t){let n=so(e,"a","div"),r=so(t,"b","div");[n,r]=Ma(n,r);const s=tu(n,r),a=lu(s),o=Bp(r,a);return Vp(o,a,s)}const Gp=io({divNoNan_:Up});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jp(e,t){const n=so(e,"t1","dot"),r=so(t,"t2","dot");oe((1===n.rank||2===n.rank)&&(1===r.rank||2===r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(oe(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const e=yh(n,[1,-1]),t=yh(r,[-1,1]),s=bl(e,t);return yh(s,[])}if(1===n.rank&&2===r.rank){const e=yh(n,[1,-1]),t=yh(r,[r.shape[0],r.shape[1]]),s=bl(e,t);return yh(s,[s.size])}if(2===n.rank&&1===r.rank){const e=yh(r,[-1,1]),t=bl(n,e);return yh(t,[t.size])}{const e=yh(r,[r.shape[0],r.shape[1]]),t=bl(n,e);return t}}const Hp=io({dot_:jp});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qp(e,...t){const n=t.map(((e,t)=>so(e,`tensors${t}`,"einsum"))),r={equation:e};return qa.runKernel(Qt,n,r)}const Kp=io({einsum_:qp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xp(e){const t=so(e,"x","elu","float32"),n={x:t};return qa.runKernel(en,n)}const Jp=io({elu_:Xp});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Yp(e){let t=so(e,"x","erf");oe("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Ni(t,"float32"));const n={x:t};return qa.runKernel(nn,n)}const Zp=io({erf_:Yp});
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Qp(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function ed(e,t,n){const r=e.length+t.length,s=[];let a=0,o=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?s.push(e[a++]):s.push(t[o++]);return s}function td(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);const s=t.map((t=>e[t]));return[n,s]}function nd(e,t){const n=t.map((e=>1));return ed(e,n,t)}function rd(e,t,n){oe(Qp(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function sd(e,t){if(Qp(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function ad(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function od(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function id(e,t=null,n=!1){const r=so(e,"x","max"),s={x:r},a={reductionIndices:t,keepDims:n};return qa.runKernel(zn,s,a)}const ud=io({max_:id});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ld(e,t=null,n=!1){const r=so(e,"x","min"),s={x:r},a={axis:t,keepDims:n};return qa.runKernel(Hn,s,a)}const cd=io({min_:ld});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hd(e,t=null,n=!1){let r=so(e,"x","sum");"bool"===r.dtype&&(r=Ni(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return qa.runKernel(zr,s,a)}const pd=io({sum_:hd});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dd(e,t="euclidean",n=null,r=!1){e=so(e,"x","norm");const s=fd(e,t,n);let a=s.shape;if(r){const t=xe(n,e.shape);a=nd(s.shape,t)}return yh(s,a)}function fd(e,t,n=null){if(0===e.rank)return Ru(e);if(1!==e.rank&&null===n)return fd(yh(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return pd(Ru(e),n);if(t===1/0)return ud(Ru(e),n);if(t===-1/0)return cd(Ru(e),n);if("euclidean"===t||2===t)return au(pd(Tu(Ru(e),yu(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return ud(pd(Ru(e),n[0]),n[1]-1);if(t===1/0)return ud(pd(Ru(e),n[1]),n[0]);if(t===-1/0)return cd(pd(Ru(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return au(pd(iu(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const md=io({norm_:dd});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gd(e,t=null,n=!1){return md(e,"euclidean",t,n)}const yd=io({euclideanNorm_:gd});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bd(e){const t=so(e,"x","exp"),n={x:t};return qa.runKernel(sn,n)}const xd=io({exp_:bd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vd(e,t=0){const n=so(e,"x","expandDims","string_or_numeric");oe(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return qa.runKernel(an,r,s)}const wd=io({expandDims_:vd});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kd(e){const t=so(e,"x","expm1"),n={x:t};return qa.runKernel(on,n)}const Id=io({expm1_:kd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Nd(e,t){const n=so(e,"x","tile","string_or_numeric");oe(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return qa.runKernel(ns,r,s)}const Sd=io({tile_:Nd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Td(e,t,n,r="float32"){null==t&&(t=e);const s=ki([e,t],r),a=e<=t?e:t;for(let i=0;i<a;++i)s.set(1,i,i);const o=yh(s.toTensor(),[e,t]);if(null==n)return o;if(1===n.length)return Sd(wd(o,0),[n[0],1,1]);if(2===n.length)return Sd(wd(wd(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return Sd(wd(wd(wd(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}const Cd=io({eye_:Td});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $d(e){const t=so(e,"x","floor","float32"),n={x:t};return qa.runKernel(hn,n)}const Ed=io({floor_:$d});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ad(e,t,n=0,r=0){const s=so(e,"x","gather"),a=so(t,"indices","gather","int32"),o={x:s,indices:a},i={axis:n,batchDims:r};return qa.runKernel(fn,o,i)}const Rd=io({gather_:Ad});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _d(e,t){let n=so(e,"a","greater","string_or_numeric"),r=so(t,"b","greater","string_or_numeric");[n,r]=Ma(n,r),Fu(n.shape,r.shape);const s={a:n,b:r};return qa.runKernel(gn,s)}const Od=io({greater_:_d});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Fd(e,t){let n=so(e,"a","greaterEqual","string_or_numeric"),r=so(t,"b","greaterEqual","string_or_numeric");[n,r]=Ma(n,r),Fu(n.shape,r.shape);const s={a:n,b:r};return qa.runKernel(yn,s)}const Dd=io({greaterEqual_:Fd});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Md(e){const t=so(e,"x","isFinite"),n={x:t};return qa.runKernel(wn,n)}const Ld=io({isFinite_:Md});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zd(e){const t=so(e,"x","isInf"),n={x:t};return qa.runKernel(kn,n)}const Pd=io({isInf_:zd});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bd(e){const t=so(e,"x","isNaN"),n={x:t};return qa.runKernel(In,n)}const Wd=io({isNaN_:Bd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Vd(e,t=.2){const n=so(e,"x","leakyRelu"),r={x:n},s={alpha:t};return qa.runKernel(Nn,r,s)}const Ud=io({leakyRelu_:Vd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Gd(e,t){let n=so(e,"a","less","string_or_numeric"),r=so(t,"b","less","string_or_numeric");[n,r]=Ma(n,r),Fu(n.shape,r.shape);const s={a:n,b:r};return qa.runKernel(Sn,s)}const jd=io({less_:Gd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Hd(e,t){let n=so(e,"a","lessEqual","string_or_numeric"),r=so(t,"b","lessEqual","string_or_numeric");[n,r]=Ma(n,r),Fu(n.shape,r.shape);const s={a:n,b:r};return qa.runKernel(Tn,s)}const qd=io({lessEqual_:Hd});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Kd(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return qa.runKernel(Cn,{},r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xd(e,t=5,n=1,r=1,s=.5){const a=so(e,"x","localResponseNormalization");oe(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),oe(pe(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let o=a,i=!1;3===a.rank&&(i=!0,o=yh(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const u={x:o},l={depthRadius:t,bias:n,alpha:r,beta:s},c=qa.runKernel(Mn,u,l);return i?yh(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const Jd=io({localResponseNormalization_:Xd});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Yd(e){const t=so(e,"x","log","float32"),n={x:t};return qa.runKernel($n,n)}const Zd=io({log_:Yd});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Qd(e){const t=so(e,"x","log1p"),n={x:t};return qa.runKernel(En,n)}const ef=io({log1p_:Qd});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tf(e){const t=so(e,"x","softplus"),n={x:t};return qa.runKernel(Mr,n)}const nf=io({softplus_:tf});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rf(e){const t=so(e,"x","logSigmoid"),n=mu((e=>{const t=Nl(nf(Nl(e))),n=t=>{const n=ru(t,Sh(Nl(e)));return n};return{value:t,gradFunc:n}}));return n(t)}const sf=io({logSigmoid_:rf});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function af(e,t=-1){const n=so(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=mu(((e,n)=>{const r=!0,s=ud(e,t,!0),a=$u(e,s),o=$u(Ni(a,"float32"),Zd(pd(xd(a),t,r)));n([o]);const i=(e,n)=>{const[r]=n,s=!0,a=xd(r);return $u(e,ru(pd(e,t,s),a))};return{value:o,gradFunc:i}}));return r(n)}const of=io({logSoftmax_:af});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uf(e,t=null,n=!1){const r=so(e,"x","logSumExp"),s=xe(t,r.shape),a=ud(r,s,!0),o=$u(r,a),i=xd(o),u=pd(i,s),l=Zd(u),c=Yi(yh(a,l.shape),l);if(n){const e=nd(c.shape,s);return yh(c,e)}return c}const lf=io({logSumExp_:uf});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cf(e,t){const n=so(e,"a","logicalAnd","bool"),r=so(t,"b","logicalAnd","bool");Fu(n.shape,r.shape);const s={a:n,b:r};return qa.runKernel(An,s)}const hf=io({logicalAnd_:cf});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pf(e){const t=so(e,"x","logicalNot","bool"),n={x:t};return qa.runKernel(Rn,n)}const df=io({logicalNot_:pf});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ff(e,t){const n=so(e,"a","logicalOr","bool"),r=so(t,"b","logicalOr","bool");Fu(n.shape,r.shape);const s={a:n,b:r};return qa.runKernel(_n,s)}const mf=io({logicalOr_:ff});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gf(e,t){const n=so(e,"a","logicalXor","bool"),r=so(t,"b","logicalXor","bool");return Fu(n.shape,r.shape),hf(mf(e,t),df(hf(e,t)))}const yf=io({logicalXor_:gf}),bf=2147483648;function xf(e,t,n="left"){const r=so(e,"sortedSequence","searchSorted"),s=so(t,"values","searchSorted"),a=r.shape[r.shape.length-1],o=s.shape[s.shape.length-1],i=yh(r,[-1,a]),u=yh(s,[-1,o]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(le(u.shape)>=bf)throw new Error(`values tensor size must less than ${bf}`);if(i.shape[1]>=bf)throw new Error(`trailing dim_size must less than ${bf} for int32 output type, was ${i.shape[1]}`);const l={sortedSequence:i,values:u},c={side:n};return qa.runKernel($r,l,c)}const vf=io({searchSorted_:xf});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wf(e,t){return vf(e,t,"left")}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kf(e,t,n,r,s){const a=so(e,"x","maxPool"),o=1;let i=a,u=!1;3===a.rank&&(u=!0,i=yh(a,[1,a.shape[0],a.shape[1],a.shape[2]])),oe(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),oe(ph(n,o),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`)),mh("maxPool",r,s);const l={x:i},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s},h=qa.runKernel(Bn,l,c);return u?yh(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const If=io({maxPool_:kf});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Nf(e,t=[1,1,1],n,r,s,a="NDHWC"){const o=so(e,"x","maxPool3d");let i=o,u=!1;4===o.rank&&(u=!0,i=yh(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),oe(5===i.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`)),oe("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),mh("maxPool3d",r,s);const l={x:i},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},h=qa.runKernel(Vn,l,c);return u?yh(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const Sf=io({maxPool3d_:Nf});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Tf(e,t,n,r,s=!1){const a=so(e,"x","maxPoolWithArgmax"),o={x:a},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},u=qa.runKernel(Gn,o,i);return{result:u[0],indexes:u[1]}}const Cf=io({maxPoolWithArgmax_:Tf});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $f(e,t=null,n=!1){const r=so(e,"x","mean"),s={x:r},a={axis:t,keepDims:n};return qa.runKernel(jn,s,a)}const Ef=io({mean_:$f});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Af(e,t="float32"){if(We(e),"complex64"===t){const t=Af(e,"float32"),n=Af(e,"float32");return lo(t,n)}const n=Pe(le(e),t);return qa.makeTensor(n,e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rf(e,t="float32"){if(We(e),"complex64"===t){const t=Rf(e,"float32"),n=Af(e,"float32");return lo(t,n)}const n=ze(le(e),t);return qa.makeTensor(n,e,t)}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _f(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=so(e,"x","meshgrid",e instanceof Sa?e.dtype:"float32");if(void 0===t)return[r];let s=so(t,"y","meshgrid",t instanceof Sa?t.dtype:"float32");const a=le(r.shape),o=le(s.shape);return"xy"===n?(r=yh(r,[1,-1]),s=yh(s,[-1,1]),[bl(Rf([o,1],r.dtype),r),bl(s,Rf([1,a],s.dtype))]):(r=yh(r,[-1,1]),s=yh(s,[1,-1]),[bl(r,Rf([1,o],r.dtype)),bl(Rf([a,1],s.dtype),s)])}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Of(e,t){let n=so(e,"a","minimum"),r=so(t,"b","minimum");[n,r]=Ma(n,r),"bool"===n.dtype&&(n=Ni(n,"int32"),r=Ni(r,"int32")),Fu(n.shape,r.shape);const s={a:n,b:r};return qa.runKernel(qn,s)}const Ff=io({minimum_:Of});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Df(e,t,n){oe("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=so(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");oe(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let i=0;i<r.rank;i++)oe(2===t[i].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),oe(t[i][0]>=0&&t[i][0]<=r.shape[i]-s&&t[i][1]>=0&&t[i][1]<=r.shape[i]-s,(()=>`Padding in dimension ${i} cannot be greater than or equal to ${r.shape[i]-s} or less than 0 for input of shape ${r.shape}`));const a={paddings:t,mode:n},o={x:r};return qa.runKernel(Kn,o,a)}const Mf=io({mirrorPad_:Df});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Lf(e,t){let n=so(e,"a","mod"),r=so(t,"b","mod");[n,r]=Ma(n,r);const s={a:n,b:r};return qa.runKernel(Xn,s)}const zf=io({mod_:Lf});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Pf(e,t=null,n=!1){e=so(e,"x","moments");const r=xe(t,e.shape),s=Ef(e,r,n);let a=s.shape;n||(a=nd(s.shape,r));const o=iu($u(Ni(e,"float32"),yh(s,a))),i=Ef(o,r,n);return{mean:s,variance:i}}const Bf=io({moments_:Pf});function Wf(e,t,n,r){const s=so(t,"data","multiRNNCell"),a=ao(n,"c","multiRNNCell"),o=ao(r,"h","multiRNNCell");let i=s;const u=[];for(let h=0;h<e.length;h++){const t=e[h](i,a[h],o[h]);u.push(t[0]),u.push(t[1]),i=t[1]}const l=[],c=[];for(let h=0;h<u.length;h+=2)l.push(u[h]),c.push(u[h+1]);return[l,c]}const Vf=io({multiRNNCell_:Wf});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Uf(e,t,n,r=!1){const s=so(e,"logits","multinomial"),a=s.size,o=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();const i=1===o?yh(s,[1,-1]):s,u={logits:i},l={numSamples:t,seed:n,normalized:r},c=qa.runKernel(Jn,u,l);return 1===o?yh(c,[c.size]):c}const Gf=io({multinomial_:Uf});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jf(e,t){let n=so(e,"a","notEqual","string_or_numeric"),r=so(t,"b","notEqual","string_or_numeric");[n,r]=Ma(n,r),Fu(n.shape,r.shape);const s={a:n,b:r};return qa.runKernel(Qn,s)}const Hf=io({notEqual_:jf});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qf(e){const t=so(e,"x","onesLike"),n={x:t};return qa.runKernel(rr,n)}const Kf=io({onesLike_:qf});function Xf(e,t){const n=so(e,"v1","outerProduct"),r=so(t,"v2","outerProduct");oe(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const s=yh(n,[-1,1]),a=yh(r,[1,-1]);return bl(s,a)}const Jf=io({outerProduct_:Xf});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Yf(e,t,n=0){const r=so(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},a={x:r};return qa.runKernel(or,a,s)}const Zf=io({pad_:Yf});function Qf(e,t,n=0){return oe(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),Zf(e,[t],n)}const em=io({pad1d_:Qf});function tm(e,t,n=0){return oe(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Zf(e,t,n)}const nm=io({pad2d_:tm});function rm(e,t,n=0){return oe(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Zf(e,t,n)}const sm=io({pad3d_:rm});function am(e,t,n=0){return oe(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Zf(e,t,n)}const om=io({pad4d_:am});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function im(e,t,n){const r=so(e,"x","spaceToBatchND");oe(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),oe(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),oe(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]===0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},a={blockShape:t,paddings:n};return qa.runKernel(Pr,s,a)}const um=io({spaceToBatchND_:im});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lm(e,t,n,r,s,a,o){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const i=so(e,"x","maxPool");let u=i,l=!1;3===i.rank&&(l=!0,u=yh(i,[1,i.shape[0],i.shape[1],i.shape[2]])),oe(ph(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const c=Zc(u.shape,t,a,s,r),h=[c.dilationHeight,c.dilationWidth];let p;p="same"===r?hm([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const d=1===h[0]&&1===h[1],[f,m]=cm([c.inHeight,c.inWidth],h,p),g=d?r:"valid",y=d?u:um(u,h,f),b="avg"===n?()=>xh(y,t,a,g,o):()=>If(y,t,a,g,o),x=b(),v=d?x:Oh(x,h,m);return l?yh(v,[v.shape[1],v.shape[2],v.shape[3]]):v}function cm(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),o=t.map(((e,t)=>(e-a[t]%e)%e)),i=s.map(((e,t)=>e+o[t])),u=t.map(((e,t)=>[r[t],i[t]])),l=t.map(((e,t)=>[0,o[t]]));return[u,l]}function hm(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),r=n.map((e=>e-1)),s=r.map((e=>Math.floor(e/2))),a=r.map(((e,t)=>e-s[t]));return r.map(((e,t)=>[s[t],a[t]]))}const pm=io({pool_:lm});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dm(e,t){const n=so(e,"x","prelu"),r=so(t,"alpha","prelu"),s={x:n,alpha:r};return qa.runKernel(lr,s)}const fm=io({prelu_:dm});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mm(e,t=null,n=!1){let r=so(e,"x","prod");"bool"===r.dtype&&(r=Ni(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return qa.runKernel(cr,s,a)}const gm=io({prod_:mm});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ym(e,t,n,r){const s=e.map(((e,t)=>so(e,`tensors${t}`,"raggedGather","int32"))),a=so(t,"paramsDenseValues","raggedGather"),o=so(n,"indices","raggedGather","int32"),i={paramsNestedSplits:s,paramsDenseValues:a,indices:o},u={outputRaggedRank:r},l=qa.runKernel(hr,i,u);return{outputNestedSplits:l.slice(0,l.length-1),outputDenseValues:l[l.length-1]}}const bm=io({raggedGather_:ym});
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xm(e,t,n){const r=so(e,"starts","raggedRange"),s=so(t,"limits","raggedRange",r.dtype),a=so(n,"deltas","raggedRange",r.dtype),o={starts:r,limits:s,deltas:a},i=qa.runKernel(pr,o);return{rtNestedSplits:i[0],rtDenseValues:i[1]}}const vm=io({raggedRange_:xm});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wm(e,t,n,r,s){const a=so(e,"shape","raggedTensorToTensor","int32"),o=so(t,"values","raggedTensorToTensor"),i=so(n,"defaultValue","raggedTensorToTensor",o.dtype),u=r.map(((e,t)=>so(e,`tensors${t}`,"raggedTensorToTensor","int32"))),l={shape:a,values:o,defaultValue:i,rowPartitionTensors:u},c={rowPartitionTypes:s};return qa.runKernel(dr,l,c)}const km=io({raggedTensorToTensor_:wm});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Im(e,t,n){We(e);const r=le(e);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);s=new Uint8Array(r)}for(let a=0;a<r;a++)s[a]=t();return qa.makeTensor(s,e,n)}const Nm=io({rand_:Im});var Sm=n(2468);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Tm{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=Sm.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;while(!n){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*o,t=this.mean+this.stdDev*s*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Cm{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const s=r||Math.random();this.randu=Sm.alea(s.toString()),this.randn=new Tm(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,a;while(1){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class $m{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"===typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Sm.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Em(e,t,n=1,r="float32",s){if(We(e),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const a=new Cm(t,n,r,s),o=ki(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}const Am=io({randomGamma_:Em});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rm(e,t=0,n=1,r,s){if(We(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new Tm(t,n,r,!1,s),o=ki(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}const _m=io({randomNormal_:Rm});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Om(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return _m(e,0,1,t,n)}const Fm=io({randomStandardNormal_:Om});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Dm(e,t=0,n=1,r="float32",s){We(e);const a=ki(e,r),o=new $m(t,n,null,s);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const Mm=io({randomUniform_:Dm});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Lm(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return qa.runKernel(fr,{},s)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zm(e){const t=so(e,"x","reciprocal"),n={x:t};return qa.runKernel(gr,n)}const Pm=io({reciprocal_:zm});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bm(e){const t=so(e,"x","relu"),n={x:t};return qa.runKernel(yr,n)}const Wm=io({relu_:Bm});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Vm(e){const t=so(e,"x","relu6"),n={x:t};return qa.runKernel(Ir,n)}const Um=io({relu6_:Vm});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Gm(e,t){const n=so(e,"x","reverse"),r={x:n},s={dims:t};return qa.runKernel(Nr,r,s)}const jm=io({reverse_:Gm});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Hm(e){const t=so(e,"x","reverse");return oe(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),jm(t,0)}const qm=io({reverse1d_:Hm});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Km(e,t){const n=so(e,"x","reverse");return oe(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),jm(n,t)}const Xm=io({reverse2d_:Km});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jm(e,t){const n=so(e,"x","reverse");return oe(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),jm(n,t)}const Ym=io({reverse3d_:Jm});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zm(e,t){const n=so(e,"x","reverse");return oe(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),jm(n,t)}const Qm=io({reverse4d_:Zm});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eg(e){const t=so(e,"x","round"),n={x:t};return qa.runKernel(Sr,n)}const tg=io({round_:eg});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ng(e){const t=so(e,"x","rsqrt","float32"),n={x:t};return qa.runKernel(Tr,n)}const rg=io({rsqrt_:ng});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sg(e){const t=so(e,"x","selu"),n={x:t};return qa.runKernel(Ar,n)}const ag=io({selu_:sg});function og(e,t,n,r,s,a=[1,1],o="NHWC"){const i=so(e,"x","separableConv2d"),u=so(t,"depthwiseFilter","separableConv2d"),l=so(n,"pointwiseFilter","separableConv2d");let c=i,h=!1;if(3===i.rank&&(h=!0,c=yh(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");oe(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),oe(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),oe(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),oe(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),oe(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const p=u.shape[2],d=u.shape[3];oe(l.shape[2]===p*d,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*d}, but got ${l.shape[2]}.`));const f=Fp(c,u,r,s,o,a),m=1,g=up(f,l,m,"valid",o);return h?yh(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const ig=io({separableConv2d_:og});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function ug(e,t){const n=so(e,"x","setdiff1d"),r=so(t,"y","setdiff1d");oe(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),oe(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),oe(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const s=await n.data(),a=await r.data(),o=new Set(a);let i=0;for(let c=0;c<s.length;c++)o.has(s[c])||i++;const u=new ba([i],n.dtype),l=new ba([i],"int32");for(let c=0,h=0;c<s.length;c++)o.has(s[c])||(u.values[h]=s[c],l.values[h]=c,h++);return[u.toTensor(),l.toTensor()]}const lg=ug;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cg(e){const t=so(e,"x","sign"),n={x:t};return qa.runKernel(Fr,n)}const hg=io({sign_:cg});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pg(e){const t=so(e,"x","sin","float32"),n={x:t};return qa.runKernel(_r,n)}const dg=io({sin_:pg});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fg(e){const t=so(e,"x","sinh"),n={x:t};return qa.runKernel(Or,n)}const mg=io({sinh_:fg});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gg(e,t,n){const r=so(e,"x","slice1d");return oe(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Ch(r,[t],[n])}const yg=io({slice1d_:gg});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bg(e,t,n){const r=so(e,"x","slice2d");return oe(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Ch(r,t,n)}const xg=io({slice2d_:bg});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vg(e,t,n){const r=so(e,"x","slice3d");return oe(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Ch(r,t,n)}const wg=io({slice3d_:vg});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kg(e,t,n){const r=so(e,"x","slice4d");return oe(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Ch(r,t,n)}const Ig=io({slice4d_:kg});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ng(e,t=-1){const n=so(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return qa.runKernel(Wr,r,s)}const Sg=io({softmax_:Ng});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Tg(e){oe("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return qa.runKernel(un,t)}const Cg=io({fft_:Tg});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $g(e){oe("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return qa.runKernel(xn,t)}const Eg=io({ifft_:$g});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ag(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=yh(e,[n,t]);r=Eg(s)}else{const s=[n,2*(t-1)],a=yh(Tl(e),[n,t]),o=yh(kl(e),[n,t]),i=jm(Ch(a,[0,1],[n,t-2]),1),u=ru(jm(Ch(o,[0,1],[n,t-2]),1),yu(-1)),l=Ih([a,i],1),c=Ih([o,u],1),h=yh(lo(l,c),[s[0],s[1]]);r=Eg(h)}if(r=Tl(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=yh(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}const Rg=io({irfft_:Ag});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _g(e,t,n=0){const r=so(e,"x","split"),s={x:r},a={numOrSizeSplits:t,axis:n};return qa.runKernel(Br,s,a)}const Og=io({split_:_g});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Fg(e,t){oe("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=Ch(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=Ih([e,Af(r)],e.shape.length-1),n=t}else s=e;const a=lu(s),o=yh(lo(s,a),[r,n]),i=Cg(o),u=Math.floor(n/2)+1,l=Tl(i),c=kl(i),h=Og(l,[u,n-u],l.shape.length-1),p=Og(c,[u,n-u],c.shape.length-1),d=s.shape.slice();return d[s.shape.length-1]=u,yh(lo(h[0],p[0]),d)}const Dg=io({rfft_:Fg});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Mg(e,t){let n=so(e,"a","squaredDifference"),r=so(t,"b","squaredDifference");[n,r]=Ma(n,r),Fu(n.shape,r.shape);const s={a:n,b:r},a={};return qa.runKernel(qr,s,a)}const Lg=io({squaredDifference_:Mg});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zg(e,t){const n=so(e,"x","squeeze","string_or_numeric");return yh(n,ve(n.shape,t).newShape)}const Pg=io({squeeze_:zg});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bg(e,t=0){const n=ao(e,"tensors","stack","string_or_numeric");oe(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&oe(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return qa.runKernel(ar,r,s)}const Wg=io({stack_:Bg});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Vg(e,t=0){const n=so(e,"x","step"),r={x:n},s={alpha:t};return qa.runKernel(hs,r,s)}const Ug=io({step_:Vg});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Gg(e,t,n,r,s=0,a=0,o=0,i=0,u=0){const l=so(e,"x","stridedSlice","string_or_numeric"),c={x:l},h={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:u};return qa.runKernel(Xr,c,h)}const jg=io({stridedSlice_:Gg});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Hg(e){const t=so(e,"x","tan","float32"),n={x:t};return qa.runKernel(es,n)}const qg=io({tan_:Hg});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Kg(e,t){ue(e);const n=to(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");const r=null;return co(e,r,n,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xg(e,t,n){if(ue(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=to(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return co(e,t,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jg(e,t,n){if(ue(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=to(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return co(e,t,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Yg(e,t,n){if(ue(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=to(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return co(e,t,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zg(e,t,n){if(ue(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=to(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,co(e,t,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Qg(e,t=1,n=!0){const r=so(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const a={x:r},o={k:t,sorted:n},[i,u]=qa.runKernel(rs,a,o);return{values:i,indices:u}}const ey=io({topk_:Qg});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ty(e,t=0,n=1,r,s){if(We(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new Tm(t,n,r,!0,s),o=ki(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}const ny=io({truncatedNormal_:ty});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ry(e,t=0){const n=so(e,"x","unique","string_or_numeric");oe(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[a,o]=qa.runKernel(os,r,s);return{values:a,indices:o}}const sy=io({unique_:ry});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ay(e,t,n){const r=so(e,"x","unsortedSegmentSum"),s=so(t,"segmentIds","unsortedSegmentSum","int32");oe(pe(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:s},o={numSegments:n};return qa.runKernel(us,a,o)}const oy=io({unsortedSegmentSum_:ay});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function iy(e,t=0){const n=so(e,"x","unstack","string_or_numeric");oe(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return qa.runKernel(is,r,s)}const uy=io({unstack_:iy});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ly(e,t){return vf(e,t,"right")}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cy(e,t=!0,n,r){return qa.makeVariable(e,t,n,r)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hy(e,t){const n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);const r=ki(e,"int32"),s=ki([n.length,e.length],"int32");for(let a=0;a<n.length;a++){const t=r.indexToLoc(n[a]),o=a*e.length;s.values.set(t,o)}return s.toTensor()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function py(e){const t=so(e,"condition","whereAsync","bool"),n=await t.data(),r=hy(t.shape,n);return e!==t&&t.dispose(),r}const dy=py;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function fy(e,t,n){const r=so(e,"tensor","boolMask"),s=so(t,"mask","boolMask","bool"),a=null==n?0:n,o=s.rank,i=r.shape;oe(o>0,(()=>"mask cannot be scalar")),ie(i.slice(a,a+o),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let m=a;m<a+o;m++)u*=i[m];const l=i.slice(0,a).concat([u],i.slice(a+o)),c=yh(r,l),h=yh(s,[-1]),p=await dy(h),d=Pg(p,[1]),f=Rd(c,d,a);return e!==r&&r.dispose(),t!==s&&s.dispose(),d.dispose(),c.dispose(),h.dispose(),p.dispose(),f}const my=fy;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gy(e,t,n,r,s=!0){const a=so(e,"v","movingAverage"),o=so(t,"x","movingAverage"),i=so(n,"decay","movingAverage");La(a,o),oe(he(a.shape,o.shape),(()=>"Shape mismatch in v and x"));const u=yu(1),l=$u(u,i);let c=ru($u(o,a),l);if(s){oe(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=so(r,"step","movingAverage");c=tu(c,$u(u,Tu(i,e)))}return Yi(a,c)}const yy=io({movingAverage_:gy});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function by(e,t,n){We(n);const r=so(e,"indices","scatterND","int32"),s=so(t,"updates","scatterND");Ul(s,r,n);const a={indices:r,updates:s},o={shape:n};return qa.runKernel(Cr,a,o)}const xy=io({scatterND_:by});function vy(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wy(e,t,n,r=0){We(n);const s=so(e,"sparseIndices","sparseToDense","int32"),a=so(t,"sparseValues","sparseToDense","string_or_numeric"),o=so(r,"defaultValue","sparseToDense",a.dtype);vy(s,a,n,o);const i={sparseIndices:s,sparseValues:a,defaultValue:o},u={outputShape:n};return qa.runKernel(Hr,i,u)}const ky=io({sparseToDense_:wy});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Iy(e,t){const n=so(t,"indices","gatherND","int32"),r=so(e,"x","gatherND","string_or_numeric"),s={params:r,indices:n};return qa.runKernel(mn,s)}const Ny=io({gatherND_:Iy});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Sy(e,t){if(null==t)return e.shape.slice();if(he(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ty(e,t,n,r){const s=so(e,"x","dropout");if(oe("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),oe(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Sa?s.clone():s;const a=Sy(s,n),o=1-t,i=tu(Ed(Yi(Mm(a,0,1,"float32",r),o)),o);return ru(s,i)}const Cy=io({dropout_:Ty});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $y(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Ey(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const o=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(o)}return Kg(s,"float32")}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function Ay(e,t,n=1){const r=so(e,"predictions","inTopK"),s=so(t,"targets","inTopK");oe(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),oe(r.rank-1===s.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`)),ie(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];oe(n>0&&n<=a,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`));const o=await r.data(),i=await s.data(),[u,l]=[o.length/a,a],c=we("bool",u);for(let h=0;h<u;h++){const e=h*l,t=o.subarray(e,e+l),r=[];for(let n=0;n<t.length;n++)r.push({value:t[n],index:n});r.sort(((e,t)=>t.value-e.value)),c[h]=0;for(let s=0;s<n;s++)if(r[s].index===i[h]){c[h]=1;break}}return e!==r&&r.dispose(),t!==s&&s.dispose(),ho(c,s.shape,"bool")}const Ry=Ay;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _y(e,t,n,r,s,a="NHWC",o){let i=e;3===e.rank&&(i=yh(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=yh(t,[1,t.shape[0],t.shape[1],t.shape[2]])),oe(4===i.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`)),oe(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),oe(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const l="NHWC"===a?i.shape[3]:i.shape[1],c="NHWC"===a?u.shape[3]:u.shape[1];oe(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),oe(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),mh("conv2dDerFilter",s,o);const h={x:i,dy:u},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:o,filterShape:n};return qa.runKernel(Ot,h,p)}const Oy=io({conv2DBackpropFilter_:_y});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Fy(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return ru(e,Ug(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Dy(e,t){let n=t;const r=Ou(e.shape,t.shape);return r.length>0&&(n=pd(n,r)),yh(n,e.shape)}function My(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Wm(e);if("elu"===t)return Jp(e);if("relu6"===t)return Um(e);if("prelu"===t)return fm(e,n);if("leakyrelu"===t)return Ud(e,r);if("sigmoid"===t)return Sh(e);throw new Error(`Unknown fused activation ${t}.`)}const Ly=(e,t)=>{const n=e>0;return!n||"linear"===t};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zy({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===Ly(qa.state.gradientDepth,u)){oe("NHWC"===s,(()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let h=up(e,t,n,r,s,a,o);return null!=i&&(h=Yi(h,i)),My(h,u,l,c)}const h=so(e,"x","conv2d","float32"),p=so(t,"filter","conv2d","float32");let d=h,f=!1;3===h.rank&&(f=!0,d=yh(h,[1,h.shape[0],h.shape[1],h.shape[2]])),oe(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),oe(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),mh("fused conv2d",r,o);const m="NHWC"===s?d.shape[3]:d.shape[1];oe(p.shape[2]===m,(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${p.shape[2]}.`)),oe(ph(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const g=eh(d.shape,p.shape,n,a,r,o);let y,b;if(null!=i&&(y=so(i,"bias","fused conv2d"),[y]=Ma(y,h),"NHWC"===s?Fu(g.outShape,y.shape):(oe(y.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`)),oe(0===y.shape.length||y.shape[0]===g.outChannels||1===y.shape[0],(()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)))),null!=l){const e=l.shape;if(oe(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)oe(1===e[0]||e[0]===g.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${g.outChannels}).`));else if(3===e.length)try{Fu(e,g.outShape)}catch(k){const t=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(t)}b=so(l,"prelu weights","fused conv2d")}const x=(e,t)=>{oe("NHWC"===s,(()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`));const[o,i,l,c]=t,h=Fy(e,l,u);oe(hh(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const p=pp(i.shape,h,o,n,r),d=Oy(i,h,o.shape,n,r),f=[p,d];if(null!=c){const e=Dy(c,h);f.push(e)}return f},v={x:d,filter:p,bias:y,preluActivationWeights:b},w={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o,activation:u,leakyreluAlpha:c};if(null==i){const e=mu(((e,t,n)=>{let r=qa.runKernel(ms,v,w);return n([t,e,r]),f&&(r=yh(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(d,p)}{const e=mu(((e,t,n,r)=>{let s=qa.runKernel(ms,v,w);return r([t,e,s,n]),f&&(s=yh(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}}));return e(d,p,y)}}const Py=io({fusedConv2d_:zy});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function By(e,t,n,r,s,a=[1,1],o){let i=e;3===e.rank&&(i=yh(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=yh(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:i,dy:u},c={strides:r,pad:s,dimRoundingMode:o,dilations:a,filterShape:n};return qa.runKernel(Ht,l,c)}const Wy=io({depthwiseConv2dNativeBackpropFilter_:By});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Vy(e,t,n,r,s,a=[1,1],o){let i=t,u=!1;3===t.rank&&(u=!0,i=yh(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:i,filter:n},c={strides:r,pad:s,dimRoundingMode:o,dilations:a,inputShape:e},h=qa.runKernel(qt,l,c);return u?yh(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Uy=io({depthwiseConv2dNativeBackpropInput_:Vy});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Gy({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===Ly(qa.state.gradientDepth,u)){let h=Fp(e,t,n,r,s,a,o);return null!=i&&(h=Yi(h,i)),My(h,u,l,c)}const h=so(e,"x","depthwiseConv2d","float32"),p=so(t,"filter","depthwiseConv2d","float32");let d=h,f=!1;3===h.rank&&(f=!0,d=yh(h,[1,h.shape[0],h.shape[1],h.shape[2]])),oe(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),oe(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),oe(d.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==a&&(a=[1,1]),oe(ph(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),mh("fused depthwiseConv2d",r,o);const m=eh(d.shape,p.shape,n,a,r,o,!0);let g,y;null!=i&&(g=so(i,"bias","fused conv2d"),[g]=Ma(g,h),Fu(m.outShape,g.shape)),null!=l&&(y=so(l,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{oe(hh(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[s,i,l,c]=t,h=Fy(e,l,u),p=Uy(i.shape,h,s,n,r,a,o),d=Wy(i,h,s.shape,n,r,a,o);if(null!=c){const e=Dy(g,h);return[p,d,e]}return[p,d]},x={x:d,filter:p,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o,activation:u,leakyreluAlpha:c};if(null==i){const e=mu(((e,t,n)=>{let r=qa.runKernel(gs,x,v);return n([t,e,r]),f&&(r=yh(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(d,p)}{const e=mu(((e,t,n,r)=>{let s=qa.runKernel(gs,x,v);return r([t,e,s,n]),f&&(s=yh(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}));return e(d,p,g)}}const jy=io({fusedDepthwiseConv2d_:Gy});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Hy({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:o,leakyreluAlpha:i=.2}){if(!1===Ly(qa.state.gradientDepth,a)){let u=bl(e,t,n,r);return null!=s&&(u=Yi(u,s)),My(u,a,o,i)}let u=so(e,"a","fused matMul"),l=so(t,"b","fused matMul");[u,l]=Ma(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],p=n?u.shape[u.rank-1]:u.shape[u.rank-2],d=r?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),m=l.shape.slice(0,-2),g=le(f),y=le(m);oe(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const b=Fu(u.shape.slice(0,-2),l.shape.slice(0,-2)),x=b.concat([p,d]),v=yh(u,n?[g,c,p]:[g,p,c]),w=yh(l,r?[y,d,h]:[y,h,d]);let k,I;null!=s&&(k=so(s,"bias","fused matMul"),[k]=Ma(k,u),Fu(x,k.shape)),null!=o&&(I=so(o,"prelu weights","fused matMul"));const N=(e,t)=>{const[o,i,u,l]=t,c=Fy(yh(e,u.shape),u,a);let h,p;if(n||r?!n&&r?(h=bl(c,i,!1,!1),p=bl(c,o,!0,!1)):n&&!r?(h=bl(i,c,!1,!0),p=bl(o,c,!1,!1)):(h=bl(i,c,!0,!0),p=bl(c,o,!0,!0)):(h=bl(c,i,!1,!0),p=bl(o,c,!0,!1)),null!=s){const e=Dy(l,c);return[h,p,e]}return[h,p]},S={a:v,b:w,bias:k,preluActivationWeights:I},T={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:i};if(null==s){const e=mu(((e,t,n)=>{const r=qa.runKernel(fs,S,T);return n([e,t,r]),{value:yh(r,x),gradFunc:N}}));return e(v,w)}{const e=mu(((e,t,n,r)=>{const s=qa.runKernel(fs,S,T);return r([e,t,s,n]),{value:yh(s,x),gradFunc:N}}));return e(v,w,k)}}const qy=io({fusedMatMul_:Hy});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ky(e){return Ey(e,.54,.46)}const Xy=io({hammingWindow_:Ky});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jy(e){return Ey(e,.5,.5)}const Yy=io({hannWindow_:Jy});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zy(e,t,n,r=!1,s=0){let a=0;const o=[];while(a+t<=e.size)o.push(Ch(e,a,t)),a+=n;if(r)while(a<e.size){const r=a+t-e.size,i=Ih([Ch(e,a,t-r),Iu([r],s)]);o.push(i),a+=n}return 0===o.length?Xg([],[0,t]):yh(Ih(o),[o.length,t])}const Qy=io({frame_:Zy});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eb(e,t,n,r,s=Yy){null==r&&(r=$y(t));const a=Qy(e,t,n),o=ru(a,s(t));return Dg(o,r)}const tb=io({stft_:eb});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nb(e,t,n,r,s="bilinear",a=0){const o=so(e,"image","cropAndResize"),i=so(t,"boxes","cropAndResize","float32"),u=so(n,"boxInd","cropAndResize","int32"),l=i.shape[0];oe(4===o.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`)),oe(2===i.rank&&4===i.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${i.shape}.`)),oe(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${i.shape}.`)),oe(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),oe(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),oe("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:o,boxes:i,boxInd:u},h={method:s,extrapolationValue:a,cropSize:r},p=qa.runKernel(Vt,c,h);return p}const rb=io({cropAndResize_:nb});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sb(e){const t=so(e,"image","flipLeftRight","float32");oe(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t},r=qa.runKernel(cn,n,{});return r}const ab=io({flipLeftRight_:sb});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ob(e){const t=so(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];oe(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),oe(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,Sd(t,s)}const ib=io({grayscaleToRGB_:ob});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ub(e,t,n=0,r=.5){const s=so(e,"image","rotateWithOffset","float32");oe(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},o={radians:t,fillValue:n,center:r},i=qa.runKernel(ds,a,o);return i}const lb=io({rotateWithOffset_:ub});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cb(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const o=e.shape[0];return n=Math.min(n,o),oe(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),oe(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),oe(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),oe(1===t.rank,(()=>"scores must be a 1D tensor")),oe(t.shape[0]===o,(()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`)),oe(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hb(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=so(e,"boxes","nonMaxSuppression","float32"),o=so(t,"scores","nonMaxSuppression","float32"),i=cb(a,o,n,r,s);n=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:s};return qa.runKernel(er,{boxes:a,scores:o},u)}const pb=io({nonMaxSuppression_:hb});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function db(e,t,n){const r=fb(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function fb(e,t,n){return gb(e,t,n||mb)}function mb(e,t){return e>t?1:e<t?-1:0}function gb(e,t,n){let r=0,s=e.length,a=0,o=!1;while(r<s){a=r+(s-r>>>1);const i=n(t,e[a]);i>0?r=a+1:(s=a,o=!i)}return o?r:-r-1}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yb(e,t,n,r,s){return vb(e,t,n,r,s,0)}function bb(e,t,n,r,s,a){return vb(e,t,n,r,s,0,!1,a,!0)}function xb(e,t,n,r,s,a){return vb(e,t,n,r,s,a,!0)}function vb(e,t,n,r,s,a,o=!1,i=!1,u=!1){const l=[];for(let g=0;g<t.length;g++)t[g]>s&&l.push({score:t[g],boxIndex:g,suppressBeginIndex:0});l.sort(Ib);const c=a>0?-.5/a:0,h=[],p=[];while(h.length<n&&l.length>0){const t=l.pop(),{score:n,boxIndex:a,suppressBeginIndex:o}=t;if(n<s)break;let i=!1;for(let u=h.length-1;u>=o;--u){const n=wb(e,a,h[u]);if(n>=r){i=!0;break}if(t.score=t.score*kb(r,c,n),t.score<=s)break}t.suppressBeginIndex=h.length,i||(t.score===n?(h.push(a),p.push(t.score)):t.score>s&&db(l,t,Ib))}const d=h.length,f=n-d;i&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:h};return o&&(m["selectedScores"]=p),u&&(m["validOutputs"]=d),m}function wb(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),p=Math.max(s[1],s[3]),d=(i-a)*(u-o),f=(h-l)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(a,l),g=Math.max(o,c),y=Math.min(i,h),b=Math.min(u,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function kb(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Ib(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function Nb(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=so(e,"boxes","nonMaxSuppressionAsync"),o=so(t,"scores","nonMaxSuppressionAsync"),i=cb(a,o,n,r,s);n=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;const u=await Promise.all([a.data(),o.data()]),l=u[0],c=u[1],{selectedIndices:h}=yb(l,c,n,r,s);return a!==e&&a.dispose(),o!==t&&o.dispose(),Kg(h,"int32")}const Sb=Nb;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Tb(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const o=so(e,"boxes","nonMaxSuppression"),i=so(t,"scores","nonMaxSuppression"),u=cb(o,i,n,r,s,a);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,a=u.softNmsSigma;const l={boxes:o,scores:i},c={maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a},h=qa.runKernel(nr,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}const Cb=io({nonMaxSuppressionWithScore_:Tb});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function $b(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const o=so(e,"boxes","nonMaxSuppressionAsync"),i=so(t,"scores","nonMaxSuppressionAsync"),u=cb(o,i,n,r,s,a);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,a=u.softNmsSigma;const l=await Promise.all([o.data(),i.data()]),c=l[0],h=l[1],{selectedIndices:p,selectedScores:d}=xb(c,h,n,r,s,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Kg(p,"int32"),selectedScores:Kg(d)}}const Eb=$b;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ab(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const o=so(e,"boxes","nonMaxSuppression"),i=so(t,"scores","nonMaxSuppression"),u=cb(o,i,n,r,s,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,p={boxes:o,scores:i},d={maxOutputSize:l,iouThreshold:c,scoreThreshold:h,padToMaxOutputSize:a},f=qa.runKernel(tr,p,d);return{selectedIndices:f[0],validOutputs:f[1]}}const Rb=io({nonMaxSuppressionPadded_:Ab});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function _b(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const o=so(e,"boxes","nonMaxSuppressionAsync"),i=so(t,"scores","nonMaxSuppressionAsync"),u=cb(o,i,n,r,s,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[p,d]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=bb(p,d,l,c,h,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Kg(f,"int32"),validOutputs:yu(m,"int32")}}const Ob=_b;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Fb(e,t,n=!1,r=!1){const s=so(e,"images","resizeBilinear");oe(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),oe(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),oe(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=s,o=!1;3===s.rank&&(o=!0,a=yh(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,i={images:a},u={alignCorners:n,halfPixelCenters:r,size:t},l=qa.runKernel(wr,i,u);return o?yh(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const Db=io({resizeBilinear_:Fb});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Mb(e,t,n=!1,r=!1){const s=so(e,"images","resizeNearestNeighbor");oe(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),oe(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),oe("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),oe(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=s,o=!1;3===s.rank&&(o=!0,a=yh(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,i={images:a},u={alignCorners:n,halfPixelCenters:r,size:t},l=qa.runKernel(xr,i,u);return o?yh(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const Lb=io({resizeNearestNeighbor_:Mb});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zb(e,t="binary",n=!1,r=.5){const s=so(e,"image","threshold"),a=.2989,o=.587,i=.114,u=s.shape[0]*s.shape[1];let l,c,h,p,d=ru(Kg([r]),255);if(oe(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),oe(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),oe("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),oe("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[l,c,h]=Og(s,[1,1,1],-1);const e=ru(l,a),t=ru(c,o),n=ru(h,i);p=Yi(Yi(e,t),n)}else p=e;if("otsu"===t){const e=Gh(Ni(tg(p),"int32"),ho([]),256);d=Pb(e,u)}const f=n?qd(p,d):Od(p,d),m=Ni(ru(f,255),"int32");return m}function Pb(e,t){let n,r,s,a,o,i,u=Kg([-1]),l=Kg([0]),c=Kg([0]);for(let h=0;h<e.size-1;h++){n=Ch(e,0,h+1),r=Ch(e,h+1),o=tu(pd(n),t),i=tu(pd(r),t);const p=pd(ru(n,Lm(0,n.size)));s=tu(p,pd(n));const d=Iu(r.shape,n.size),f=Yi(Lm(0,r.size),d),m=ru(r,f);a=tu(pd(m),pd(r));const g=$u(s,a),y=$u(s,a),b=ru(o,i);c=ru(ru(b,g),y);const x=Od(c,l);l=Vp(x,c,l),u=Vp(x,Kg([h]),u)}return u}const Bb=io({threshold_:zb});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Wb(e,t,n="nearest",r="constant",s=0,a){const o=so(e,"image","transform","float32"),i=so(t,"transforms","transform","float32");oe(4===o.rank,(()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`)),oe(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),oe(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const u={image:o,transforms:i},l={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return qa.runKernel(ss,u,l)}const Vb=io({transform_:Wb});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ub(e,t,n){oe(t%1===0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),oe(n%1===0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=so(e,"a","bandPart");oe(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,o]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=a),n<0&&(n=o);const i=yh(Lm(0,a,1,"int32"),[-1,1]),u=Lm(0,o,1,"int32"),l=$u(i,u),c=hf(qd(l,yu(+t,"int32")),Dd(l,yu(-n,"int32"))),h=Af([a,o],r.dtype);return yh(Wg(uy(yh(r,[-1,a,o])).map((e=>Vp(c,e,h)))),s)}const Gb=io({bandPart_:Ub});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jb(e){let t;if(Array.isArray(e)){t=!1,oe(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)oe(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Og(e,e.shape[0],0).map((e=>Pg(e,[0])));oe(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let s=0;s<e.length;++s)n.push(qa.tidy((()=>{let e=r[s];if(s>0)for(let t=0;t<s;++t){const r=ru(pd(ru(n[t],e)),n[t]);e=$u(e,r)}return tu(e,md(e,"euclidean"))})));return t?Wg(n,0):n}const Hb=io({gramSchmidt_:jb});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qb(e,t=!1){if(oe(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Kb(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=uy(yh(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];r.forEach((e=>{const[n,r]=Kb(e,t);s.push(n),a.push(r)}));const o=yh(Wg(s,0),e.shape),i=yh(Wg(a,0),e.shape);return[o,i]}}function Kb(e,t=!1){return qa.tidy((()=>{oe(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=Cd(n),a=Ti(e);const o=Xg([[1]],[1,1]);let i=Ti(o);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=a,u=i,l=s;[i,a,s]=qa.tidy((()=>{const t=Ch(a,[e,e],[n-e,1]),u=md(t),l=Ch(a,[e,e],[1,1]),c=Vp(Od(l,0),Xg([[-1]]),Xg([[1]])),h=$u(l,ru(c,u)),p=tu(t,h);i=1===p.shape[0]?Ti(o):Ih([o,Ch(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=Nl(tu(bl(c,h),u)),f=Ch(a,[e,0],[n-e,r]),m=ru(d,i),g=$l(i);if(0===e)a=$u(f,bl(m,bl(g,f)));else{const t=$u(f,bl(m,bl(g,f)));a=Ih([Ch(a,[0,0],[e,r]),t],0)}const y=$l(m),b=Ch(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=$u(b,bl(bl(b,i),y));else{const t=$u(b,bl(bl(b,i),y));s=Ih([Ch(s,[0,0],[n,e]),t],1)}return[i,a,s]})),zi([t,u,l])}return!t&&n>r&&(s=Ch(s,[0,0],[n,r]),a=Ch(a,[0,0],[r,r])),[s,a]}))}const Xb=io({qr_:qb});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var Jb;function Yb(e,t,n=Jb.SUM_BY_NONZERO_WEIGHTS){const r=so(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=so(t,"weights","computeWeightedLoss"));const a=null==s?r:ru(r,s);if(n===Jb.NONE)return a;if(n===Jb.SUM)return pd(a);if(n===Jb.MEAN){if(null==s)return Ef(a);{const e=r.size/s.size,t=tu(pd(a),pd(s));return e>1?tu(t,yu(e)):t}}if(n===Jb.SUM_BY_NONZERO_WEIGHTS){if(null==s)return tu(pd(a),yu(r.size));{const e=ru(s,Rf(r.shape)),t=Ni(pd(Hf(e,yu(0))),"float32");return tu(pd(a),t)}}throw Error(`Unknown reduction: ${n}`)}(function(e){e[e["NONE"]=0]="NONE",e[e["MEAN"]=1]="MEAN",e[e["SUM"]=2]="SUM",e[e["SUM_BY_NONZERO_WEIGHTS"]=3]="SUM_BY_NONZERO_WEIGHTS"})(Jb||(Jb={}));const Zb=io({computeWeightedLoss_:Yb});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Qb(e,t,n,r=Jb.SUM_BY_NONZERO_WEIGHTS){const s=so(e,"labels","absoluteDifference"),a=so(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=so(n,"weights","absoluteDifference")),ie(s.shape,a.shape,"Error in absoluteDifference: ");const i=Ru($u(s,a));return Zb(i,o,r)}const ex=io({absoluteDifference_:Qb});function tx(e,t,n,r,s=Jb.SUM_BY_NONZERO_WEIGHTS){const a=so(e,"labels","cosineDistance"),o=so(t,"predictions","cosineDistance");let i=null;null!=r&&(i=so(r,"weights","cosineDistance")),ie(a.shape,o.shape,"Error in cosineDistance: ");const u=yu(1),l=$u(u,pd(ru(a,o),n,!0));return Zb(l,i,s)}const nx=io({cosineDistance_:tx});function rx(e,t,n,r=Jb.SUM_BY_NONZERO_WEIGHTS){let s=so(e,"labels","hingeLoss");const a=so(t,"predictions","hingeLoss");let o=null;null!=n&&(o=so(n,"weights","hingeLoss")),ie(s.shape,a.shape,"Error in hingeLoss: ");const i=yu(1);s=$u(ru(yu(2),s),i);const u=Wm($u(i,ru(s,a)));return Zb(u,o,r)}const sx=io({hingeLoss_:rx});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ax(e,t,n,r=1,s=Jb.SUM_BY_NONZERO_WEIGHTS){const a=so(e,"labels","huberLoss"),o=so(t,"predictions","huberLoss");let i=null;null!=n&&(i=so(n,"weights","huberLoss")),ie(a.shape,o.shape,"Error in huberLoss: ");const u=yu(r),l=Ru($u(o,a)),c=Ff(l,u),h=$u(l,c),p=Yi(ru(yu(.5),iu(c)),ru(u,h));return Zb(p,i,s)}const ox=io({huberLoss_:ax});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ix(e,t,n,r=1e-7,s=Jb.SUM_BY_NONZERO_WEIGHTS){const a=so(e,"labels","logLoss"),o=so(t,"predictions","logLoss");let i=null;null!=n&&(i=so(n,"weights","logLoss")),ie(a.shape,o.shape,"Error in logLoss: ");const u=yu(1),l=yu(r),c=Nl(ru(a,Zd(Yi(o,l)))),h=ru($u(u,a),Zd(Yi($u(u,o),l))),p=$u(c,h);return Zb(p,i,s)}const ux=io({logLoss_:ix});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lx(e,t,n,r=Jb.SUM_BY_NONZERO_WEIGHTS){const s=so(e,"labels","meanSquaredError"),a=so(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=so(n,"weights","meanSquaredError")),ie(s.shape,a.shape,"Error in meanSquaredError: ");const i=Lg(s,a);return Zb(i,o,r)}const cx=io({meanSquaredError_:lx});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hx(e,t){const n=so(e,"labels","sigmoidCrossEntropyWithLogits"),r=so(t,"logits","sigmoidCrossEntropyWithLogits");ie(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Wm(r),a=ru(r,n),o=ef(xd(Nl(Ru(r))));return Yi($u(s,a),o)}function px(e,t,n,r=0,s=Jb.SUM_BY_NONZERO_WEIGHTS){let a=so(e,"multiClassLabels","sigmoidCrossEntropy");const o=so(t,"logits","sigmoidCrossEntropy");let i=null;if(null!=n&&(i=so(n,"weights","sigmoidCrossEntropy")),ie(a.shape,o.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=yu(r),t=yu(1),n=yu(.5);a=Yi(ru(a,$u(t,e)),ru(n,e))}const u=hx(a,o);return Zb(u,i,s)}const dx=io({sigmoidCrossEntropy_:px});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fx(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=mu(((e,t,r)=>{const s=!0,a=lf(t,[n],s),o=$u(Ni(t,"float32"),a);r([e,o]);const i=Nl(ru(o,e)),u=pd(i,[n]),l=(e,t)=>{const[r,s]=t,a=nd(e.shape,[n]);return[ru(yh(e,a),$u(Ni(r,"float32"),xd(s))),ru(yh(e,a),$u(xd(s),Ni(r,"float32")))]};return{value:u,gradFunc:l}}));return r(e,t)}function mx(e,t,n,r=0,s=Jb.SUM_BY_NONZERO_WEIGHTS){let a=so(e,"onehotLabels","softmaxCrossEntropy");const o=so(t,"logits","softmaxCrossEntropy");let i=null;if(null!=n&&(i=so(n,"weights","softmaxCrossEntropy")),ie(a.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const e=yu(r),t=yu(1),n=yu(a.shape[1]);a=Yi(ru(a,$u(t,e)),tu(e,n))}const u=fx(a,o);return Zb(u,i,s)}const gx=io({softmaxCrossEntropy_:mx});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yx(e,t,n,r){const s=so(e,"indices","sparseFillEmptyRows","int32"),a=so(t,"values","sparseFillEmptyRows"),o=so(n,"denseShape","sparseFillEmptyRows","int32"),i=so(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==o.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(0!==i.rank)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);const u={indices:s,values:a,denseShape:o,defaultValue:i},l=qa.runKernel(Vr,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}const bx=io({sparseFillEmptyRows_:yx});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xx(e,t,n){const r=so(e,"inputIndices","sparseReshape","int32"),s=so(t,"inputShape","sparseReshape","int32"),a=so(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const o={inputIndices:r,inputShape:s,newShape:a},i=qa.runKernel(Ur,o);return{outputIndices:i[0],outputShape:i[1]}}const vx=io({sparseReshape_:xx});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wx(e,t,n){const r=so(e,"data","sparseSegmentMean"),s=so(t,"indices","sparseSegmentMean","int32"),a=so(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);const o={data:r,indices:s,segmentIds:a};return qa.runKernel(Gr,o)}const kx=io({sparseSegmentMean_:wx});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ix(e,t,n){const r=so(e,"data","sparseSegmentSum"),s=so(t,"indices","sparseSegmentSum","int32"),a=so(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);const o={data:r,indices:s,segmentIds:a};return qa.runKernel(jr,o)}const Nx=io({sparseSegmentSum_:Ix});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Sx(e,t,n,r,s,a,o,i){const u=so(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=so(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:s,rightPad:a,padWidth:o,preserveShortSequences:i},h={data:u,dataSplits:l},p=qa.runKernel(Jr,h,c);return{nGrams:p[0],nGramsSplits:p[1]}}const Tx=io({stringNGrams_:Sx});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Cx(e,t,n=!0){const r=so(e,"input","stringSplit","string"),s=so(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const a={skipEmpty:n},o={input:r,delimiter:s},i=qa.runKernel(Yr,o,a);return{indices:i[0],values:i[1],shape:i[2]}}const $x=io({stringSplit_:Cx});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ex(e,t){const n=so(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return qa.runKernel(Zr,s,r)}const Ax=io({stringToHashBucketFast_:Ex}),Rx={fft:Cg,ifft:Eg,rfft:Dg,irfft:Rg},_x={hammingWindow:Xy,hannWindow:Yy,frame:Qy,stft:tb},Ox={flipLeftRight:ab,grayscaleToRGB:ib,resizeNearestNeighbor:Lb,resizeBilinear:Db,rotateWithOffset:lb,cropAndResize:rb,nonMaxSuppression:pb,nonMaxSuppressionAsync:Sb,nonMaxSuppressionWithScore:Cb,nonMaxSuppressionWithScoreAsync:Eb,nonMaxSuppressionPadded:Rb,nonMaxSuppressionPaddedAsync:Ob,threshold:Bb,transform:Vb},Fx={bandPart:Gb,gramSchmidt:Hb,qr:Xb},Dx={absoluteDifference:ex,computeWeightedLoss:Zb,cosineDistance:nx,hingeLoss:sx,huberLoss:ox,logLoss:ux,meanSquaredError:cx,sigmoidCrossEntropy:dx,softmaxCrossEntropy:gx},Mx={sparseFillEmptyRows:bx,sparseReshape:vx,sparseSegmentMean:kx,sparseSegmentSum:Nx},Lx={stringNGrams:Tx,stringSplit:$x,stringToHashBucketFast:Ax},zx=Tc;n(6106);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Px=(()=>"undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e())();function Bx(){return new Promise((e=>Px((()=>e()))))}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Wx(e,t){const n=e[0].length;e.forEach(((e,t)=>{oe(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),oe(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)oe(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function Vx(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var Ux;function Gx(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)while(r.length<e+n.length)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const a=n[s],o=r[r.length-n.length+s],i=r[o];if(a>=0)if(i>=0){if(i!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+e}] = ${a} but shape[${s+e}] = ${i}`)}else r[o]=a}return r}function jx(e){const t={FIRST_DIM_SIZE:Ux.FIRST_DIM_SIZE,VALUE_ROWIDS:Ux.VALUE_ROWIDS,ROW_LENGTHS:Ux.ROW_LENGTHS,ROW_SPLITS:Ux.ROW_SPLITS,ROW_LIMITS:Ux.ROW_LIMITS,ROW_STARTS:Ux.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function Hx(e){return 0===e.length?0:e[0]===Ux.FIRST_DIM_SIZE?e.length-1:e.length}function qx(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=e[s],r=t[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-e.length}] = ${n} but ragged tensor input.flatValues.shape[${s-e.length}] = ${r}`)}}(function(e){e[e["FIRST_DIM_SIZE"]=0]="FIRST_DIM_SIZE",e[e["VALUE_ROWIDS"]=1]="VALUE_ROWIDS",e[e["ROW_LENGTHS"]=2]="ROW_LENGTHS",e[e["ROW_SPLITS"]=3]="ROW_SPLITS",e[e["ROW_LIMITS"]=4]="ROW_LIMITS",e[e["ROW_STARTS"]=5]="ROW_STARTS"})(Ux||(Ux={}));
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Kx=30;function Xx(e){return e<=Kx?e:Oe(e,Math.floor(Math.sqrt(e)))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jx(e,t,n){const r=n*("number"===typeof e?e:e[0]),s=t*("number"===typeof e?e:e[1]);return[r,s]}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Yx(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function Zx(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2===1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function Qx(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let a=1;a<e.length;++a)a<=t.length?r?s.push(t[a-1]*e[a]):s.push(e[a]/t[a-1]):s.push(e[a]);return s}function ev(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function tv(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const nv=1.7580993408473768,rv=1.0507009873554805,sv=.3275911,av=.254829592,ov=-.284496736,iv=1.421413741,uv=-1.453152027,lv=1.061405429;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cv(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function hv(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function pv(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=0;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function dv(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=2;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function fv(e,t){const n=e[2*t],r=e[2*t+1];return{real:n,imag:r}}function mv(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function gv(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function yv(e,t,n){const r=(n?2:-2)*Math.PI*(e/t),s=Math.cos(r),a=Math.sin(r);return{real:s,imag:a}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const bv="->",xv=/->/g,vv=",",wv="...";function kv(e,t){e=e.replace(/\s/g,"");const n=(e.length-e.replace(xv,"").length)/bv.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${bv}").`);const[r,s]=e.split(bv);oe(-1===r.indexOf(wv),(()=>`The ellipsis notation ("${wv}") is not supported yet.`));const a=r.split(vv),o=a.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let p=0;p<s.length;++p){const e=s[p];if(!a.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===i.indexOf(e)&&i.push(e)}for(let p=0;p<r.length;++p){const e=r[p];-1===i.indexOf(e)&&e!==vv&&i.push(e)}const u=new Array(a.length);for(let p=0;p<o;++p){if(new Set(a[p].split("")).size!==a[p].length)throw new Error(`Found duplicate axes in input component ${a[p]}. Support for duplicate axes in input is not implemented yet.`);u[p]=[];for(let e=0;e<a[p].length;++e)u[p].push(i.indexOf(a[p][e]))}const l=i.length,c=s.length,h=[];for(let p=c;p<l;++p)h.push(p);return{allDims:i,summedDims:h,idDims:u}}function Iv(e,t){let n=new Array(e);n.fill(-1);for(let s=0;s<t.length;++s)n[t[s]]=s;const r=[];for(let s=0;s<e;++s)-1===n[s]&&r.push(s);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Nv(e,t,n){const r=new Array(e);for(let s=0;s<n.length;++s){const e=n[s].shape;for(let n=0;n<t[s].length;++n)void 0===r[t[s][n]]?r[t[s][n]]=e[n]:oe(r[t[s][n]]===e[n],(()=>`Expected dimension ${r[t[s][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`))}}function Sv(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let o=0;o<s;++o)r.push([]);const a=[];for(let o=0;o<n.length;++o){const e=n[o],s=Cv(t,e);for(const t of s)-1===a.indexOf(t)&&(r[o].push(t),a.push(t))}return{path:n,steps:r}}function Tv(e){return e.every(((e,t)=>e===t))}function Cv(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function $v(e,t,n=0){let r=[];if("number"===typeof t)oe(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);oe(s<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}oe(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ev(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Av(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Rv(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _v(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Ov(e,t){return`size ${e} must be non-negative, not ${t}`}function Fv(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Dv(e,t){const n=le(e),r=le(t);return`Input to reshape is a SparseTensor with ${n}\n  dense values, but the requested shape requires a multiple of ${r}. inputShape=${e} outputShape= ${t}`}function Mv(e,t){const n=le(e),r=le(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${r}. inputShape=${e} outputShape=${t}`}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Lv(){return"segment ids must be >= 0"}function zv(){return"segment ids are not increasing"}function Pv(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Bv(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Wv(e,t){let n,r=!1;e<=Kx?(n=e,r=!0):n=Oe(e,Math.floor(Math.sqrt(e)));while(!r)n>t||n===e?r=!0:n=Oe(e,n+1);return n}function Vv(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function Uv(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let h=0;h<r;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const o=e.shape[n],i=[];let u=1,l=1,c=1;for(let h=0;h<r;++h)i.push(e.shape[h]),u*=e.shape[h];for(let h=r;h<n;h++)i.push(e.shape[h]),l*=e.shape[h];for(let h=r;h<s;h++)i.push(t.shape[h]);for(let h=n+1;h<a;h++)i.push(e.shape[h]),c*=e.shape[h];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:o,outputShape:i}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Gv(e){try{return e.map((e=>ta(e)))}catch(T4){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${T4}`)}}function jv(e){return e.map((e=>ea(e)))}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vu();
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Hv={kernelName:rt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ru(e,Ug(Ni(n,"float32"),-1))}}},qv={kernelName:st,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=iu(Ni(n,"float32")),r=au($u(yu(1),t));return Nl(tu(e,r))}}}},Kv={kernelName:at,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=au($u(iu(Ni(n,"float32")),1));return tu(e,t)}}}},Xv={kernelName:ot,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Fu(n.shape,r.shape),a=()=>{let t=e;const r=Ou(n.shape,s);return r.length>0&&(t=pd(t,r)),yh(t,n.shape)},o=()=>{let t=e;const n=Ou(r.shape,s);return n.length>0&&(t=pd(t,n)),yh(t,r.shape)};return{a:a,b:o}}},Jv={kernelName:it,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},Yv={kernelName:ct,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lu(n)}}},Zv={kernelName:ht,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lu(n)}}},Qv={kernelName:pt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>tu(e,au($u(yu(1),iu(Ni(n,"float32")))))}}},ew={kernelName:dt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=au(Yi(yu(1),iu(Ni(n,"float32"))));return tu(e,t)}}}},tw={kernelName:gt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Fu(n.shape,r.shape),a=()=>{const t=Yi(iu(n),iu(r));let a=ru(e,tu(r,t));const o=Ou(n.shape,s);return o.length>0&&(a=pd(a,o)),yh(a,n.shape)},o=()=>{const t=Yi(iu(n),iu(r));let a=Nl(ru(e,tu(n,t)));const o=Ou(r.shape,s);return o.length>0&&(a=pd(a,o)),yh(a,r.shape)};return{a:a,b:o}}},nw={kernelName:ft,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>tu(e,Yi(iu(Ni(n,"float32")),1))}}},rw={kernelName:mt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>tu(e,$u(yu(1),iu(Ni(n,"float32"))))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sw(e,t,n,r,s,a){const o=so(e,"dy","avgPool3dGrad"),i=so(t,"input","avgPool3dGrad");let u=o,l=i,c=!1;4===i.rank&&(c=!0,u=yh(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),l=yh(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),oe(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),oe(5===l.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`)),mh("avgPool3dGrad",s,a);const h={dy:u,input:l},p={filterSize:n,strides:r,pad:s,dimRoundingMode:a},d=qa.runKernel(vt,h,p);return c?yh(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const aw=io({avgPool3dGrad_:sw}),ow={kernelName:xt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:o,dimRoundingMode:i}=n;return{x:()=>aw(e,r,s,a,o,i)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function iw(e,t,n,r,s){const a=so(e,"dy","avgPoolGrad"),o=so(t,"input","avgPoolGrad");oe(o.rank===a.rank,(()=>`Rank of input (${o.rank}) does not match rank of dy (${a.rank})`));let i=o,u=a,l=!1;3===o.rank&&(l=!0,i=yh(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=yh(a,[1,a.shape[0],a.shape[1],a.shape[2]])),oe(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),oe(4===i.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`));const c={dy:u,input:i},h={filterSize:n,strides:r,pad:s},p=qa.runKernel(bt,c,h);return l?yh(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const uw=io({avgPoolGrad_:iw}),lw={kernelName:yt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:o}=n;return{x:()=>uw(e,r,s,a,o)}}},cw={kernelName:wt,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:o}=n;return a||o?!a&&o?{a:()=>bl(e,s,!1,!1),b:()=>bl(e,r,!0,!1)}:a&&!o?{a:()=>bl(s,e,!1,!0),b:()=>bl(r,e,!1,!1)}:{a:()=>bl(s,e,!0,!0),b:()=>bl(e,r,!0,!0)}:{a:()=>bl(e,s,!1,!0),b:()=>bl(r,e,!0,!1)}}},hw={kernelName:kt,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>um(e,r,s)}}},pw={kernelName:Nt,gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,o=Array.from(a);for(let u=s.length-1;u>=0;u--)if(s[u]===a[u])o[u]=1;else if(1!==s[u])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const i=[];for(let u=0;u<o.length;u++)o[u]>1&&i.push(u);return{x:()=>pd(e,i,!0)}}},dw={kernelName:Tt,gradFunc:e=>({x:()=>e.clone()})},fw={kernelName:Ct,gradFunc:e=>({x:()=>lu(e)})},mw={kernelName:$t,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>Vp(hf(Dd(r,s),qd(r,a)),e,lu(e))}}},gw={kernelName:At,inputsToSave:["x"],gradFunc:Hv.gradFunc},yw={kernelName:Rt,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,a=xe(s,t[0].shape)[0],o=r.map((e=>e[a])),i=Og(e,o,a);return i.map((e=>()=>e))}},bw={kernelName:_t,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:o,pad:i,dataFormat:u}=n;return oe(hh(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>pp(r.shape,e,s,o,i,u),filter:()=>Oy(r,e,s.shape,o,i,u)}}},xw={kernelName:Ft,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:o,dataFormat:i,dimRoundingMode:u}=n;return{dy:()=>up(e,s,a,o,i,1,u),filter:()=>Oy(e,r,s.shape,a,o,i,u)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vw(e,t,n,r,s){let a=e;4===e.rank&&(a=yh(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;4===o.rank&&(o=yh(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),oe(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),oe(5===o.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`)),oe(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),oe(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),oe(o.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`));const i={x:a,dy:o},u={strides:r,pad:s,filterShape:n};return qa.runKernel(Mt,i,u)}const ww=io({conv3DBackpropFilter_:vw}),kw={kernelName:Dt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;oe(hh(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[o,i]=t;return{x:()=>bp(o.shape,e,i,s,a),filter:()=>ww(o,e,i.shape,s,a)}}},Iw={kernelName:zt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ru(Nl(dg(Ni(n,"float32"))),e)}}},Nw={kernelName:Pt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ru(mg(Ni(n,"float32")),e)}}},Sw={kernelName:Wt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:o}=n;return{x:()=>{const t=sd([s],r.rank);let n=$p(e,s,a,!o);return null!=t&&(n=$l(n,t)),n}}}},Tw={kernelName:jt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:o}=n,i=null==r?[1,1]:r;oe(hh(i),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[u,l]=t;return oe(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),oe(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),oe(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),oe(ph(s,i),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${i}'.`)),mh("depthwiseConv2d",a,o),{x:()=>Uy(u.shape,e,l,s,a,i,o),filter:()=>Wy(u,e,l.shape,s,a,i,o)}}},Cw={kernelName:Xt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},o={x:r,filter:s,dy:e};return{x:()=>qa.runKernel(Jt,a,n),filter:()=>qa.runKernel(Yt,o,n)}}},$w={kernelName:en,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>qa.runKernel(tn,r)}}},Ew={kernelName:nn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=ru(xd(Nl(iu(n))),2/Math.sqrt(Math.PI));return{x:()=>ru(e,r)}}},Aw={kernelName:sn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ru(e,n)}}},Rw={kernelName:an,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>yh(e,n.shape)}}},_w={kernelName:on,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ru(e,xd(n))}}},Ow={kernelName:hn,gradFunc:e=>({x:()=>lu(e)})},Fw={kernelName:pn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Fu(n.shape,r.shape),a=()=>{const t=tu(e,Ni(r,"float32")),a=Ou(n.shape,s);return a.length>0?yh(pd(t,a),n.shape):t},o=()=>{let t=ru(e,Ni(n,"float32"));const a=Ou(r.shape,s);a.length>0&&(t=yh(pd(t,a),r.shape));const o=iu(r);return Nl(tu(t,Ni(o,"float32")))};return{a:a,b:o}}},Dw={kernelName:dn,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,o,i]=t,u=null==i?yu(1):i,l=Ou(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=$u(s,a),p=ru(e,u),d=rg(Yi(o,yu(r))),f=ru(ru(ru(d,d),d),yu(-.5)),m=()=>1===a.rank?yh(ru(ru(e,Sd(yh(d,[1,1,1,a.shape[0]]),c)),u),s.shape):yh(ru(ru(e,d),u),s.shape),g=()=>{let e=ru(ru(d,yu(-1)),p);return 1===a.rank&&(e=pd(e,l)),yh(e,a.shape)},y=()=>{let e=ru(ru(f,h),p);return 1===a.rank&&(e=pd(e,l)),yh(e,a.shape)},b=()=>{const t=ru(h,d);let n=ru(e,t);return 1===a.rank&&(n=pd(n,l)),yh(n,a.shape)},x=()=>{let t=e;return 1===a.rank&&(t=pd(t,l)),yh(t,a.shape)};return{x:m,mean:g,variance:y,scale:b,offset:x}}},Mw={kernelName:fn,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a}=n,o=xe(a,r.shape)[0],i=()=>{const t=r.shape,n=s.size,i=t.slice(0,o),u=i.length,l=t.slice(a,t.length).slice(1),c=l.length,h=Lw(0,u),p=Lw(u+1,u+1+c),d=zw([i,[n],l]),f=yh(e,d),m=yh(s,[n]),g=zw([[u],h,p]),y=$l(f,g);let b=oy(y,m,r.shape[o]);const x=ad(g);return b=$l(b,x),b};return{x:i,indices:()=>s}}};function Lw(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function zw(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Pw={kernelName:yn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>lu(n),b:()=>lu(r)}}},Bw={kernelName:bn,gradFunc:e=>({x:()=>Ni(e,"float32")})},Ww={kernelName:wn,gradFunc:e=>({x:()=>lu(e)})},Vw={kernelName:kn,gradFunc:e=>({x:()=>lu(e)})},Uw={kernelName:In,gradFunc:e=>({x:()=>lu(e)})},Gw={kernelName:Nn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=Od(r,0);return{x:()=>Vp(a,e,ru(e,s))}}},jw={kernelName:En,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>tu(e,Yi(n,1))}}},Hw={kernelName:$n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>tu(e,Ni(n,"float32"))}}},qw={kernelName:Fn,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=!0,n=xd(r);return $u(e,ru(pd(e,s,t),n))}}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Kw(e,t,n,r=5,s=1,a=1,o=.5){const i={x:e,y:t,dy:n},u={depthRadius:r,bias:s,alpha:a,beta:o};return qa.runKernel(Ln,i,u)}const Xw=io({localResponseNormalizationBackprop_:Kw}),Jw={kernelName:Mn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:o,alpha:i,beta:u}=n;return{x:()=>Xw(r,s,e,a,o,i,u)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Yw(e,t,n,r){return t.rank<n.rank&&(t=yh(t,nd(t.shape,r))),e.rank<n.rank&&(e=yh(e,nd(e.shape,r))),{x:()=>{const r=ru(e,Ni(Bp(n,t),e.dtype));return r}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Zw={kernelName:zn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],o=t[1],i=xe(s,a.shape),u=Yw(e,o,a,i);return{x:()=>u["x"]()}}},Qw={kernelName:Pn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=()=>ru(e,Ni(Dd(n,r),"float32")),a=()=>ru(e,Ni(jd(n,r),"float32"));return{a:s,b:a}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ek(e,t,n,r,s,a,o){const i=so(e,"dy","maxPool3dGrad"),u=so(t,"input","maxPool3dGrad"),l=so(n,"output","maxPool3dGrad");let c=i,h=u,p=l,d=!1;4===u.rank&&(d=!0,c=yh(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),h=yh(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=yh(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),oe(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),oe(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),oe(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),mh("maxPool3dGrad",a,o);const f={dy:c,input:h,output:p},m={filterSize:r,strides:s,pad:a,dimRoundingMode:o},g=qa.runKernel(Un,f,m);return d?yh(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const tk=io({maxPool3dGrad_:ek}),nk={kernelName:Vn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=n;return{x:()=>tk(e,r,s,a,o,i,u)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rk(e,t,n,r,s,a,o){const i=so(e,"dy","maxPoolGrad"),u=so(t,"input","maxPoolGrad"),l=so(n,"output","maxPoolGrad");oe(u.rank===i.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${i.rank})`)),oe(4===i.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`)),oe(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),mh("maxPoolGrad",a,o);const c={dy:i,input:u,output:l},h={filterSize:r,strides:s,pad:a,dimRoundingMode:o};return qa.runKernel(Wn,c,h)}const sk=io({maxPoolGrad_:rk}),ak={kernelName:Bn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:o,pad:i}=n;return{x:()=>sk(e,r,s,a,o,i)}}},ok={kernelName:jn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=xe(s,r.shape),o=td(r.shape,a),i=o[1],u=le(i),l=()=>{const t=r.shape.slice();a.forEach((e=>{t[e]=1}));const n=yh(e,t),s=tu(ru(n,Rf(r.shape,"float32")),u);return s};return{x:l}}},ik={kernelName:Hn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,o]=t,i=xe(s,a.shape),u=Yw(e,o,a,i);return{x:()=>u["x"]()}}},uk={kernelName:qn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=()=>ru(e,Ni(qd(n,r),"float32")),a=()=>ru(e,Ni(Od(n,r),"float32"));return{a:s,b:a}}},lk={kernelName:Kn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>Ch(e,a,r.shape)}}},ck={kernelName:Xn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Fu(n.shape,r.shape),a=()=>{const t=Ou(n.shape,s);return t.length>0?yh(pd(e,t),n.shape):e},o=()=>{const t=ru(e,Nl(Ed(tu(n,r)))),a=Ou(r.shape,s);return a.length>0?yh(pd(t,a),r.shape):t};return{a:a,b:o}}},hk={kernelName:Yn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Fu(n.shape,r.shape),a=()=>{const t=ru(e,Ni(r,"float32")),a=Ou(n.shape,s);return a.length>0?yh(pd(t,a),n.shape):t},o=()=>{const t=ru(e,Ni(n,"float32")),a=Ou(r.shape,s);return a.length>0?yh(pd(t,a),r.shape):t};return{a:a,b:o}}},pk={kernelName:Zn,gradFunc:e=>({x:()=>Nl(e)})},dk={kernelName:sr,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Af(n.shape,"float32")}}},fk={kernelName:rr,gradFunc:e=>({x:()=>lu(e)})},mk={kernelName:ar,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n,s=uy(e,r);return s.map((e=>()=>e))}},gk={kernelName:or,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>Ch(e,a,r.shape)}}},yk={kernelName:ur,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,o=r,i=Fu(a.shape,o.shape),u=()=>{const t=Ni(o,"float32");let n=ru(e,ru(t,Tu(a,$u(t,yu(1)))));const r=Ou(a.shape,i);return r.length>0&&(n=pd(n,r)),yh(n,a.shape)},l=()=>{const t=Od(a,0),n=Vp(t,Zd(a),lu(a));let r=ru(e,ru(s,n));const u=Ou(o.shape,i);return u.length>0&&(r=pd(r,u)),yh(r,o.shape)};return{a:u,b:l}}},bk={kernelName:lr,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=Od(n,0);return{x:()=>Vp(s,e,ru(e,r)),alpha:()=>{let t=Vp(s,lu(e),ru(e,n));const a=Ou(r.shape,e.shape);return a.length>0&&(t=pd(t,a)),yh(t,r.shape)}}}};
/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xk(e,t,n){const r=e.shape.slice();r[n]=1;const s=yh(t,r),a=Tp(e,n,!0,!1),o=Tp(e,n,!0,!0),i=ru(a,o);return ru(s,i)}function vk(e,t,n){const r=e.shape.length,s=r-n.length,a=sd(n,r);let o=e;null!=a&&(o=$l(e,a));const i=o.shape.slice(),u=i.splice(r-n.length,n.length),l=u.reduce(((e,t)=>e*t),1);i.push(l);const c=o.reshape(i);let h=xk(c,t,s);if(h=h.reshape(o.shape),null!=a){const e=ad(a);h=$l(h,e)}return h}const wk={kernelName:cr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;let a=[];return a=void 0===s||null===s?r.shape.map(((e,t)=>t)):"number"===typeof s?[s]:s,{x:()=>vk(r,e,a)}}},kk={kernelName:Zt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Fu(n.shape,r.shape),a=()=>{const t=tu(e,Ni(r,"float32")),a=Ou(n.shape,s);return a.length>0?yh(pd(t,a),n.shape):t},o=()=>{let t=ru(e,Ni(n,"float32"));const a=Ou(r.shape,s);a.length>0&&(t=yh(pd(t,a),r.shape));const o=iu(r);return Nl(tu(t,Ni(o,"float32")))};return{a:a,b:o}}},Ik={kernelName:gr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>tu(e,Nl(iu(n)))}}},Nk={kernelName:Ir,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=ru(qd(n,6),Ug(n));return{x:()=>ru(e,Ni(r,"float32"))}}},Sk={kernelName:yr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ru(e,Ni(Ug(n),"float32"))}}},Tk={kernelName:br,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yh(e,n.shape)}}},Ck={kernelName:wr,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r},a=()=>qa.runKernel(kr,s,n);return{images:a}}},$k={kernelName:xr,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r},a=()=>qa.runKernel(vr,s,n);return{images:a}}},Ek={kernelName:Nr,gradFunc:(e,t,n)=>{const{dims:r}=n,s=xe(r,e.shape);return{x:()=>jm(e,s)}}},Ak={kernelName:Sr,gradFunc:e=>({x:()=>lu(e)})},Rk={kernelName:Tr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Nl(tu(e,ru(Tu(n,1.5),2)))}}},_k={kernelName:Er,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Ni(lu(n),"float32"),t:()=>ru(e,Ni(n,e.dtype)),e:()=>ru(e,Ni(df(n),e.dtype))}}},Ok={kernelName:Ar,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Od(n,yu(0)),r=yu(nv),s=yu(rv),a=ru(e,s),o=ru(ru(e,r),xd(Ni(n,"float32")));return Vp(t,a,o)}}}},Fk={kernelName:Dr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ru(e,ru(n,$u(yu(1),n)))}}},Dk={kernelName:Fr,gradFunc:e=>({x:()=>lu(e)})},Mk={kernelName:_r,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ru(kp(Ni(n,"float32")),e)}}},Lk={kernelName:Or,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ru(Np(Ni(n,"float32")),e)}}},zk={kernelName:Rr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,o=r.shape,[i,u]=ic(r,s,a),l=[];for(let c=0;c<e.rank;c++)l.push([i[c],o[c]-i[c]-u[c]]);return{x:()=>Zf(e,l)}}},Pk={kernelName:Wr,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=!0,o=ru(e,r);return{logits:()=>$u(o,ru(pd(o,[s],a),r))}}},Bk={kernelName:Mr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ru(e,Sh(n))}}},Wk={kernelName:Pr,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>Oh(e,r,s)}}},Vk={kernelName:Br,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Ih(e,r)}}},Uk={kernelName:Lr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>tu(e,ru(au(Ni(n,"float32")),2))}}},Gk={kernelName:Kr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ru(e,ru(Ni(n,"float32"),2))}}},jk={kernelName:qr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=yu(2),a=()=>ru(e,ru(s,$u(n,r))),o=()=>ru(e,ru(s,$u(r,n)));return{a:a,b:o}}},Hk={kernelName:hs,gradFunc:e=>({x:()=>lu(e)})},qk={kernelName:Qr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Fu(n.shape,r.shape),a=()=>{let t=e;const r=Ou(n.shape,s);return r.length>0&&(t=pd(t,r)),yh(t,n.shape)},o=()=>{let t=e;const n=Ou(r.shape,s);return n.length>0&&(t=pd(t,n)),yh(Nl(t),r.shape)};return{a:a,b:o}}},Kk={kernelName:zr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n,o=xe(a,r.shape);o.forEach((e=>{s[e]=1}));const i=yh(e,s),u=ru(i,Rf(r.shape,"float32"));return{x:()=>u}}},Xk={kernelName:es,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>tu(e,iu(kp(n)))}}},Jk={kernelName:ts,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ru($u(yu(1),iu(n)),e)}}},Yk={kernelName:ns,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n,a=()=>{let t=lu(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=Yi(t,Ch(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=Yi(t,Ch(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let o=0;o<s[2];++o)t=Yi(t,Ch(e,[n*r.shape[0],a*r.shape[1],o*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let o=0;o<s[2];++o)for(let i=0;i<s[3];++i)t=Yi(t,Ch(e,[n*r.shape[0],a*r.shape[1],o*r.shape[2],i*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t};return{x:a}}},Zk={kernelName:as,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=ad(s);return{x:()=>$l(e,a)}}},Qk={kernelName:is,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>Wg(e,s)}}},eI={kernelName:us,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t,r=()=>tI(e,n);return{x:r}}};function tI(e,t){const n=Mu(t,lu(t)),r=Rd(e,n);let s=Dd(t,yu(0,"int32"));const a=r.rank-s.rank;for(let i=0;i<a;++i)s=wd(s,i+1);s=hf(s,Rf(r.shape,"bool"));const o=lu(r);return Vp(s,r,o)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const nI={kernelName:cs,gradFunc:e=>({x:()=>lu(e)})},rI=[Hv,qv,Kv,Xv,Jv,Yv,Zv,Qv,ew,tw,nw,rw,ow,lw,cw,hw,pw,dw,fw,mw,gw,yw,xw,bw,kw,Iw,Nw,Sw,Tw,Cw,kk,$w,Ew,Aw,Rw,_w,Fw,Ow,Dw,Mw,Pw,Bw,Ww,Vw,Uw,Gw,jw,Hw,qw,Jw,Zw,Zw,Qw,nk,ak,ok,ik,uk,lk,ck,hk,pk,dk,fk,mk,gk,gk,yk,bk,wk,Ik,Nk,Sk,Tk,Ck,$k,Ek,Ak,Rk,_k,Ok,Fk,Dk,Mk,Lk,zk,Pk,Bk,Wk,Wk,Vk,Vk,Uk,jk,Gk,Hk,qk,Kk,Xk,Jk,Yk,Zk,Qk,eI,nI];for(const C4 of rI)Ss(C4);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.abs=function(){return this.throwIfDisposed(),Ru(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.acos=function(){return this.throwIfDisposed(),$c(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.acosh=function(){return this.throwIfDisposed(),Ac(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.add=function(e){return this.throwIfDisposed(),Yi(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.all=function(e,t){return this.throwIfDisposed(),Fc(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.any=function(e,t){return this.throwIfDisposed(),Mc(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.argMax=function(e){return this.throwIfDisposed(),zc(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.argMin=function(e){return this.throwIfDisposed(),Bc(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.asScalar=function(){return this.throwIfDisposed(),oe(1===this.size,(()=>"The array must have only 1 element.")),yh(this,[])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.asType=function(e){return this.throwIfDisposed(),Ni(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.as1D=function(){return this.throwIfDisposed(),yh(this,[this.size])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.as2D=function(e,t){return this.throwIfDisposed(),yh(this,[e,t])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),yh(this,[e,t,n])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),yh(this,[e,t,n,r])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),yh(this,[e,t,n,r,s])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.asin=function(){return this.throwIfDisposed(),Vc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.asinh=function(){return this.throwIfDisposed(),Gc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.atan=function(){return this.throwIfDisposed(),Hc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.atan2=function(e){return this.throwIfDisposed(),Kc(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.atanh=function(){return this.throwIfDisposed(),Jc(this)},Ta().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),xh(this,e,t,n,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Oh(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),Mh(this,e,t,n,r,s)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Kh(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.cast=function(e){return this.throwIfDisposed(),Ni(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.ceil=function(){return this.throwIfDisposed(),Jh(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Zh(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Sa&&(e=[e]),Ih([this,...e],t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),cp(this,e,t,n,r,s,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),fp(this,e,t,n,r,s)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),up(this,e,t,n,r,s,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.cos=function(){return this.throwIfDisposed(),kp(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.cosh=function(){return this.throwIfDisposed(),Np(this)},
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Tp(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),$p(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),_p(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Fp(this,e,t,n,r,s,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),zp(this,e,t,n,r,s)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.divNoNan=function(e){return this.throwIfDisposed(),Gp(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.div=function(e){return this.throwIfDisposed(),tu(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.dot=function(e){return this.throwIfDisposed(),Hp(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.elu=function(){return this.throwIfDisposed(),Jp(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.equal=function(e){return this.throwIfDisposed(),Bp(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.erf=function(){return this.throwIfDisposed(),Zp(this)},
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),yd(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.exp=function(){return this.throwIfDisposed(),xd(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.expandDims=function(e){return this.throwIfDisposed(),wd(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.expm1=function(){return this.throwIfDisposed(),Id(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.fft=function(){return this.throwIfDisposed(),Cg(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.flatten=function(){return this.throwIfDisposed(),yh(this,[this.size])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.floor=function(){return this.throwIfDisposed(),Ed(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.floorDiv=function(e){return this.throwIfDisposed(),Qi(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.gather=function(e,t){return this.throwIfDisposed(),Rd(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Dd(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.greater=function(e){return this.throwIfDisposed(),Od(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.ifft=function(){return this.throwIfDisposed(),Eg(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.irfft=function(){return this.throwIfDisposed(),Rg(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.isFinite=function(){return this.throwIfDisposed(),Ld(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.isInf=function(){return this.throwIfDisposed(),Pd(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.isNaN=function(){return this.throwIfDisposed(),Wd(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Ud(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.lessEqual=function(e){return this.throwIfDisposed(),qd(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.less=function(e){return this.throwIfDisposed(),jd(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Jd(this,e,t,n,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.logSigmoid=function(){return this.throwIfDisposed(),sf(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.logSoftmax=function(e){return this.throwIfDisposed(),of(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),lf(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.log=function(){return this.throwIfDisposed(),Zd(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.log1p=function(){return this.throwIfDisposed(),ef(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.logicalAnd=function(e){return this.throwIfDisposed(),hf(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.logicalNot=function(){return this.throwIfDisposed(),df(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.logicalOr=function(e){return this.throwIfDisposed(),mf(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.logicalXor=function(e){return this.throwIfDisposed(),yf(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),bl(this,e,t,n)},Ta().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),If(this,e,t,n,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.max=function(e,t){return this.throwIfDisposed(),ud(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.maximum=function(e){return this.throwIfDisposed(),Mu(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.mean=function(e,t){return this.throwIfDisposed(),Ef(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.min=function(e,t){return this.throwIfDisposed(),cd(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.minimum=function(e){return this.throwIfDisposed(),Ff(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Mf(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.mod=function(e){return this.throwIfDisposed(),zf(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.mul=function(e){return this.throwIfDisposed(),ru(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.neg=function(){return this.throwIfDisposed(),Nl(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.norm=function(e,t,n){return this.throwIfDisposed(),md(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.notEqual=function(e){return this.throwIfDisposed(),Hf(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),vl(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.onesLike=function(){return this.throwIfDisposed(),Kf(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.pad=function(e,t){return this.throwIfDisposed(),Zf(this,e,t)},Ta().prototype.pool=function(e,t,n,r,s,a){return this.throwIfDisposed(),pm(this,e,t,n,r,s,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.pow=function(e){return this.throwIfDisposed(),Tu(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.prelu=function(e){return this.throwIfDisposed(),fm(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.prod=function(e,t){return this.throwIfDisposed(),gm(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.reciprocal=function(){return this.throwIfDisposed(),Pm(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.relu=function(){return this.throwIfDisposed(),Wm(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.relu6=function(){return this.throwIfDisposed(),Um(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.reshapeAs=function(e){return this.throwIfDisposed(),yh(this,e.shape)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.reshape=function(e){return this.throwIfDisposed(),yh(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Db(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Lb(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.reverse=function(e){return this.throwIfDisposed(),jm(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.rfft=function(){return this.throwIfDisposed(),Dg(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.round=function(){return this.throwIfDisposed(),tg(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.rsqrt=function(){return this.throwIfDisposed(),rg(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.selu=function(){return this.throwIfDisposed(),ag(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),ig(this,e,t,n,r,s,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.sigmoid=function(){return this.throwIfDisposed(),Sh(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.sign=function(){return this.throwIfDisposed(),hg(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.sin=function(){return this.throwIfDisposed(),dg(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.sinh=function(){return this.throwIfDisposed(),mg(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.slice=function(e,t){return this.throwIfDisposed(),Ch(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.softmax=function(e){return this.throwIfDisposed(),Sg(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.softplus=function(){return this.throwIfDisposed(),nf(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),um(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.split=function(e,t){return this.throwIfDisposed(),Og(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.sqrt=function(){return this.throwIfDisposed(),au(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.square=function(){return this.throwIfDisposed(),iu(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Lg(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.squeeze=function(e){return this.throwIfDisposed(),Pg(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Sa?[this,e]:[this,...e];return Wg(n,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.step=function(e){return this.throwIfDisposed(),Ug(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.stridedSlice=function(e,t,n,r,s,a,o,i){return this.throwIfDisposed(),jg(this,e,t,n,r,s,a,o,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.sub=function(e){return this.throwIfDisposed(),$u(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.sum=function(e,t){return this.throwIfDisposed(),pd(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.tan=function(){return this.throwIfDisposed(),qg(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.tanh=function(){return this.throwIfDisposed(),Eh(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.tile=function(e){return this.throwIfDisposed(),Sd(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.toBool=function(){return this.throwIfDisposed(),Ni(this,"bool")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.toFloat=function(){return this.throwIfDisposed(),Ni(this,"float32")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.toInt=function(){return this.throwIfDisposed(),Ni(this,"int32")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.topk=function(e,t){return this.throwIfDisposed(),ey(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.transpose=function(e){return this.throwIfDisposed(),$l(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.unique=function(e){return this.throwIfDisposed(),sy(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),oy(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.unstack=function(e){return this.throwIfDisposed(),uy(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.where=function(e,t){return this.throwIfDisposed(),Vp(e,this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ta().prototype.zerosLike=function(){return this.throwIfDisposed(),lu(this)};
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class sI extends Error{constructor(e){super(e),Object.setPrototypeOf(this,sI.prototype)}}class aI extends Error{constructor(e){super(e),Object.setPrototypeOf(this,aI.prototype)}}class oI extends Error{constructor(e){super(e),Object.setPrototypeOf(this,oI.prototype)}}class iI extends Error{constructor(e){super(e),Object.setPrototypeOf(this,iI.prototype)}}class uI extends Error{constructor(e){super(e),Object.setPrototypeOf(this,uI.prototype)}}class lI extends Error{constructor(e){super(e),Object.setPrototypeOf(this,lI.prototype)}}
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class cI{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function hI(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function pI(e,t){if(!e)throw new uI(t)}function dI(e,t){let n=0;for(const r of e)r===t&&n++;return n}function fI(e){return 1===e.length?e[0]:e}function mI(e){return Array.isArray(e)?e:[e]}function gI(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2"),n=t.replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==n[0]?n:"private"+n}function yI(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let bI={};function xI(e){if(null===e||void 0===e)return null;const t={};return t["className"]=e.getClassName(),t["config"]=e.getConfig(),t}function vI(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach((e=>vI(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t["type"]||"number"!==typeof t["value"]?vI(t):e[n]=t["value"])}}}function wI(e,t={},n={},r="object",s=!1){if("string"===typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in bI)a=bI[s];else if(a=t[s],null==a)throw new oI(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a["className"]||null==a["config"])throw new oI(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const o=a["className"];let i,u;if(o in n?[i,u]=n[o]:o in bI?[i,u]=bI["className"]:o in t&&([i,u]=t[o]),null==i)throw new oI(`Unknown ${r}: ${o}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const n of Object.keys(bI))e[n]=bI[n];for(const s of Object.keys(n))e[s]=n[s];const t=a["config"];t["customObjects"]=e;const r=Object.assign({},bI);for(const s of Object.keys(n))bI[s]=n[s];vI(a["config"]);const o=u(i,a["config"],n,s);return bI=Object.assign({},r),o}{const e=Object.assign({},bI);for(const r of Object.keys(n))bI[r]=n[r];const t=new i(a["config"]);return bI=Object.assign({},e),t}}}function kI(e,t){return e<t?-1:e>t?1:0}function II(e,t){return-1*kI(e,t)}function NI(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function SI(e){if(null==e)throw new oI(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function TI(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new oI(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function CI(e,t,n=0,r=1/0){return pI(n>=0),pI(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function $I(e,t){Array.isArray(e)?(oe(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>$I(e,`element ${n+1} of ${t}`)))):oe(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${EI(e)}.`))}function EI(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>EI(e))).join(",")+"]":"string"===typeof e?`"${e}"`:`${e}`}function AI(e,t,n){let r,s=null!=n?n():Zs();const a=(...a)=>{const o=null!=n?n():Zs();return o-s<t||(s=o,r=e(...a)),r};return a}function RI(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
let _I=0;function OI(){return _I++}const FI={};function DI(e=""){return e in FI||(FI[e]=0),FI[e]+=1,e+FI[e].toString()}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const MI=["channelsFirst","channelsLast"],LI=["nearest","bilinear"],zI=["valid","same","causal"],PI=["max","avg"],BI=["sum","mul","concat","ave"],WI=new Map;function VI(e){TI(MI,"DataFormat",e)}function UI(e){TI(LI,"InterpolationFormat",e)}function GI(e){TI(zI,"PaddingMode",e)}function jI(e){TI(PI,"PoolMode",e)}const HI=[],qI="/";function KI(e,t){HI.push(e);try{const e=t();return HI.pop(),e}catch(n){throw HI.pop(),n}}function XI(){return 0===HI.length?"":HI.join(qI)+qI}function JI(e){if(!QI(e))throw new Error("Not a valid tensor name: '"+e+"'");return XI()+e}function YI(e){if(!QI(e))throw new Error("Not a valid tensor name: '"+e+"'");WI.has(e)||WI.set(e,0);const t=WI.get(e);if(WI.set(e,WI.get(e)+1),t>0){const n=`${e}_${t}`;return WI.set(n,1),n}return e}const ZI=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function QI(e){return!!e.match(ZI)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function eN(e){return e===parseInt(e.toString(),10)}function tN(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function nN(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function rN(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function sN(e,t){if(t<e)throw new oI(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
let aN;function oN(){return null==aN&&(aN=Ki().epsilon()),aN}function iN(){return"channelsLast"}function uN(e,t){return Ni(e,t)}function lN(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),yh(e,n)}function cN(e,t){return Li((()=>{if(2!==e.shape.length)throw new oI(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);const n=lN(e,1);return bN(n,[1,t,1])}))}function hN(e){const t=[tN(e.shape)];return yh(e,t)}function pN(e){if(e.rank<=1)throw new oI(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],tN(e.shape,1)];return yh(e,t)}function dN(e,t,n){return Li((()=>{switch(e.rank){case 1:return yg(e,t,n);case 2:return xg(e,[t,0],[n,e.shape[1]]);case 3:return wg(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Ig(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Ch(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Ch(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new oI(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function fN(e,t,n){return Li((()=>{switch(e.rank){case 1:return yg(e,t,n);case 2:return xg(e,[0,t],[e.shape[0],n]);case 3:return wg(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Ig(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new oI(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function mN(e,t,n,r){return Li((()=>{switch(e.rank){case 1:return yg(e,t,n);case 2:switch(r){case 1:return dN(e,t,n);case 2:return fN(e,t,n);default:throw new oI(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return dN(e,t,n);case 2:return wg(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return fN(e,t,n);default:throw new oI(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return dN(e,t,n);case 2:return Ig(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Ig(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return fN(e,t,n);default:throw new oI(`The axis is not within the rank of the tensor ${r}`)}default:throw new oI(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function gN(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),Ih(e,t)}function yN(e,t){switch(e.rank){case 1:return ep([e,t]);case 2:return np([e,t],0);case 3:return sp([e,t],0);case 4:return op([e,t],0);default:throw new oI(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function bN(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new oI(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Sd(e,t)}function xN(e,t=0,n=1,r,s){return _m(e,t,n,r,s)}function vN(e,t,n,r){if(e.rank<2||t.rank<2)throw new iI(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){const n=e.shape.slice(-1)[0],r=t.shape.slice(-2)[0];if(n!==r)throw new iI(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){const s=!1,a=!1;return qy({a:e,b:t,transposeA:s,transposeB:a,bias:r?IN(e.rank,r,iN()):null,activation:n})}{const s=e.shape.slice(),a=s.pop();e=yh(e,[-1,a]);const o=t.shape.slice(),i=o.pop(),u=o.pop(),l=[...o,i],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=yh($l(t,c),[u,-1]);const h=[...s,...l],p=!1,d=!1;return yh(qy({a:e,b:t,transposeA:p,transposeB:d,bias:r?IN(e.rank,r,iN()):null,activation:n}),h)}}function wN(e,t,n){return Li((()=>(t=Array.isArray(t)?Kg(t,"int32"):Ni(t,"int32"),Rd(e,t,n))))}function kN(e){return ru(e,e)}function IN(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new oI(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?yh(t,[1,r[0],1,1,1]):yh(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?yh(t,[1,1,1,1,r[0]]):yh(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?yh(t,[1,r[0],1,1]):yh(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?yh(t,[1,1,1,r[0]]):yh(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?yh(t,[1,r[0],1]):yh(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?yh(t,[1,1,r[0]]):yh(t,[1].concat(r))}else if(e<3)return t;throw new oI(`Unsupported input rank by biasAdd: ${t.rank}`)}function NN(e,t,n){return Li((()=>(null==n&&(n=iN()),VI(n),Yi(e,IN(e.rank,t,n)))))}function SN(e,t=1){if(1!==t)throw new iI(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Jp(e)}function TN(e){return Li((()=>tu(e,Yi(Ru(e),1))))}function CN(e,t,n,r){return Li((()=>Cy(e,t,n,r)))}function $N(e){return Li((()=>{const t=Yi(.5,ru(.2,e));return Zh(t,0,1)}))}function EN(e,t,n=!1){return n?e():t()}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const AN=["fanIn","fanOut","fanAvg"],RN=["normal","uniform","truncatedNormal"];
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function _N(e){TI(AN,"FanMode",e)}function ON(e){TI(RN,"Distribution",e)}class FN extends bu{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class DN extends FN{apply(e,t){return Af(e,t)}}DN.className="Zeros",vu(DN);class MN extends FN{apply(e,t){return Rf(e,t)}}MN.className="Ones",vu(MN);class LN extends FN{constructor(e){if(super(),"object"!==typeof e)throw new oI(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new oI(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Li((()=>ru(yu(this.value),Rf(e,t))))}getConfig(){return{value:this.value}}}LN.className="Constant",vu(LN);class zN extends FN{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Mm(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}zN.className="RandomUniform",vu(zN);class PN extends FN{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32","float32"!==t&&"int32"!==t)throw new iI(`randomNormal does not support dType ${t}.`);return xN(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}PN.className="RandomNormal",vu(PN);class BN extends FN{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32","float32"!==t&&"int32"!==t)throw new iI(`truncatedNormal does not support dType ${t}.`);return ny(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}BN.className="TruncatedNormal",vu(BN);class WN extends FN{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Li((()=>{if(2!==e.length||e[0]!==e[1])throw new oI("Identity matrix initializer can only be used for 2D square matrices.");return ru(this.gain,Cd(e[0]))}))}getConfig(){return{gain:this.gain}}}function VN(e,t="channelsLast"){let n,r;if(VI(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=tN(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=tN(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=tN(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}WN.className="Identity",vu(WN);class UN extends FN{constructor(e){if(super(),e.scale<0)throw new oI(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,_N(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,ON(this.distribution),this.seed=e.seed}apply(e,t){const n=VN(e),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if(t=t||"float32","float32"!==t&&"int32"!==t)throw new iI(`${this.getClassName()} does not support dType ${t}.`);return ny(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return Mm(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}UN.className="VarianceScaling",vu(UN);class GN extends UN{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return UN.className}}GN.className="GlorotUniform",vu(GN);class jN extends UN{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return UN.className}}jN.className="GlorotNormal",vu(jN);class HN extends UN{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return UN.className}}HN.className="HeNormal",vu(HN);class qN extends UN{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return UN.className}}qN.className="HeUniform",vu(qN);class KN extends UN{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return UN.className}}KN.className="LeCunNormal",vu(KN);class XN extends UN{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return UN.className}}XN.className="LeCunUniform",vu(XN);class JN extends FN{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new iI("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Li((()=>{if(e.length<2)throw new iI("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=e[0]>e[1]?[e[1],e[0]]:e,n=xN(t,0,1,"float32");let r=Fx.gramSchmidt(n);return e[0]>e[1]&&(r=$l(r)),ru(this.gain,r)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}JN.className="Orthogonal",vu(JN);const YN={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function ZN(e,t={}){return wI(e,xu.getMap().classNameMap,t,"initializer")}function QN(e){return xI(e)}function eS(e){if("string"===typeof e){const t=e in YN?YN[e]:e;if("GlorotNormal"===t)return new jN;if("GlorotUniform"===t)return new GN;if("HeNormal"===t)return new HN;if("HeUniform"===t)return new qN;if("LeCunNormal"===t)return new KN;if("LeCunUniform"===t)return new XN;{const e={};return e["className"]=t,e["config"]={},ZN(e)}}return e instanceof FN?e:ZN(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function tS(e){return Array.isArray(e)&&Array.isArray(e[0])}function nS(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function rS(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new oI(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function sS(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new oI(`Expected exactly 1 Shape; got ${e.length}`)}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function aS(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const oS="Variable";class iS{constructor(e,t="float32",n=oS,r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=OI(),n=null==n?oS:n,this.originalName=JI(n),this.name=YI(this.originalName),this.trainable_=r,this.constraint=s,this.val=cy(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),uS(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function uS(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function lS(e){return e.map((e=>e.read()))}function cS(e){e.forEach((e=>{const t=e[0];t.write(e[1])}))}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class hS{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class pS{constructor(e,t,n,r,s,a,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=o,this.id=OI(),null!=a&&(this.originalName=JI(a),this.name=YI(this.originalName)),this.rank=t.length}}let dS=0;class fS{constructor(e,t){this.callArgs=t,this.id=dS++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let mS=0;class gS extends bu{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=mS++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=gI(e)+"_"+DI(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new aI(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new oI(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return fI(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return fI(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new sI(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new sI(`Layer ${this.name} is not connected, no input to return.`);return fI(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new sI(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new sI(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return fI(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=mI(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=mI(this.inputSpec);if(e.length!==t.length)throw new oI(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],s=t[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new oI(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new oI(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new oI(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new oI(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const e=r.shape;for(const t in s.axes){const r=Number(t),a=s.axes[t],o=r>=0?e[r]:e[e.length+r];if(null!=a&&-1===[a,null].indexOf(o))throw new oI(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=s.shape)for(let e=0;e<s.shape.length;++e){const t=s.shape[e],a=r.shape[e];if(null!=t&&null!=a&&t!==a)throw new oI(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=mI(e);let r=!0;for(const a of n)if(!(a instanceof pS)){r=!1;break}let s=!0;for(const a of n)if(a instanceof pS){s=!1;break}if(r===s)throw new oI("Arguments to apply() must be all SymbolicTensors or all Tensors");return KI(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of mI(e))t.push(n.shape);this.build(fI(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);const s=mI(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=fI(a),null!=this.activityRegularizer)throw new iI("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=yS(e),r=this.computeOutputShape(n);let s;const a=bS(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new pS(a,n,this,mI(e),t,this.name,r))):new pS(a,r,this,mI(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new iI("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new sI(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new sI(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new aI(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return aS(this.weights)}build(e){this.built=!0}getWeights(e=!1){return lS(e?this.trainableWeights:this.weights)}setWeights(e){Li((()=>{const t=this.weights;if(t.length!==e.length)throw new oI(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=lS(t);for(let s=0;s<r.length;++s){const a=r[s],o=t[s],i=e[s];if(!he(a.shape,i.shape))throw new oI(`Layer weight shape ${a.shape} not compatible with provided weight shape ${i.shape}`);n.push([o,i])}cS(n)}))}addWeight(e,t,n,r,s,a,o,i){if(-1!==this._addedWeightNames.indexOf(e))throw new oI(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=i?i():eS("zeros"));const u=r.apply(t,n),l=new iS(u,n,e,a,o);return u.dispose(),null!=s&&this.addLoss((()=>s.apply(l.read()))),null==a&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=mI(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,s,a,o=null){const i=mI(e);t=mI(t),n=mI(n),r=mI(r),s=nS(s),a=nS(a);const u=[],l=[],c=[];for(const h of i)u.push(h.sourceLayer),l.push(h.nodeIndex),c.push(h.tensorIndex);new fS({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},o);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e["batchInputShape"]=this.batchInputShape),null!=this.dtype&&(e["dtype"]=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function yS(e){e=mI(e);const t=[];for(const n of e)t.push(n.shape);return fI(t)}function bS(e){return"float32"}function xS(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=e.inputTensors[n],s=e.inboundLayers[n],a=e.nodeIndices[n],o=xS(r,s,a);for(const e of o)-1===t.indexOf(e)&&t.push(e)}return t}}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class vS extends gS{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:DI("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new oI("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new oI("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new oI("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new pS(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new fS({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new oI(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function wS(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new oI("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;null==n&&(n="float32");const r=new vS({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}),s=r.inboundNodes[0].outputTensors;return s[0]}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function kS(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Ni(t,e.dtype)}catch(T4){throw new oI(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}vS.className="InputLayer",vu(vS);class IS{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof IS)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new oI(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=kS(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof pS){if(null==this.id2Value[e.id])throw new oI(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new oI(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof pS){if(null==this.id2Value[e.id])throw new oI(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new oI(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&zi(this.id2Mask)}}const NS=new cI,SS=new cI;function TS(e){null!=NS&&NS.setMaxEntries(e),null!=SS&&SS.setMaxEntries(e)}function CS(e,t,n,r){const s=null!=n&&n["training"],a=Array.isArray(e),o=a?e:[e],i=o.map((e=>e.name)),u=[],l=t.names();for(const f of i)-1!==l.indexOf(f)?u.push(t.getValue(f)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=i.join(",")+"|"+t.names().sort().join(",");let h,p=NS.get(c);if(null==p){const e=$S(o,t);p=e.sorted,h=e.recipientCounts,NS.put(c,p),SS.put(c,h)}h={},s||Object.assign(h,SS.get(c));const d=new IS(t);for(let f=0;f<p.length;++f){if(null!=r){const e=Di().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const e=p[f],a=e.sourceLayer;if(a instanceof vS)continue;const o=[],l=[],c=[];let m=!1;for(const n of e.inputs){const e=d.getValue(n),r=d.getMask(n);o.push(e),l.push(r),null!=r&&(m=!0),s||(h[n.name]--,0!==h[n.name]||t.hasKey(n)||-1!==i.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||c.push(e))}m&&(n=n||{},n["mask"]=l[0]);const g=mI(a.apply(o,n));let y=null;a.supportsMasking&&(y=a.computeMask(o,l));const b=RS(e),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){d.hasKey(x[t])||d.add(x[t],g[t],Array.isArray(y)?y[0]:y);const e=i.indexOf(x[t].name);-1!==e&&(u[e]=g[t])}s||zi(c)}return d.disposeMasks(),a?u:u[0]}function $S(e,t){oe(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=AS(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of e){const{sorted:e,recipientMap:o}=AS(a,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const t in o)null==r[t]&&(r[t]=new Set),o[t].forEach((e=>r[t].add(e)))}}return{sorted:n,recipientCounts:ES(r)}}function ES(e){const t={};for(const n in e)t[n]=e[n].size;return t}function AS(e,t){const n=new Set,r=[],s={};for(const i of t.names())n.add(i);const a=[],o=[];a.push(e);while(a.length>0){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=o[o.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&o.pop();else{o.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function RS(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const _S=Je();
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function OS(e,t){return Li((()=>au(pd(ru(e,e),t,!0))))}_S.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),TS);class FS extends bu{getConfig(){return{}}}class DS extends FS{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Li((()=>{const t=OS(e,this.axis),n=Zh(t,0,this.maxValue);return ru(e,tu(n,Yi(oN(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}DS.className="MaxNorm",vu(DS);class MS extends FS{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Li((()=>tu(e,Yi(oN(),OS(e,this.axis)))))}getConfig(){return{axis:this.axis}}}MS.className="UnitNorm",vu(MS);class LS extends FS{apply(e){return Wm(e)}}LS.className="NonNeg",vu(LS);class zS extends FS{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Li((()=>{const t=OS(e,this.axis),n=Yi(ru(this.rate,Zh(t,this.minValue,this.maxValue)),ru(1-this.rate,t));return ru(e,tu(n,Yi(oN(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}zS.className="MinMaxNorm",vu(zS);const PS={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function BS(e){return xI(e)}function WS(e,t={}){return wI(e,xu.getMap().classNameMap,t,"constraint")}function VS(e){if(null==e)return null;if("string"===typeof e){const t=e in PS?PS[e]:e,n={className:t,config:{}};return WS(n)}return e instanceof FS?e:WS(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function US(e){return new DS(e)}function GS(e){return new MS(e)}function jS(){return new LS}function HS(e){return new zS(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function qS(){return new DN}function KS(){return new MN}function XS(e){return new LN(e)}function JS(e){return new zN(e)}function YS(e){return new PN(e)}function ZS(e){return new BN(e)}function QS(e){return new WN(e)}function eT(e){return new UN(e)}function tT(e){return new GN(e)}function nT(e){return new jN(e)}function rT(e){return new HN(e)}function sT(e){return new qN(e)}function aT(e){return new KN(e)}function oT(e){return new XN(e)}function iT(e){return new JN(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
async function uT(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!==typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];zi(r)}}function lT(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
var cT;(function(e){e[e["SILENT"]=0]="SILENT",e[e["VERBOSE"]=1]="VERBOSE"})(cT||(cT={}));const hT=125;class pT{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class dT{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class fT extends pT{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t["size"]?0:t["size"];this.seen+=n;for(const r in t){const e=t[r];if("number"===typeof e)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+e*n;else{let t;r in this.totals?t=this.totals[r]:this.totals[r]=0;const s=Li((()=>Yi(this.totals[r],ru(e,n))));this.totals[r]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params["metrics"])null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:Li((()=>{const e=ru(tu(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),Pi(t[n])})))}}class mT extends pT{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const s in this.history){const r=this.history[s];for(let a=0;a<r.length;++a)if("number"!==typeof r[a]){const o=r[a];e.push(o.data()),t.push(s),n.push(a)}}const r=await Promise.all(e);for(let s=0;s<r.length;++s){const e=this.history[t[s]][n[s]];e.dispose(),this.history[t[s]][n[s]]=r[s][0]}}}class gT extends pT{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Bx,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=hT),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Ae(this.yieldEvery)&&(this.maybeWait=AI(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await uT(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await uT(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await uT(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await uT(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await uT(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):Ae(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await uT(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await uT(e),await this.trainEnd(e))}}function yT(e,t){if(null==e&&(e={}),e instanceof pT)return[e];if(Array.isArray(e)&&e[0]instanceof pT)return e;const n=mI(e);return n.map((e=>new gT(e,t)))}class bT{constructor(){}static registerCallbackConstructor(e,t){oe(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),bT.checkForDuplicate(t),null==bT.constructors[e]&&(bT.constructors[e]=[]),bT.constructors[e].push(t)}static checkForDuplicate(e){for(const t in bT.constructors){const n=bT.constructors[+t];n.forEach((t=>{if(t===e)throw new oI("Duplicate callback constructor.")}))}}static clear(){bT.constructors={}}static createCallbacks(e){const t=[];for(const n in bT.constructors){const r=+n;e>=r&&t.push(...bT.constructors[r])}return t.map((e=>new e))}}function xT(e,t,n,r,s,a,o,i,u){const l=new mT,c=[new fT,...bT.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const h=new dT(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:o,verbose:t,doValidation:i,metrics:u}),{callbackList:h,history:l}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function vT(e,t={},n=!1){return wI(e,xu.getMap().classNameMap,t,"layer",n)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function wT(e,t){return Li((()=>{"float32"!==e.dtype&&(e=Ni(e,"float32"));const n=pd(kN(e),t,!0),r=Iu(n.shape,oN()),s=au(Mu(n,r));return tu(e,s)}))}function kT(e,t){return Li((()=>Ef(kN($u(t,e)),-1)))}function IT(e,t){return Li((()=>Ef(Ru($u(t,e)),-1)))}function NT(e,t){return Li((()=>{const n=$u(e,t),r=Zh(Ru(e),oN(),Number.MAX_VALUE),s=Ru(tu(n,r));return ru(100,Ef(s,-1))}))}function ST(e,t){return Li((()=>{const n=Zh(t,oN(),Number.MAX_VALUE),r=Zd(Yi(1,n)),s=Zh(e,oN(),Number.MAX_VALUE),a=Zd(Yi(1,s));return Ef(kN($u(r,a)),-1)}))}function TT(e,t){return Li((()=>{const n=Mu(0,$u(1,ru(e,t)));return Ef(kN(n),-1)}))}function CT(e,t){return Li((()=>{const n=Mu(0,$u(1,ru(e,t)));return Ef(n,-1)}))}function $T(e,t){return Li((()=>{const n=pd(ru(e,t),-1),r=ud(ru($u(1,e),t),-1);return Mu(0,Yi(1,$u(r,n)))}))}function ET(e,t){return Li((()=>{const n=Math.log(2),r=$u(t,e),s=$u(Yi(r,nf(ru(-2,r))),n);return Ef(s,-1)}))}function AT(e,t,n=!1){return Li((()=>{if(n)t=Sg(t);else{const e=pd(t,t.shape.length-1,!0);t=tu(t,e)}return t=Zh(t,oN(),1-oN()),Nl(pd(ru(Ni(e,"float32"),Zd(t)),t.shape.length-1))}))}function RT(e,t,n=!1){return Li((()=>{const r=Ni(Ed(hN(e)),"int32");t=Zh(t,oN(),1-oN());const s=t.shape,a=yh(vl(r,s[s.length-1]),s);return AT(a,t,n)}))}function _T(e,t){if(!he(e.shape,t.shape))throw new oI(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Li((()=>{const n=Wm(t),r=Nl(Ru(t));return Yi($u(n,ru(t,e)),ef(xd(r)))}))}function OT(e,t){return Li((()=>{let n;return n=Zh(t,oN(),1-oN()),n=Zd(tu(n,$u(1,n))),Ef(_T(e,n),-1)}))}function FT(e,t){return Li((()=>{const n=Zh(e,oN(),1),r=Zh(t,oN(),1);return pd(ru(e,Zd(tu(n,r))),-1)}))}function DT(e,t){return Li((()=>{const n=Zd(Yi(oN(),t));return Ef($u(t,ru(e,n)),-1)}))}function MT(e,t){return Li((()=>{const n=wT(e,-1),r=wT(t,-1),s=ru(n,r);return Nl(pd(s,-1))}))}bT.constructors={};const LT={meanSquaredError:kT,meanAbsoluteError:IT,meanAbsolutePercentageError:NT,meanSquaredLogarithmicError:ST,squaredHinge:TT,hinge:CT,categoricalHinge:$T,logcosh:ET,categoricalCrossentropy:AT,sparseCategoricalCrossentropy:RT,binaryCrossentropy:OT,kullbackLeiblerDivergence:FT,poisson:DT,cosineProximity:MT};function zT(e){if("string"===typeof e){if(e in LT)return LT[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new oI(t)}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function PT(e,t){return Li((()=>{const n=ru(.5,Kf(t)),r=uN(Od(t,n),e.dtype);return Ef(Bp(e,r),-1)}))}function BT(e,t){return Li((()=>uN(Bp(zc(e,-1),zc(t,-1)),"float32")))}function WT(e,t){return Li((()=>Ni(pd(hf(Bp(e,1),Bp(t,1))),"float32")))}function VT(e,t){return Li((()=>Ni(pd(hf(Bp(e,1),Bp(t,0))),"float32")))}function UT(e,t){return Li((()=>Ni(pd(hf(Bp(e,0),Bp(t,1))),"float32")))}function GT(e,t){return Li((()=>{const n=WT(e,t),r=UT(e,t),s=Yi(n,r);return Ni(Vp(Od(s,0),tu(n,s),0),"float32")}))}function jT(e,t){return Li((()=>{const n=WT(e,t),r=VT(e,t),s=Yi(n,r);return Ni(Vp(Od(s,0),tu(n,s),0),"float32")}))}function HT(e,t){return OT(e,t)}function qT(e,t){return e.rank===t.rank&&(e=Pg(e,[e.rank-1])),t=zc(t,-1),t.dtype!==e.dtype&&(t=Ni(t,e.dtype)),Ni(Bp(e,t),"float32")}const KT=kT,XT=kT,JT=IT,YT=IT,ZT=NT,QT=NT,eC=AT,tC=MT,nC=RT,rC={binaryAccuracy:PT,categoricalAccuracy:BT,precision:GT,categoricalCrossentropy:eC,sparseCategoricalCrossentropy:nC,mse:KT,MSE:XT,mae:JT,MAE:YT,mape:ZT,MAPE:QT,cosine:tC};function sC(e){if("string"===typeof e&&e in rC)return rC[e];if("string"!==typeof e&&null!=e)return e;throw new oI(`Unknown metric ${e}`)}function aC(e){if(pI(null!==e,`Unknown LossOrMetricFn ${e}`),"string"===typeof e)return e;{let t;for(const n of Object.keys(LT))if(LT[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(rC))if(rC[n]===e){t=n;break}return void 0!==t?t:e.name}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function oC(e){const t={Adagrad:()=>zx.adagrad(.01),Adadelta:()=>zx.adadelta(1,.95,oN()),Adam:()=>zx.adam(.001,.9,.999,oN()),Adamax:()=>zx.adamax(.002,.9,.999,oN(),0),RMSProp:()=>zx.rmsprop(.001,.9,0,oN()),SGD:()=>zx.sgd(.01)};if(t["adagrad"]=t["Adagrad"],t["adadelta"]=t["Adadelta"],t["adam"]=t["Adam"],t["adamax"]=t["Adamax"],t["rmsprop"]=t["RMSProp"],t["sgd"]=t["SGD"],e in t)return t[e]();throw new oI(`Unknown Optimizer ${e}`)}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const iC=1048576;function uC(e,t,n=!1){if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!lC(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>iC&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${iC}.`)}}function lC(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!lC(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!lC(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function cC(e,t,n,r=console.log){const s=pC(e),a=["Layer (type)","Input Shape","Output shape","Param #"];let o;if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){a.push("Receives inputs"),o=[];for(const t in e.nodesByDepth)o.push(...e.nodesByDepth[t])}r("_".repeat(t)),dC(a,n,r),r("=".repeat(t));const i=e.layers;for(let c=0;c<i.length;++c)s?fC(i[c],n,r):mC(i[c],n,o,r),r((c===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=hC(e),l=aS(e.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(t))}function hC(e){let t;return t=null!=e.collectedTrainableWeights?aS(e.collectedTrainableWeights):aS(e.trainableWeights),t}function pC(e){let t=!0;const n=[],r=[];for(const s in e.nodesByDepth)n.push(e.nodesByDepth[s]);for(const s of n){if(s.length>1||1===s.length&&s[0].inboundLayers.length>1){t=!1;break}r.push(...s)}if(t)for(const s of e.layers){let e=!1;for(const n of s.inboundNodes)if(-1!==r.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}function dC(e,t,n=console.log){let r="";for(let s=0;s<e.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=e[s],r=r.slice(0,t[s]),r+=" ".repeat(t[s]-r.length);n(r)}function fC(e,t,n){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(T4){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(T4){r="multiple"}const a=e.name,o=e.getClassName(),i=[`${a} (${o})`,s,r,e.countParams().toString()];dC(i,t,n)}function mC(e,t,n,r){let s,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(T4){a="multiple"}try{s=JSON.stringify(e.outputShape)}catch(T4){s="multiple"}const o=[];for(const h of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(h)))for(let e=0;e<h.inboundLayers.length;++e){const t=h.inboundLayers[e].name,n=h.nodeIndices[e],r=h.tensorIndices[e];o.push(`${t}[${n}][${r}]`)}const i=e.name,u=e.getClassName(),l=0===o.length?"":o[0],c=[`${i} (${u})`,a,s,e.countParams().toString(),l];dC(c,t,r);for(let h=1;h<o.length;++h)dC(["","","","",o[h]],t,r)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function gC(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function yC(e,t){if(null===e)return null;if("string"===typeof e)return yI(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];gC(t,s,r)?n.push(r):n.push(yC(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"===typeof r)t[n]=r;else{const e=yI(n);t[e]=yC(r,e)}}return t}}function bC(e,t){if(null===e||void 0===e)return null;if("string"===typeof e)return gI(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];gC(t,s,r)?n.push(r):n.push(bC(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n],s=gI(n);t[s]="name"!==n&&"className"!==n||"string"!==typeof r?bC(r,n):r}return t}}
/** @license See the LICENSE file. */
const xC="4.2.0";
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class vC extends gS{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=DI(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],NI(this.inputs).length!==this.inputs.length)throw new oI(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);NI(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const y of this.inputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;pI(0===t,"input layer has >1 nodes"),pI(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const t=this.inputLayers[y];if(!(t instanceof vS))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},a={},o=[],i=(e,t,n,r,s,u)=>{null!=r&&null!=s&&null!=u||(r=e.sourceLayer,s=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[s];if(-1!==n.indexOf(l))throw new aI(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(vC.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let a=0;a<c;a++){const e=l.inputTensors[a],r=l.inboundLayers[a],s=l.nodeIndices[a],o=l.tensorIndices[a];i(e,t,n,r,s,o)}t.push(l);while(n.indexOf(l)>=0)n.splice(n.indexOf(l),1);o.push(l)},u=[],l=[];for(const y of this.outputs)i(y,u,l);const c=o.slice().reverse();for(const y of c){n[y.id]=y,y.id in t||(t[y.id]=0);let e=t[y.id];const a=null==r[y.outboundLayer.id]?0:r[y.outboundLayer.id];e=Math.max(e,a),r[y.outboundLayer.id]=e,s[y.outboundLayer.id]=y.outboundLayer,t[y.id]=e;for(let r=0;r<y.inboundLayers.length;r++){const s=y.inboundLayers[r],a=y.nodeIndices[r],o=s.inboundNodes[a],i=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(e+1,i),n[o.id]=o}}const h={};for(const y in t){const e=t[y];e in h||(h[e]=[]),h[e].push(n[y])}const p={};for(const y in r){const e=r[y];e in p||(p[e]=[]),p[e].push(s[y])}let d=Object.keys(p).map((e=>parseInt(e,10))).sort(II);this.layers=[];for(const y of d){const e=p[y];e.sort(((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0}));for(const t of e)t instanceof vC&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=p,d=Object.keys(h).map((e=>parseInt(e,10))).sort(II);const f=this.inputs.slice(),m=[];for(const y of d)for(const e of h[y]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new aI(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const y of g){const e=g.filter((e=>e===y)).length;if(1!==e)throw new aI(`The name "${y}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new fS({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new oI("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const a of this.layers)for(const e of a.weights){if(null!=n[e.originalName])throw new oI(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,r++}const s=[];for(const a in e){let r=a;if(null==n[a]){const e=a.split("/"),t=e.slice(0,-2).concat([e[e.length-1]]);r=t.join("/")}if(null!=n[r])s.push([n[r],e[a]]);else if(t)throw new oI(`Provided weight data has no target variable: ${a}`);delete n[r]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new oI(`${e.length} of ${r} weights are not set: ${e}`)}cS(s)}updatedConfig(){const e=this.getConfig(),t={};return t["className"]=this.getClassName(),t["config"]=e,t["kerasVersion"]=`tfjs-layers ${xC}`,t["backend"]="TensorFlow.js",t}toJSON(e,t=!0){const n=bC(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Li((()=>{e=mI(e);const n=new IS;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return CS(this.outputs,n,t)}))}computeMask(e,t){return Li((()=>{let n;return e=mI(e),n=null==t?hI(null,e.length):mI(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=nS(e);if(t.length!==this.inputLayers.length)throw new oI(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let o=0;o<t.length;o++){const e=this.inputLayers[o],r=t[o],s=e.name+"_0_0";n[s]=r}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(II);if(r.length>1)for(const o of r){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const r=[];for(let i=0;i<t.inboundLayers.length;i++){const e=t.inboundLayers[i],s=t.nodeIndices[i],a=t.tensorIndices[i],o=`${e.name}_${s}_${a}`,u=n[o];r.push(u)}const s=e.computeOutputShape(fI(r)),a=nS(s),o=e.inboundNodes.indexOf(t);for(let t=0;t<a.length;t++){const r=`${e.name}_${o}_${t}`;n[r]=a[t]}}}const s=[],a=[];for(let o=0;o<this.outputLayers.length;o++){const e=this.outputLayers[o],t=this.outputLayersNodeIndices[o],n=this.outputLayersTensorIndices[o],r=`${e.name}_${t}_${n}`;a.push(r)}for(let o=0;o<a.length;o++){const e=a[o];pI(e in n),s.push(n[e])}return fI(s)}runInternalGraph(e,t){null==t&&(t=hI(null,e.length));const n={};for(let i=0;i<this.inputs.length;++i){const r=this.inputs[i],s=e[i],a=t[i];n[r.id]=[s,a]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(II);for(const i of r){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,s=t.outputTensors,a=new Array;for(const t of r)t.id in n&&a.push(n[t.id]);if(a.length===r.length){let r,o,i,u,l={};if(null!=t.callArgs&&(l=t.callArgs),1===a.length){const[t,n]=a[0];null==l["mask"]&&(l["mask"]=n),i=mI(e.call(t,l)),u=mI(e.computeMask(t,n)),r=[t],o=[n]}else r=a.map((e=>e[0])),o=a.map((e=>e[1])),null==l["mask"]&&(l["mask"]=o),i=mI(e.call(r,l)),u=mI(e.computeMask(r,o));if(e.activityRegularizer)throw new iI("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=i[e],a=u[e];n[t.id]=[r,a]}}}}const s=[],a=[],o=[];for(const i of this.outputs){pI(i.id in n,`Could not compute output ${i.name} : ${i.id}`);const[e,t]=n[i.id];o.push(e.shape),s.push(e),a.push(t)}return[s,a,o]}buildNodeConversionMap(e){const t={};let n;for(const r of this.layers){n=r instanceof vC?1:0;for(let e=0;e<r.inboundNodes.length;e++){const s=vC.nodeKey(r,e);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new oI(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new oI("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===e)return n;throw new oI(`No such layer: ${e}`)}calculateLosses(){return Li((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=vC.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const a of this.layers){const e=a.getClassName(),r=a.getConfig(),s=[];for(let n=0;n<a.inboundNodes.length;n++){const e=a.inboundNodes[n],r=vC.nodeKey(a,n);let o={};if(this.containerNodes.has(r)){if(e.callArgs)try{JSON.stringify(e.callArgs),o=e.callArgs}catch(T4){console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${e.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),o={}}if(e.inboundLayers.length>0){const n=[];for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],a=e.nodeIndices[r],i=e.tensorIndices[r],u=vC.nodeKey(s,a);let l=t[u];null==l&&(l=0),n.push([s.name,l,i,o])}s.push(n)}}}const o={};o["name"]=a.name,o["className"]=e,o["config"]=r,o["inboundNodes"]=s,n.push(o)}e["layers"]=n;const r=[];for(let a=0;a<this.inputLayers.length;a++){const e=this.inputLayers[a],n=this.inputLayersNodeIndices[a],s=vC.nodeKey(e,n);if(!this.containerNodes.has(s))continue;let o=t[s];null!==o&&void 0!==o||(o=0);const i=this.inputLayersTensorIndices[a];r.push([e.name,o,i])}e["inputLayers"]=r;const s=[];for(let a=0;a<this.outputLayers.length;a++){const e=this.outputLayers[a],n=this.outputLayersNodeIndices[a],r=vC.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let o=t[r];null!==o&&void 0!==o||(o=0);const i=this.outputLayersTensorIndices[a];s.push([e.name,o,i])}return e["outputLayers"]=s,e}static fromConfig(e,t,n={},r=!1){const s={},a={};function o(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function i(e,t){const n=[];let r;for(const a of t){const i=a[0],u=a[1],l=a[2];if(r=null==a[3]?{}:a[3],!(i in s))return void o(e,t);const c=s[i];if(c.inboundNodes.length<=u)return void o(e,t);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&e.apply(fI(n),r)}function u(e){const n=e["name"],a=vT(e,null!=t["customObjects"]?t["customObjects"]:{});a.setFastWeightInitDuringBuild(r),s[n]=a;const i=e["inboundNodes"];i.forEach((e=>{if(!(e instanceof Array))throw new oI(`Corrupted configuration, expected array for nodeData: ${e}`);o(a,e)}))}const l=t["name"],c=t["layers"];for(const m of c)u(m);while(!SI(a))for(const e of c){const t=s[e["name"]];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)i(t,n)}}const h=[],p=[],d=t["inputLayers"];for(const m of d){const e=m[0],t=m[1],n=m[2];pI(e in s);const r=s[e],a=r.inboundNodes[t].outputTensors;h.push(a[n])}const f=t["outputLayers"];for(const m of f){const e=m[0],t=m[1],n=m[2];pI(e in s);const r=s[e],a=r.inboundNodes[t].outputTensors;p.push(a[n])}return new e({inputs:h,outputs:p,name:l})}get stateful(){if(this._stateful)throw new oI("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Li((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function wC(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function kC(e,t){return wC(e,t,"classWeight")}async function IC(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Li((()=>{if(1===e.shape.length)return Ti(e);if(2===e.shape.length){if(e.shape[1]>1){const t=1;return zc(e,t)}if(1===e.shape[1])return yh(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());zi(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),Kg(s,"float32")}return null}function NC(e,t){return ru(e,t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const SC=32;function TC(e,t){let n,r;const s=t;n=s["xs"],r=s["ys"],oe(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=CC("input",e.inputNames,n),o=CC("output",e.outputNames,r),i=a[0].shape[0];oe(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),oe(o.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let u=0;u<a.length;u++)oe(a[u].shape[0]===i,(()=>`Batch size mismatch: input ${e.inputNames[u]} has ${a[u].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`));for(let u=0;u<o.length;u++)oe(o[u].shape[0]===i,(()=>`Batch size mismatch: output ${e.outputNames[u]} has ${o[u].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`));return{xs:a,ys:o}}function CC(e,t,n){if(n instanceof Sa)return[n];if(Array.isArray(n))return oe(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new oI(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function $C(e){if(3===e.length)throw new iI("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function EC(e,t,n){const r=null!=n.batchesPerEpoch;if(oe(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),oe(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),oe(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),oe(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),oe(null==n["validationSplit"],(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let a,o;if(s)if(RC(n.validationData))oe(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=$C(n.validationData);a=e.xs,o=e.ys}const i=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=s?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const c=yT(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:d}=xT(c,h,n.epochs,null,null,AC(t,n),null,s,l);p.setModel(e),e.history=d,await p.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();while(f<n.epochs){const l={};await p.onEpochBegin(f);let c=0,h=0;r||(m=await t.iterator());while(!r||c<n.batchesPerEpoch){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=TC(e,t.value),a={};a["batch"]=h,a["size"]=r[0].shape[0],await p.onBatchBegin(h,a);const o=[];if(null!=n.classWeight){const t=kC(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)o.push(await IC(s[e],null,t[e]))}const l=r.concat(s).concat(o),d=i(l);zi(l);for(let e=0;e<u.length;++e){const t=u[e],n=d[e];a[t]=n,Pi(n)}await p.onBatchEnd(h,a),lT(a),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=RC(n.validationData)?mI(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):mI(e.evaluate(a,o,{batchSize:null==n.validationBatchSize?SC:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,l),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function AC(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function RC(e){return"function"===typeof e.iterator}function _C(e){return"function"===typeof e.next}async function OC(e,t,n){n=n||{};const r=null!=n.batches,s=e.testFunction;let a=[];if(n.verbose>0)throw new iI("Verbose mode is not implemented yet.");oe(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const o=_C(t)?t:await t.iterator();let i=0,u=0;while(!r||u<n.batches){const t=await o.next();if(a=Li((()=>{if(t.value){const{xs:n,ys:r}=TC(e,t.value),o=n.concat(r),l=Li((()=>s(o)));if(zi(o),0===u)for(let e=0;e<l.length;++e)a.push(yu(0));const c=o[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=a[e];a[e]=Li((()=>Yi(a[e],ru(c,t)))),u>0&&zi(n)}zi(l),i+=c,++u}return a})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let l=0;l<a.length;++l){const e=a[l];a[l]=tu(a[l],i),zi(e)}return fI(a)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function FC(e){oe(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function DC(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>dN(e,t,n-t))):dN(e,t,n-t)}function MC(e,t){return Li((()=>null==e?null:Array.isArray(e)?e.map((e=>MC(e,t))):wN(e,"int32"===t.dtype?t:Ni(t,"int32"))))}function LC(e,t){const n=[];let r=0,s=null;while(r<e)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function zC(e){const t=[];e instanceof Sa&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(lN(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function PC(e,t){if(null==e)return;const n=[];if(t instanceof Sa)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const s in t){const e=t[s];n.push(e.id)}const r=[];if(e instanceof Sa)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const s in e){const t=e[s];-1===n.indexOf(t.id)&&r.push(t)}r.forEach((e=>{e.isDisposed||e.dispose()}))}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function BC(e){return e instanceof Sa}function WC(e){return Array.isArray(e)}function VC(e){return!BC(e)&&!WC(e)}function UC(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(WC(e)&&e.length>0)t=!0;else if(VC(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new oI(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(VC(e)){a=[];for(const n of t){if(null==e[n])throw new oI(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(WC(e)){if(e.length!==t.length)throw new oI(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(t.length>1)throw new oI(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=zC(a),null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=a[o];if(e.shape.length!==n[o].length)throw new oI(`Error when checking ${s}: expected ${t[o]} to have ${n[o].length} dimension(s). but got array with shape ${e.shape}`);for(let t=0;t<n[o].length;++t){if(0===t&&!r)continue;const a=e.shape[t],i=n[o][t];if(null!=i&&i>=0&&a!==i)throw new oI(`${s} expected a batch of elements where each example has shape [${n[o].slice(1,n[o].length)}] (i.e.,tensor shape [*,${n[o].slice(1,n[o].length)}]) but the ${s} received an input with ${e.shape[0]} examples, each with shape [${e.shape.slice(1,e.shape.length)}] (tensor shape [${e.shape}])`)}}return a}function GC(e,t,n){const r=NI(e.map((e=>e.shape[0])));r.sort();const s=NI(t.map((e=>e.shape[0])));if(s.sort(),r.length>1)throw new oI(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(s.length>1)throw new oI(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&s.length>0&&!he(r,s))throw new oI(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}function jC(e,t,n){const r=[kT,OT,AT];for(let s=0;s<e.length;++s){const a=e[s],o=t[s],i=n[s];if(null!=o){if(o===AT&&1===a.shape[a.shape.length-1])throw new oI(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(o)){const e=a.shape.slice(1),t=i.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new oI(`A target Tensor with shape ${a.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function HC(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new oI(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new oI(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=a[o];if(e.shape.length!==n[o].length)throw new oI(`Error when checking ${s}: expected ${t[o]} to have ${n[o].length} dimension(s), but got array with shape ${JSON.stringify(e.shape)}`);for(let a=0;a<n[o].length;++a){if(0===a&&!r)continue;const i=e.shape[a],u=n[o][a];if(null!=u&&u!==i)throw new oI(`Error when checking ${s}: expected ${t[o]} to have shape ${JSON.stringify(n[o])} but got array with shape ${JSON.stringify(e.shape)}.`)}}}function qC(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"===typeof e||"function"===typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!==typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}const KC="layers-model";class XC extends vC{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new oI("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");cC(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"===typeof e.optimizer)this.optimizer_=oC(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof wu))throw new oI("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"===typeof e.loss||"function"===typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new oI(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>zT(e)))}else{const n=zT(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new oI(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(zT(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const e=this.internalOutputShapes[a],t=this.outputNames[a];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[a])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],KI("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=qC(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};KI("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=r[e],a=t=>{const n="";let r,a,o;for(const i of t){if("string"===typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===OT?-1!==["accuracy","acc"].indexOf(i)?a=PT:-1!==["crossentropy","ce"].indexOf(i)&&(a=HT):this.lossFunctions[e]===RT?-1!==["accuracy","acc"].indexOf(i)?a=qT:-1!==["crossentropy","ce"].indexOf(i)&&(a=nC):-1!==["accuracy","acc"].indexOf(i)?a=BT:-1!==["crossentropy","ce"].indexOf(i)&&(a=eC),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),o=a,r=n+s}else{const e=sC(i);o=e,r=n+aC(i)}let t;KI(r,(()=>{t=o})),s(e,r,t)}};a(t)}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;FC(r);const s=!0,a=this.standardizeUserDataXY(e,t,s,r);try{const s=a[0].concat(a[1]);this.makeTestFunction();const o=this.testFunction,i=this.testLoop(o,s,r,n.verbose,n.steps);return fI(i)}finally{PC(a[0],e),PC(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),OC(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new oI(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new oI(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new oI("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),a=new IS;if(e instanceof Sa&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new oI(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const i of this.inputs){const t=e[i.name];if(null==t)throw new oI(`No value is provided for the model's input ${i.name}`);a.add(i,t)}const o=CS(s,a);return n?o:o[0]}retrieveSymbolicTensors(e){const t=hI(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((e=>e.name));for(let r=0;r<e.length;++r){const o=a.indexOf(e[r]);if(-1!==o&&(t[r]=s[o],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new oI(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return Li((()=>{const r=this.checkNumSamples(e);if(n)throw new iI("Verbose predictLoop() is not implemented yet.");const s=LC(r,t),a=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t){const n=Li((()=>{const n=s[t][0],r=s[t][1],a=DC(e,n,r),o=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)o.push({key:this.inputs[e],value:a[e]});else o.push({key:this.inputs[0],value:a});const i=new IS(o);return CS(this.outputs,i)}));n.forEach(((e,t)=>a[t].push(e)))}return fI(a.map((e=>Ih(e,0))))}))}predict(e,t={}){const n=zC(e);HC(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return FC(r),this.predictLoop(n,r)}finally{PC(n,e)}}predictOnBatch(e){HC(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new aI("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let a=0;a<this.feedOutputShapes.length;++a){const e=this.feedOutputShapes[a],t=this.feedLossFns[a];t===RT?s.push(e.slice(0,e.length-1).concat([1])):s.push(e)}if(e=UC(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=UC(t,this.feedOutputNames,s,!1,"target"),GC(e,t,null),jC(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!==0)throw new oI(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){const[o,i]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=kC(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await IC(i[t],null,e[t]))}return[o,i,u]}testLoop(e,t,n,r=0,s){return Li((()=>{const a=this.checkNumSamples(t,n,s,"steps"),o=[];if(r>0)throw new iI("Verbose mode is not implemented yet.");if(null!=s)throw new iI("steps mode in testLoop() is not implemented yet");{const r=LC(a,n),s=Kg(sN(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],i=r[n][1],u=dN(s,a,i-a),l=MC(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)o.push(yu(0));for(let e=0;e<c.length;++e){const t=c[e];o[e]=Yi(o[e],ru(i-a,t))}}for(let e=0;e<o.length;++e)o[e]=tu(o[e],a)}return o}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;if(dI(e,r)>1){const t=dI(e.slice(0,n),r);s+=`_${t}`}t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],o=()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const o=new IS(e),i=CS(this.outputs,o,{training:!0});let u;for(let n=0;n<this.lossFunctions.length;++n){const e=this.lossFunctions[n];let a=e(r[n],i[n]);null!=s[n]&&(a=NC(a,s[n]));const o=Ef(a);t.push(o),u=0===n?a:Yi(u,a)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],s=this.metricsTensors[n][1];e=Ef(t(r[s],i[s]))}Pi(e),a.push(e)}return u=Ef(u),this.calculateLosses().forEach((e=>{u=Yi(u,e)})),u},i=this.collectedTrainableWeights.map((e=>e.read())),u=!0,l=this.optimizer_.minimize(o,u,i);return[l].concat(a)}}makeTestFunction(){this.testFunction=e=>Li((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const o=new IS(a),i=CS(this.outputs,o);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],a=Ef(r(s[e],i[e]));n=0===e?a:Yi(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],a=Ef(n(s[r],i[r]));t.push(a)}return t}))}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,s,a,o,i,u,l,c,h;this.isTraining=!0;try{const p=null==n.batchSize?32:n.batchSize;FC(p);const d=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,d,p);r=f[0],s=f[1],h=f[2];let m,g=!1;if(null!=n.validationData&&n.validationData.length>0){if(g=!0,2!==n.validationData.length)throw 3===n.validationData.length?new iI("validationData including sample weights is not supported yet."):new oI(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);i=n.validationData[0],u=n.validationData[1];const e=!0,t=await this.standardizeUserData(i,u,null,null,e,p);l=t[0],c=t[1],m=l.concat(c)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){g=!0;const e=Math.floor(r[0].shape[0]*(1-n.validationSplit)),t=r[0].shape[0];l=DC(r,e,t),a=r,r=DC(r,0,e),c=DC(s,e,t),o=s,s=DC(s,0,e),m=l.concat(c)}else null!=n.validationSteps&&(g=!0);const y=r.concat(s).concat(h);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),x=this.getDedupedMetricsNames();let v,w;g?(this.makeTestFunction(),v=this.testFunction,w=x.slice().concat(x.map((e=>"val_"+e)))):(v=null,m=[],w=x.slice());const k=yT(n.callbacks,n.yieldEvery),I=await this.fitLoop(b,y,x,p,n.epochs,n.verbose,k,v,m,n.shuffle,w,n.initialEpoch,null,null);return I}finally{this.isTraining=!1,PC(r,e),PC(s,t),PC(a,e),PC(o,t),PC(l,i),PC(c,u),null!=h&&zi(h)}}async fitLoop(e,t,n,r,s,a,o,i,u,l,c,h,p,d){null==r&&(r=32),null==s&&(s=1),null==l&&(l=!0),null==h&&(h=0);let f=!1;if(null!=i&&null!=u&&(f=!0),null!=d&&(f=!0,null==p))throw new oI("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,r,p,"steps_per_epoch");let g;null!=m&&(g=sN(0,m)),null==a&&(a=1);const{callbackList:y,history:b}=xT(o,a,s,h,m,p,r,f,c);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let x=h;x<s;++x){await y.onEpochBegin(x);const s={};if(null!=p)throw new iI("stepsPerEpoch mode is not implemented yet.");{if("batch"===l)throw new iI("batch shuffling is not implemneted yet");l&&Z(g);const a=Kg(g),o=LC(m,r);for(let l=0;l<o.length;++l){const c={};if(await y.onBatchBegin(l,c),Li((()=>{const h=o[l][0],p=o[l][1],d=dN(a,h,p-h);c["batch"]=l,c["size"]=p-h;const m=MC(t,d),g=e(m);for(let e=0;e<n.length;++e){const t=n[e],r=g[e];c[t]=r,Pi(r)}if(l===o.length-1&&f){const e=this.testLoop(i,u,r);for(let t=0;t<n.length;++t){const r=n[t],a=e[t];Pi(a),s["val_"+r]=a}}})),await y.onBatchEnd(l,c),lT(c),this.stopTraining_)break}a.dispose()}if(await y.onEpochEnd(x,s),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return EC(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction(),o=a(r.concat(s)),i=[];for(const u of o){const e=await u.data();i.push(e[0])}return zi(o),PC(n[0],e),PC(n[1],t),fI(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let a=0;a<r.length;++a)n&&!r[a].trainable||t.push({name:r[a].originalName,tensor:s[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Di().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Di().numTensors}return e}getLossIdentifiers(){let e;if("string"===typeof this.loss)e=gI(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!==typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>gI(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!==typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=gI(n[r])}}return e}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[gI(aC(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>gI(aC(e))));{const e={};for(const t in this.metrics)e[t]=gI(aC(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=yC(e.optimizer_config),n=vT(t);let r,s;if("string"===typeof e.loss)r=yI(e.loss);else if(Array.isArray(e.loss))r=e.loss.map((e=>yI(e)));else if(null!=e.loss){r={};for(const t in e.loss)r[t]=yI(e.loss[t])}if(Array.isArray(e.metrics))s=e.metrics.map((e=>yI(e)));else if(null!=e.metrics){s={};for(const t in e.metrics)s[t]=yI(e.metrics[t])}this.compile({loss:r,metrics:s,optimizer:n})}async save(e,t){if("string"===typeof e){const t=Mo(e);if(0===t.length)throw new oI(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new oI(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new oI("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await mo(this.getNamedWeights(t)),r=!1,s=null,a=this.toJSON(s,r),o={modelTopology:a,format:KC,generatedBy:`TensorFlow.js tfjs-layers v${xC}`,convertedBy:null},i=null!=t&&t.includeOptimizer;if(i&&null!=this.optimizer){o.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:r}=await mo(await this.optimizer.getWeights(),e);n.specs.push(...r),n.data=ko([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;uC(this.userDefinedMetadata,this.name,e),o.userDefinedMetadata=this.userDefinedMetadata}return o.weightData=n.data,o.weightSpecs=n.specs,e.save(o)}setUserDefinedMetadata(e){uC(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}XC.className="Model",vu(XC);class JC extends XC{}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
async function YC(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n["model_config"]&&(n=n["model_config"]);const r=yC(n),s=vT(r,t);if(null!=e.weightsManifest){const t=await el(e.weightsManifest,e.pathPrefix,s.weights.map((e=>e.originalName))),n={};for(const e of s.weights)n[e.originalName]=t[e.originalName];s.loadWeights(n),zi(t)}return s}async function ZC(e,t){if(null==t&&(t={}),"string"===typeof e){const n=Lo(e,t);if(0===n.length)n.push(ll(e,t));else if(n.length>1)throw new oI(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return QC(e,void 0,t)}async function QC(e,t,n){if(null==n&&(n={}),null==e.load)throw new oI("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let s=r.modelTopology;null!=s["model_config"]&&(s=s["model_config"]);const a=null==n.strict||n.strict,o=null!=r.weightData&&null!=r.weightSpecs&&a,i=vT(yC(s),t,o),u=r.trainingConfig;if(null!=u&&i.loadTrainingConfig(u),null!=r.userDefinedMetadata&&i.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new oI("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=e$(r.weightData,r.weightSpecs);i.loadWeights(e,a),null!=i.optimizer&&t.length>0&&await i.optimizer.setWeights(t),zi(e),zi(t.map((e=>e.tensor)))}return i}function e$(e,t){const n=go(e,t),r={},s=[];return t.forEach((e=>{"optimizer"===e.group?s.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:s}}JC.className="Functional",vu(JC);class t$ extends XC{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:DI("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){const t=e.inboundNodes[0].outputTensors[0].shape;if(t.some((e=>e<0)))throw new oI(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof t$||e instanceof XC;let n;if(t){if(n=e,1!==n.outputs.length)throw new oI("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new oI("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new oI("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=wS({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new oI(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new oI("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=xS(this.outputs[0])}this.inboundNodes=[],new fS({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:hI(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(sS(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new XC({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new aI("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new aI("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new aI("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new aI("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0]["className"])throw new oI("Legacy serialization format not supported yet.");s=t}else oe(null!=t["layers"],(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t["layers"],delete t["layers"],a=t;const o=new e(a);if(!(o instanceof t$))throw new iI(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(const i of s){const e=void 0,t=vT(i,e,r);r&&t.setFastWeightInitDuringBuild(!0),o.add(t)}return o}set stopTraining(e){if(null==this.model)throw new oI("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new oI("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n["className"]=t.getClassName(),n["config"]=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function n$(e){return new XC(e)}function r$(e){return new t$(e)}function s$(e){return wS(e)}function a$(e,t){bT.registerCallbackConstructor(e,t)}t$.className="Sequential",vu(t$);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class o$ extends bu{getConfig(){return{}}}class i$ extends o${apply(e,t=1){return SN(e,t)}}i$.className="elu",vu(i$);class u$ extends o${apply(e){return ag(e)}}u$.className="selu",vu(u$);class l$ extends o${apply(e){return Wm(e)}}l$.className="relu",vu(l$);class c$ extends o${apply(e){return Li((()=>Ff(6,Wm(e))))}}c$.className="relu6",vu(c$);class h$ extends o${apply(e){return e}}h$.className="linear",vu(h$);class p$ extends o${apply(e){return Sh(e)}}p$.className="sigmoid",vu(p$);class d$ extends o${apply(e){return $N(e)}}d$.className="hardSigmoid",vu(d$);class f$ extends o${apply(e){return nf(e)}}f$.className="softplus",vu(f$);class m$ extends o${apply(e){return TN(e)}}m$.className="softsign",vu(m$);class g$ extends o${apply(e){return Eh(e)}}g$.className="tanh",vu(g$);class y$ extends o${apply(e,t=-1){return Sg(e,t)}}y$.className="softmax",vu(y$);class b$ extends o${apply(e,t=-1){return of(e,t)}}b$.className="logSoftmax",vu(b$);class x$ extends o${apply(e,t=1){return Li((()=>ru(Sh(ru(e,t)),e)))}}x$.className="swish",vu(x$);class v$ extends o${apply(e){return Li((()=>ru(e,Eh(nf(e)))))}}function w$(e){return e.getClassName()}function k$(e,t={}){return wI(e,xu.getMap().classNameMap,t,"activation")}function I$(e){if(null==e){const e={className:"linear",config:{}};return k$(e)}if("string"===typeof e){const t={};return t["className"]=e,t["config"]={},k$(t)}return e instanceof o$?e:k$(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function N$(e){if(null!=e&&"object"!==typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}v$.className="mish",vu(v$);class S$ extends bu{}class T$ extends S${constructor(e){super(),N$(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Li((()=>{let t=Af([1]);return this.hasL1&&(t=Yi(t,pd(ru(this.l1,Ru(e))))),this.hasL2&&(t=Yi(t,pd(ru(this.l2,kN(e))))),yh(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t["l1"],l2:t["l2"]})}}function C$(e){return N$(e),new T$({l1:null!=e?e.l1:null,l2:0})}function $$(e){return N$(e),new T$({l2:null!=e?e.l2:null,l1:0})}T$.className="L1L2",vu(T$);const E$={l1l2:"L1L2"};function A$(e){return xI(e)}function R$(e,t={}){return wI(e,xu.getMap().classNameMap,t,"regularizer")}function _$(e){if(null==e)return null;if("string"===typeof e){const t=e in E$?E$[e]:e,n={className:t,config:{}};return R$(n)}return e instanceof S$?e:R$(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class O$ extends gS{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=rS(e);let n=Wm(e);return null!=this.maxValue&&(n=Zh(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}O$.className="ReLU",vu(O$);class F$ extends gS{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=rS(e);return Ud(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}F$.className="LeakyReLU",vu(F$);class D$ extends gS{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=eS(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=_$(e.alphaRegularizer),this.alphaConstraint=VS(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new oI(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){e=sS(e);const t=e.slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new hS({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=rS(e),fm(e,this.alpha.read())}getConfig(){const e={alphaInitializer:QN(this.alphaInitializer),alphaRegularizer:A$(this.alphaRegularizer),alphaConstraint:BS(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}D$.className="PReLU",vu(D$);class M$ extends gS{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new iI(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=rS(e);return Jp(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}M$.className="ELU",vu(M$);class L$ extends gS{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=rS(e);return ru(n,Ni(Od(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}L$.className="ThresholdedReLU",vu(L$);class z$ extends gS{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new y$).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=rS(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function P$(e,t,n){if("number"===typeof e)return hI(e,t);if(e.length!==t)throw new oI(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const s=e[r];if(!eN(s))throw new oI(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e}function B$(e,t,n,r,s=1){if(null==e)return e;const a=t+(t-1)*(s-1);let o;return o="same"===n?e:e-a+1,Math.floor((o+r-1)/r)}function W$(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+rN([n-t,0]);else{if("same"!==r)throw new oI(`Unsupport padding mode: ${r}.`);e*=t}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function V$(e,t){return Li((()=>(VI(t),"channelsFirst"===t?$l(e,[0,2,3,1]):e)))}function U$(e,t){return Li((()=>(VI(t),"channelsFirst"===t?$l(e,[0,2,3,4,1]):e)))}function G$(e,t,n,r=1,s="valid",a,o=1){return Li((()=>{if(null==a&&(a=iN()),VI(a),3!==e.shape.length)throw new oI(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new oI(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new oI(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=$l(e,[0,2,1])),"causal"===s)throw new iI("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=cp(e,t,r,"same"===s?"same":"valid","NWC",o);return null!=n&&(i=NN(i,n)),i}))}function j$(e,t,n,r=[1,1],s="valid",a,o,i=null){return Li((()=>{if(null==a&&(a=iN()),VI(a),3!==e.rank&&4!==e.rank)throw new oI(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new oI(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=V$(e,a);if("causal"===s)throw new iI("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Py({x:u,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:i}),"channelsFirst"===a&&(u=$l(u,[0,3,1,2])),u}))}function H$(e,t,n,r=[1,1,1],s="valid",a,o){return Li((()=>{if(null==a&&(a=iN()),VI(a),4!==e.rank&&5!==e.rank)throw new oI(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new oI(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let i=U$(e,a);if("causal"===s)throw new iI("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=gp(i,t,r,"same"===s?"same":"valid","NDHWC",o),null!=n&&(i=NN(i,n)),"channelsFirst"===a&&(i=$l(i,[0,4,1,2,3])),i}))}z$.className="Softmax",vu(z$);class q$ extends gS{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",q$.verifyArgs(t),this.rank=e,$I(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new iI(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=P$(t.kernelSize,e,"kernelSize"),this.strides=P$(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,GI(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,VI(this.dataFormat),this.activation=I$(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=eS(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=VS(t.biasConstraint),this.biasRegularizer=_$(t.biasRegularizer),this.activityRegularizer=_$(t.activityRegularizer),this.dilationRate=P$(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new oI(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new oI(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new oI(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(pI("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!==typeof e.kernelSize&&!CI(e.kernelSize,"number",1,3))throw new oI(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:w$(this.activation),useBias:this.useBias,biasInitializer:QN(this.biasInitializer),biasRegularizer:A$(this.biasRegularizer),activityRegularizer:A$(this.activityRegularizer),biasConstraint:BS(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class K$ extends q${constructor(e,t){super(e,t),this.kernel=null,K$.verifyArgs(t),this.filters=t.filters,$I(this.filters,"filters"),this.kernelInitializer=eS(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=VS(t.kernelConstraint),this.kernelRegularizer=_$(t.kernelRegularizer)}build(e){e=sS(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new oI(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Li((()=>{let t;e=rS(e);const n=null==this.bias?null:this.bias.read(),r=RI(this.activation.getClassName());if(null!=r&&2===this.rank)t=j$(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=G$(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=j$(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new iI("convolutions greater than 3D are not implemented yet.");t=H$(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=sS(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<n.length;++s){const e=B$(n[s],this.kernelSize[s],this.padding,this.strides[s],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[s]);t.push(e)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:QN(this.kernelInitializer),kernelRegularizer:A$(this.kernelRegularizer),kernelConstraint:BS(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!==typeof e.filters||e.filters<1)throw new oI(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class X$ extends K${constructor(e){super(2,e),X$.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e["rank"],e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!CI(e.kernelSize,"number",1,2))throw new oI(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}X$.className="Conv2D",vu(X$);class J$ extends K${constructor(e){super(3,e),J$.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e["rank"],e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new oI(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}J$.className="Conv3D",vu(J$);class Y$ extends X${constructor(e){if(super(e),this.inputSpec=[new hS({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new oI(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=sS(e),4!==e.length)throw new oI("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new oI("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new hS({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Li((()=>{let t=rS(e);if(4!==t.shape.length)throw new oI(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const o=n[s],i=n[a],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],p=W$(o,c,u,this.padding),d=W$(i,h,l,this.padding),f=[r,p,d,this.filters];"channelsLast"!==this.dataFormat&&(t=$l(t,[0,2,3,1]));let m=fp(t,this.kernel.read(),f,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(m=$l(m,[0,3,1,2])),null!=this.bias&&(m=NN(m,this.bias.read(),this.dataFormat)),null!=this.activation&&(m=this.activation.apply(m)),m}))}computeOutputShape(e){e=sS(e);const t=e.slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=W$(t[r],i,a,this.padding),t[s]=W$(t[s],u,o,this.padding),t}getConfig(){const e=super.getConfig();return delete e["dilationRate"],e}}Y$.className="Conv2DTranspose",vu(Y$);class Z$ extends J${constructor(e){if(super(e),this.inputSpec=[new hS({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new oI(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=sS(e),5!==e.length)throw new oI("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new oI("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new hS({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Li((()=>{let t=rS(e);if(5!==t.shape.length)throw new oI(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a,o;"channelsFirst"===this.dataFormat?(o=2,s=3,a=4):(o=1,s=2,a=3);const i=n[o],u=n[s],l=n[a],c=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],d=this.strides[0],f=this.strides[1],m=this.strides[2],g=W$(i,d,c,this.padding),y=W$(u,f,h,this.padding),b=W$(l,m,p,this.padding),x=[r,g,y,b,this.filters];"channelsLast"!==this.dataFormat&&(t=$l(t,[0,2,3,4,1]));let v=vp(t,this.kernel.read(),x,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(v=$l(v,[0,4,1,2,3])),null!==this.bias&&(v=NN(v,this.bias.read(),this.dataFormat)),null!==this.activation&&(v=this.activation.apply(v)),v}))}computeOutputShape(e){e=sS(e);const t=e.slice();let n,r,s,a;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,a=4):(n=4,r=1,s=2,a=3);const o=this.kernelSize[0],i=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=W$(t[r],l,o,this.padding),t[s]=W$(t[s],c,i,this.padding),t[a]=W$(t[a],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e["dilationRate"],e}}Z$.className="Conv3DTranspose",vu(Z$);class Q$ extends K${constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new oI("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new oI("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new oI(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=eS(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=_$(t.depthwiseRegularizer),this.depthwiseConstraint=VS(t.depthwiseConstraint),this.pointwiseInitializer=eS(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=_$(t.pointwiseRegularizer),this.pointwiseConstraint=VS(t.pointwiseConstraint)}build(e){if(e=sS(e),e.length<this.rank+2)throw new oI(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new oI(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let o=0;o<this.rank;++o)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new hS({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Li((()=>{let t;if(e=rS(e),1===this.rank)throw new iI("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=$l(e,[0,2,3,1])),t=ig(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=NN(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=$l(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e["rank"],delete e["kernelInitializer"],delete e["kernelRegularizer"],delete e["kernelConstraint"],e["depthwiseInitializer"]=QN(this.depthwiseInitializer),e["pointwiseInitializer"]=QN(this.pointwiseInitializer),e["depthwiseRegularizer"]=A$(this.depthwiseRegularizer),e["pointwiseRegularizer"]=A$(this.pointwiseRegularizer),e["depthwiseConstraint"]=BS(this.depthwiseConstraint),e["pointwiseConstraint"]=BS(this.pointwiseConstraint),e}}Q$.className="SeparableConv";class eE extends Q${constructor(e){super(2,e)}}eE.className="SeparableConv2D",vu(eE);class tE extends K${constructor(e){super(1,e),tE.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e["rank"],delete e["dataFormat"],e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!CI(e.kernelSize,"number",1,1))throw new oI(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}tE.className="Conv1D",vu(tE);class nE extends gS{constructor(e){super(e),"number"===typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"===typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Li((()=>{if(e=rS(e),"channelsLast"===this.dataFormat){const t=mN(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return mN(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=mN(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return mN(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}nE.className="Cropping2D",vu(nE);class rE extends gS{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,VI(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,UI(this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Li((()=>{let t=rS(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=$l(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?Ox.resizeNearestNeighbor(t,[e,r]):Ox.resizeBilinear(t,[e,r]);return $l(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?Ox.resizeNearestNeighbor(t,[e,r]):Ox.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function sE(e,t,n=[1,1],r="valid",s,a){return Li((()=>{null==s&&(s=iN()),VI(s);let o=V$(e,s);if(4!==e.rank)throw new oI(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new oI(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=Fp(o,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(o=$l(o,[0,3,1,2])),o}))}rE.className="UpSampling2D",vu(rE);class aE extends q${constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=eS(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=VS(e.depthwiseConstraint),this.depthwiseRegularizer=_$(e.depthwiseRegularizer)}build(e){if(e=sS(e),e.length<4)throw new oI(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new oI(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Li((()=>{e=rS(e);let t=sE(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=NN(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=sS(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=B$(t,this.kernelSize[0],this.padding,this.strides[0]),a=B$(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e["depthMultiplier"]=this.depthMultiplier,e["depthwiseInitializer"]=QN(this.depthwiseInitializer),e["depthwiseRegularizer"]=A$(this.depthwiseRegularizer),e["depthwiseConstraint"]=BS(this.depthwiseRegularizer),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function oE(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new oI("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return t=s(t),n=s(n),{inputs:e,initialState:t,constants:n}}function iE(e,t,n,r=!1,s,a,o=!1,i=!1){return Li((()=>{const u=t.shape.length;if(u<3)throw new oI(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(sN(2,u));if(t=$l(t,l),null!=a)throw new iI("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&(s=Ni(Ni(s,"bool"),"float32"),s.rank===u-1&&(s=wd(s,-1)),s=$l(s,l)),r&&(t=jm(t,0),null!=s&&(s=jm(s,0)));const c=[];let h,p=n;const d=t.shape[0],f=uy(t);let m,g;null!=s&&(m=uy(s));for(let t=0;t<d;++t){const n=f[t],r=Li((()=>e(n,p)));if(null==s)h=r[0],p=r[1];else{const e=Li((()=>{const e=m[t],n=$u(Kf(e),e),s=Yi(ru(r[0],e),ru(p[0],n)),a=p.map(((t,s)=>Yi(ru(r[1][s],e),ru(t,n))));return{output:s,newStates:a}}));h=e.output,p=e.newStates}i&&c.push(h)}if(i){const e=1;g=Wg(c,e)}return[h,g,p]}))}aE.className="DepthwiseConv2D",vu(aE);class uE extends gS{constructor(e){let t;if(super(e),null==e.cell)throw new oI("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new gE({cells:e.cell}):e.cell,null==t.stateSize)throw new oI("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new hS({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return sN(0,e).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){tS(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return Li((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){const t=null;if(null!=this.numConstants)throw new iI("Constants support is not implemented in RNN yet.");tS(e)&&(e=e[0]);const n=this.stateful?e[0]:null,r=e.slice(2);this.inputSpec[0]=new hS({shape:[n,null,...r]});const s=[e[0]].concat(e.slice(2));if(null!=t)throw new iI("Constants support is not implemented in RNN yet.");let a;if(this.cell.build(s),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!he(this.stateSpec.map((e=>e.shape[e.shape.length-1])),a))throw new oI(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map((e=>new hS({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Li((()=>{if(!this.stateful)throw new sI("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new oI("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Af([n,e]))):this.states_=[Af([n,this.cell.stateSize])];else if(null==e)zi(this.states_),null!=this.keptStates&&(zi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Af([n,e]))):this.states_[0]=Af([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new oI(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):zi(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,s];if(!he(r.shape,a))throw new oI(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>Pi(e.clone())))}))}apply(e,t){let n=null==t?null:t["initialState"],r=null==t?null:t["constants"];null==t&&(t={});const s=oE(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],o=[];if(null!=n){t["initialState"]=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new hS({shape:e.shape}));o=o.concat(this.stateSpec)}null!=r&&(t["constants"]=r,a=a.concat(r),this.numConstants=r.length);const i=a[0]instanceof pS;if(i){const n=[e].concat(a),r=this.inputSpec.concat(o),s=this.inputSpec;this.inputSpec=r;const i=super.apply(n,t);return this.inputSpec=s,i}return super.apply(e,t)}call(e,t){return Li((()=>{const n=null==t?null:t["mask"],r=null==t?null:t["training"];let s=null==t?null:t["initialState"];e=rS(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new oI(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:r},i=(e,t)=>{const n=this.cell.call([e].concat(t),o);return[n[0],n.slice(1)]},u=iE(i,e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=u[0],c=u[1],h=u[2];this.stateful&&this.resetStates(h,r);const p=this.returnSequences?c:l;return this.returnState?[p].concat(h):p}))}getInitialState(e){return Li((()=>{let t=Af(e.shape);return t=pd(t,[1,2]),t=lN(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?bN(t,[1,e]):t)):this.cell.stateSize>1?[bN(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t["numConstants"]=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===uE.className&&(t["cell"]={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const r=t["cell"],s=vT(r,n);return new e(Object.assign(t,{cell:s}))}}uE.className="RNN",vu(uE);class lE extends gS{}class cE extends lE{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,$I(this.units,"units"),this.activation=I$(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=eS(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=eS(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=eS(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=_$(e.kernelRegularizer),this.recurrentRegularizer=_$(e.recurrentRegularizer),this.biasRegularizer=_$(e.biasRegularizer),this.kernelConstraint=VS(e.kernelConstraint),this.recurrentConstraint=VS(e.recurrentConstraint),this.biasConstraint=VS(e.biasConstraint),this.dropout=nN([1,rN([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=nN([1,rN([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=sS(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Li((()=>{if(2!==e.length)throw new oI(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t["training"]&&t["training"];let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=yE({ones:()=>Kf(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=yE({ones:()=>Kf(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,o=this.recurrentDropoutMask;s=vN(null!=a?ru(e,a):e,this.kernel.read()),null!=this.bias&&(s=NN(s,this.bias.read())),null!=o&&(n=ru(n,o));let i=Yi(s,vN(n,this.recurrentKernel.read()));return null!=this.activation&&(i=this.activation.apply(i)),[i,i]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:w$(this.activation),useBias:this.useBias,kernelInitializer:QN(this.kernelInitializer),recurrentInitializer:QN(this.recurrentInitializer),biasInitializer:QN(this.biasInitializer),kernelRegularizer:A$(this.kernelRegularizer),recurrentRegularizer:A$(this.recurrentRegularizer),biasRegularizer:A$(this.biasRegularizer),activityRegularizer:A$(this.activityRegularizer),kernelConstraint:BS(this.kernelConstraint),recurrentConstraint:BS(this.recurrentConstraint),biasConstraint:BS(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}cE.className="SimpleRNNCell",vu(cE);class hE extends uE{constructor(e){e.cell=new cE(e),super(e)}call(e,t){return Li((()=>{null!=this.cell.dropoutMask&&(zi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(zi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t["mask"],r=null==t?null:t["training"],s=null==t?null:t["initialState"];return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}hE.className="SimpleRNN",vu(hE);class pE extends lE{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new oI("GRUCell does not support reset_after parameter set to true.");this.units=e.units,$I(this.units,"units"),this.activation=I$(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=I$(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=eS(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=eS(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=eS(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=_$(e.kernelRegularizer),this.recurrentRegularizer=_$(e.recurrentRegularizer),this.biasRegularizer=_$(e.biasRegularizer),this.kernelConstraint=VS(e.kernelConstraint),this.recurrentConstraint=VS(e.recurrentConstraint),this.biasConstraint=VS(e.biasConstraint),this.dropout=nN([1,rN([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=nN([1,rN([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=sS(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Li((()=>{if(2!==e.length)throw new oI(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t["training"]&&t["training"];let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=yE({ones:()=>Kf(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=yE({ones:()=>Kf(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let o,i,u;0<this.dropout&&this.dropout<1&&(e=ru(e,s[0]));let l=vN(e,this.kernel.read());this.useBias&&(l=NN(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=ru(r,a[0]));const c=this.recurrentKernel.read(),[h,p]=Og(c,[2*this.units,this.units],c.rank-1),d=vN(r,h),[f,m,g]=Og(l,3,l.rank-1),[y,b]=Og(d,2,d.rank-1);o=this.recurrentActivation.apply(Yi(f,y)),i=this.recurrentActivation.apply(Yi(m,b));const x=vN(ru(i,r),p);u=this.activation.apply(Yi(g,x));const v=Yi(ru(o,r),ru(Yi(1,Nl(o)),u));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:w$(this.activation),recurrentActivation:w$(this.recurrentActivation),useBias:this.useBias,kernelInitializer:QN(this.kernelInitializer),recurrentInitializer:QN(this.recurrentInitializer),biasInitializer:QN(this.biasInitializer),kernelRegularizer:A$(this.kernelRegularizer),recurrentRegularizer:A$(this.recurrentRegularizer),biasRegularizer:A$(this.biasRegularizer),activityRegularizer:A$(this.activityRegularizer),kernelConstraint:BS(this.kernelConstraint),recurrentConstraint:BS(this.recurrentConstraint),biasConstraint:BS(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}pE.className="GRUCell",vu(pE);class dE extends uE{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new pE(e),super(e)}call(e,t){return Li((()=>{null!=this.cell.dropoutMask&&(zi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(zi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t["mask"],r=null==t?null:t["training"],s=null==t?null:t["initialState"];return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t["implmentation"]&&(t["implementation"]=1),new e(t)}}dE.className="GRU",vu(dE);class fE extends lE{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,$I(this.units,"units"),this.activation=I$(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=I$(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=eS(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=eS(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=eS(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=_$(e.kernelRegularizer),this.recurrentRegularizer=_$(e.recurrentRegularizer),this.biasRegularizer=_$(e.biasRegularizer),this.kernelConstraint=VS(e.kernelConstraint),this.recurrentConstraint=VS(e.recurrentConstraint),this.biasConstraint=VS(e.biasConstraint),this.dropout=nN([1,rN([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=nN([1,rN([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=sS(e);const n=e[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new(t=class extends FN{apply(t,r){const s=e.apply([n]),a=(new MN).apply([n]),o=e.apply([2*n]);return yN(yN(s,a),o)}},t.className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Li((()=>{const n=null!=t["training"]&&t["training"];if(3!==e.length)throw new oI(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=yE({ones:()=>Kf(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=yE({ones:()=>Kf(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,o=this.recurrentDropoutMask;let i,u,l,c;0<this.dropout&&this.dropout<1&&(e=ru(e,a[0]));let h=vN(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=ru(r,o[0])),h=Yi(h,vN(r,this.recurrentKernel.read())),this.useBias&&(h=NN(h,this.bias.read()));const[p,d,f,m]=Og(h,4,h.rank-1);i=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(d),l=Yi(ru(u,s),ru(i,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=ru(c,this.activation.apply(l));return[g,g,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:w$(this.activation),recurrentActivation:w$(this.recurrentActivation),useBias:this.useBias,kernelInitializer:QN(this.kernelInitializer),recurrentInitializer:QN(this.recurrentInitializer),biasInitializer:QN(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:A$(this.kernelRegularizer),recurrentRegularizer:A$(this.recurrentRegularizer),biasRegularizer:A$(this.biasRegularizer),activityRegularizer:A$(this.activityRegularizer),kernelConstraint:BS(this.kernelConstraint),recurrentConstraint:BS(this.recurrentConstraint),biasConstraint:BS(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}fE.className="LSTMCell",vu(fE);class mE extends uE{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new fE(e),super(e)}call(e,t){return Li((()=>{null!=this.cell.dropoutMask&&(zi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(zi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t["mask"],r=null==t?null:t["training"],s=null==t?null:t["initialState"];return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t["implmentation"]&&(t["implementation"]=1),new e(t)}}mE.className="LSTM",vu(mE);class gE extends lE{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Li((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let o=0;o<this.cells.length;++o){const i=this.cells[o];n=r[o],a=0===o?[e[0]].concat(n):[a[0]].concat(n),a=i.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;tS(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{KI(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t=e=>({className:e.getClassName(),config:e.getConfig()}),n=this.cells.map(t),r={cells:n};return Object.assign(Object.assign({},e),r)}static fromConfig(e,t,n={}){const r=[];for(const s of t["cells"])r.push(vT(s,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return lS(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}cS(t)}}function yE(e){const{ones:t,rate:n,training:r=!1,count:s=1,dropoutFunc:a}=e,o=()=>null!=a?a(t(),n):CN(t(),n),i=()=>EN(o,t,r);if(!s||s<=1)return Pi(i().clone());const u=Array(s).fill(void 0).map(i);return u.map((e=>Pi(e.clone())))}gE.className="StackedRNNCells",vu(gE);
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
var bE=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n};class xE extends uE{constructor(e){if(e.unroll)throw new iI("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new iI("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new hS({ndim:5})]}call(e,t){return Li((()=>{if(null!=this.cell.dropoutMask&&(zi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(zi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t["constants"])throw new oI("ConvRNN2D cell does not support constants");const n=null==t?null:t["mask"],r=null==t?null:t["training"],s=null==t?null:t["initialState"];return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Li((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)],a=Af(s);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e,t=!1){Li((()=>{if(!this.stateful)throw new sI("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)],a=n[0];if(null==a)throw new oI("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Af(s))):this.states_=[Af(s)];else if(null==e)zi(this.states_),null!=this.keptStates&&(zi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Af(s))):this.states_[0]=Af(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new oI(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):zi(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!he(n.shape,r))throw new oI(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>Pi(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:o}=this.cell,i="channelsFirst"===t,u=e[i?3:2],l=e[i?4:3],c=B$(u,r[0],s,a[0],o[0]),h=B$(l,r[1],s,a[1],o[1]),p=[...e.slice(0,2),...i?[n,c,h]:[c,h,n]];return p}}xE.className="ConvRNN2D";class vE extends fE{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:o}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,$I(this.filters,"filters"),this.kernelSize=P$(n,2,"kernelSize"),this.kernelSize.forEach((e=>$I(e,"kernelSize"))),this.strides=P$(r||1,2,"strides"),this.strides.forEach((e=>$I(e,"strides"))),this.padding=s||"valid",GI(this.padding),this.dataFormat=a||"channelsLast",VI(this.dataFormat),this.dilationRate=P$(o||1,2,"dilationRate"),this.dilationRate.forEach((e=>$I(e,"dilationRate")))}build(e){var t;e=sS(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new oI(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=4,a=this.kernelSize.concat([r,this.filters*s]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const o=this.kernelSize.concat([this.filters,this.filters*s]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new(t=class extends FN{apply(e,t){const s=n.apply([r]),a=Rf([r]),o=n.apply([2*r]);return gN([s,a,o])}},t.className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*s],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Li((()=>{if(3!==e.length)throw new oI(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t["training"]||!1,r=e[0],s=e[1],a=e[2],o=4;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=yE({ones:()=>Kf(r),rate:this.dropout,training:n,count:o,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,u=(e,t,n)=>t&&t[n]?ru(t[n],e):e;let l=u(r,i,0),c=u(r,i,1),h=u(r,i,2),p=u(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=yE({ones:()=>Kf(s),rate:this.recurrentDropout,training:n,count:o,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let f=u(s,d,0),m=u(s,d,1),g=u(s,d,2),y=u(s,d,3);const b=3,[x,v,w,k]=Og(this.kernel.read(),o,b),[I,N,S,T]=this.useBias?Og(this.bias.read(),o):[null,null,null,null];l=this.inputConv(l,x,I,this.padding),c=this.inputConv(c,v,N,this.padding),h=this.inputConv(h,w,S,this.padding),p=this.inputConv(p,k,T,this.padding);const[C,$,E,A]=Og(this.recurrentKernel.read(),o,b);f=this.recurrentConv(f,C),m=this.recurrentConv(m,$),g=this.recurrentConv(g,E),y=this.recurrentConv(y,A);const R=this.recurrentActivation.apply(Yi(l,f)),_=this.recurrentActivation.apply(Yi(c,m)),O=Yi(ru(_,a),ru(R,this.activation.apply(Yi(h,g)))),F=ru(this.recurrentActivation.apply(Yi(p,y)),this.activation.apply(O));return[F,F,O]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=bE(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,r){const s=up(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?NN(s,n,this.dataFormat):s}recurrentConv(e,t){const n=1;return up(e,t,n,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}vE.className="ConvLSTM2DCell",vu(vE);class wE extends xE{constructor(e){const t=new vE(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}wE.className="ConvLSTM2D",vu(wE);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class kE extends gS{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?t[r]:this.noiseShape[r]);return n}call(e,t){return Li((()=>{this.invokeCallHook(e,t);const n=rS(e);if(0<this.rate&&this.rate<1){const e=null!=t["training"]&&t["training"],r=this.getNoiseShape(n),s=EN((()=>CN(n,this.rate,r,this.seed)),(()=>n),e);return s}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}kE.className="Dropout",vu(kE);class IE extends kE{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}IE.className="SpatialDropout1D",vu(IE);class NE extends gS{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,$I(this.units,"units"),this.activation=I$(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=eS(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=eS(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=VS(e.kernelConstraint),this.biasConstraint=VS(e.biasConstraint),this.kernelRegularizer=_$(e.kernelRegularizer),this.biasRegularizer=_$(e.biasRegularizer),this.activityRegularizer=_$(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=sS(e);const t=e[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=sS(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return Li((()=>{this.invokeCallHook(e,t);const n=rS(e),r=RI(this.activation.getClassName());let s;return null!=r?s=vN(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=vN(n,this.kernel.read()),null!=this.bias&&(s=NN(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:w$(this.activation),useBias:this.useBias,kernelInitializer:QN(this.kernelInitializer),biasInitializer:QN(this.biasInitializer),kernelRegularizer:A$(this.kernelRegularizer),biasRegularizer:A$(this.biasRegularizer),activityRegularizer:A$(this.activityRegularizer),kernelConstraint:BS(this.kernelConstraint),biasConstraint:BS(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}NE.className="Dense",vu(NE);class SE extends gS{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=sS(e);for(const t of e.slice(1))if(null==t)throw new oI(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],tN(e,1)]}call(e,t){return Li((()=>{this.invokeCallHook(e,t);let n=rS(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=$l(n,e)}return pN(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e["dataFormat"]=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}SE.className="Flatten",vu(SE);class TE extends gS{constructor(e){super(e),this.supportsMasking=!0,this.activation=I$(e.activation)}call(e,t){return Li((()=>{this.invokeCallHook(e,t);const n=rS(e);return this.activation.apply(n)}))}getConfig(){const e={activation:w$(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}TE.className="Activation",vu(TE);class CE extends gS{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Li((()=>(e=rS(e),cN(e,this.n))))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}CE.className="RepeatVector",vu(CE);class $E extends gS{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let i=0;i<r.length;++i){const e=r[i];if(this.isUnknown(e)){if(null!==a)throw new oI("Can only specifiy one unknown dimension.");a=i}else s*=e}const o=tN(e);if(null!==a){if(0===s||o%s!==0)throw new oI(n);r[a]=o/s}else if(o!==s)throw new oI(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Li((()=>{this.invokeCallHook(e,t);const n=rS(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return yh(n,s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}$E.className="Reshape",vu($E);class EE extends gS{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=sN(1,e.dims.length+1);if(!he(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new hS({ndim:this.dims.length+1})]}computeOutputShape(e){e=sS(e);const t=e.slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return $l(rS(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}EE.className="Permute",vu(EE);class AE extends gS{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=rS(e),r=-1;return Mc(Hf(n,this.maskValue),r)}call(e,t){return Li((()=>{this.invokeCallHook(e,t);const n=rS(e),r=-1,s=!0,a=Mc(Hf(n,this.maskValue),r,s),o=ru(n,Ni(a,n.dtype));return o}))}}AE.className="Masking",vu(AE);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class RE extends gS{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(mI(e.inputLength))}this.inputDim=e.inputDim,$I(this.inputDim,"inputDim"),this.outputDim=e.outputDim,$I(this.outputDim,"outputDim"),this.embeddingsInitializer=eS(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=_$(e.embeddingsRegularizer),this.activityRegularizer=_$(e.activityRegularizer),this.embeddingsConstraint=VS(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Li((()=>this.maskZero?(e=rS(e),Hf(e,lu(e))):null))}computeOutputShape(e){if(e=sS(e),null==this.inputLength)return[...e,this.outputDim];const t=mI(this.inputLength);if(t.length!==e.length-1)throw new oI(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new oI(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Li((()=>{this.invokeCallHook(e,t);let n=rS(e);"int32"!==n.dtype&&(n=uN(n,"int32"));const r=wN(this.embeddings.read(),yh(n,[n.size]));return yh(r,sS(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:QN(this.embeddingsInitializer),embeddingsRegularizer:A$(this.embeddingsRegularizer),activityRegularizer:A$(this.activityRegularizer),embeddingsConstraint:BS(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}RE.className="Embedding",vu(RE);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class _E extends gS{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new iI}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new oI("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[sS(e)]),e.length<2)throw new oI(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const s of e)null!=s&&null!==s[0]&&t.push(s[0]);if(t=NI(t),t.length>1)throw new oI(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let s=1;s<e.length;++s){const t=null==e[s]?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===NI(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Li((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=rN(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=lN(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const a of e){const e=a.rank;if(null==e){const e=a.shape,r=e[0],s=e.slice(1).concat([r]);let o=yh(a,[r].concat(tN(e.slice(1))));o=$l(o,[1,0]),o=yh(o,s),t.push(o),n=!0}else if(e>1){const r=sN(1,e).concat([0]);t.push($l(a,r)),n=!0}else t.push(a)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e.length,n=e[t-1],s=[n].concat(e.slice(0,e.length-1));r=yh($l(yh(r,[-1,n]),[1,0]),s)}else if(s>1){const e=[s-1].concat(sN(0,s-1));r=$l(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const n=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const r of e)null!=r&&null!==r[0]&&n.push(r[0]);return n=NI(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Li((()=>{if(null==t)return null;if(!Array.isArray(t))throw new oI("`mask` should be an Array");if(!Array.isArray(e))throw new oI("`inputs` should be an Array");if(t.length!==e.length)throw new oI(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;t=t.map((e=>null==e?e:wd(e,0)));let n=t[0];for(let e=1;e<t.length-1;++e)n=hf(n,t[e]);return n}))}}class OE extends _E{constructor(e){super(e)}mergeFunction(e){return Li((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Yi(t,e[n]);return t}))}}OE.className="Add",vu(OE);class FE extends _E{constructor(e){super(e)}mergeFunction(e){return Li((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ru(t,e[n]);return t}))}}FE.className="Multiply",vu(FE);class DE extends _E{constructor(e){super(e)}mergeFunction(e){return Li((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Yi(t,e[n]);return ru(1/e.length,t)}))}}DE.className="Average",vu(DE);class ME extends _E{constructor(e){super(e)}mergeFunction(e){return Li((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Mu(t,e[n]);return t}))}}ME.className="Maximum",vu(ME);class LE extends _E{constructor(e){super(e)}mergeFunction(e){return Li((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Ff(t,e[n]);return t}))}}LE.className="Minimum",vu(LE);class zE extends _E{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new oI("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const r of e)if(null!=r){t=!1;break}if(t)return;const n=[];for(let r=0;r<e.length;++r){const t=e[r].slice();t.splice(this.axis,1);let s=!1;for(const e of n)if(he(e,t)){s=!0;break}s||n.push(t)}if(n.length>1)throw new oI("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Li((()=>gN(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new oI("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const s of t.slice(1)){if(null==n[r]||null==s[r]){n[r]=null;break}n[r]+=s[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new oI("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new oI("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new oI(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Li((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let a=0;a<e.length;++a)null==t[a]?r.push(Ni(Kf(e[a]),"bool")):t[a].rank<e[a].rank?r.push(wd(t[a],-1)):r.push(t[a]);const s=Ih(r,this.axis);return Fc(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function PE(e,t){while(e<0)e+=t;return e}function BE(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new iI("batchDot is not implemented for tensors of 4D or higher rank yet");if(oe(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),oe(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new iI("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return Li((()=>{let n,o;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=yh(t,t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=yh(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)o=a[0]===a[1]?pd(ru(e,t),a[0]):pd(ru($l(e,[1,0]),t),a[1]);else{const n=a[0]!==e.shape.length-1,r=a[1]===t.shape.length-1;o=bl(e,t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);o=Pg(o,t)}return 1===o.shape.length&&(o=wd(o,1)),o}))}zE.className="Concatenate",vu(zE);class WE extends _E{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){oe(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new iI("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new oI(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new oI(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>PE(t,e[n].shape.length))):[PE(this.axes,n.shape.length),PE(this.axes,r.shape.length)],this.normalize&&(n=wT(n,t[0]),r=wT(r,t[1])),BE(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[PE(this.axes,e.length),PE(this.axes,t.length)],n}computeOutputShape(e){oe(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new iI("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}WE.className="Dot",vu(WE);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class VE extends gS{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Li((()=>{this.invokeCallHook(e,t);const n=rS(e),r=()=>Yi(xN(n.shape,0,this.stddev),n),s=EN(r,(()=>n),t["training"]||!1);return s}))}}VE.className="GaussianNoise",vu(VE);class UE extends gS{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Li((()=>{this.invokeCallHook(e,t);const n=rS(e);if(this.rate>0&&this.rate<1){const e=()=>{const e=Math.sqrt(this.rate/(1-this.rate));return ru(n,xN(n.shape,1,e))};return EN(e,(()=>n),t["training"]||!1)}return n}))}}UE.className="GaussianDropout",vu(UE);class GE extends gS{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||rS(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Li((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),r=()=>{const t=rS(e),r=1.6732632423543772,s=1.0507009873554805,a=-r*s;let o=Dd(Mm(n),this.rate);o=uN(o,"float32");const i=((1-this.rate)*(1+this.rate*a**2))**-.5,u=-i*a*this.rate,l=Yi(ru(t,o),ru(Yi(o,-1),a));return Yi(ru(l,i),u)};return EN(r,(()=>rS(e)),t["training"]||!1)}return e}))}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function jE(e,t,n,r,s,a=.001){let o;if(2===e.rank)o=zh(e,t,n,r,s,a);else if(3===e.rank)o=Bh(e,t,n,r,s,a);else{if(4!==e.rank)throw new iI(`batchNormalization is not implemented for array of rank ${e.rank} yet`);o=Vh(e,t,n,r,s,a)}return o}function HE(e,t,n,r,s=.001){return Li((()=>{const a=Bf(e,r),o=a.mean,i=a.variance,u=jE(e,o,i,n,t,s);return[u,o,i]}))}function qE(e,t,n,r,s=.001){return Li((()=>{const a=Bf(e,r),o=a.mean,i=a.variance,u=[];for(const t of sN(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=yh(o,u),c=yh(i,u),h=null==t?null:yh(t,u),p=null==n?null:yh(n,u),d=jE(e,l,c,p,h,s);return[d,o,i]}))}function KE(e,t,n,r,s=.001){return he(r.slice().sort(),sN(0,e.rank-1))?HE(e,t,n,r,s):qE(e,t,n,r,s)}GE.className="AlphaDropout",vu(GE);class XE extends gS{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=eS(e.betaInitializer||"zeros"),this.gammaInitializer=eS(e.gammaInitializer||"ones"),this.movingMeanInitializer=eS(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=eS(e.movingVarianceInitializer||"ones"),this.betaConstraint=VS(e.betaConstraint),this.gammaConstraint=VS(e.gammaConstraint),this.betaRegularizer=_$(e.betaRegularizer),this.gammaRegularizer=_$(e.gammaRegularizer)}build(e){e=sS(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new oI(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new hS({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Li((()=>{const n=null!=t["training"]&&t["training"],r=rS(e),s=r.shape,a=s.length,o=sN(0,a),i=this.axis>=0?this.axis:this.axis+a;o.splice(i,1);const u=hI(1,a);u[i]=s[i];const l=o.slice();l.sort();const c=!he(l,sN(0,a).slice(0,a-1)),h=()=>{if(c){const e=yh(this.movingMean.read(),u),t=yh(this.movingVariance.read(),u),n=this.center?yh(this.beta.read(),u):null,s=this.scale?yh(this.gamma.read(),u):null;return jE(r,e,t,n,s,this.epsilon)}return jE(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)};if(!n)return h();const[p,d,f]=KE(r,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(e,t,n)=>{Li((()=>{const r=1-n,s=e.read(),a=ru($u(s,t),r);e.write($u(s,a))}))},g=()=>{m(this.movingMean,d,this.momentum),m(this.movingVariance,f,this.momentum)};return g(),p}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:QN(this.betaInitializer),gammaInitializer:QN(this.gammaInitializer),movingMeanInitializer:QN(this.movingMeanInitializer),movingVarianceInitializer:QN(this.movingVarianceInitializer),betaRegularizer:A$(this.betaRegularizer),gammaRegularizer:A$(this.gammaRegularizer),betaConstraint:BS(this.betaConstraint),gammaConstraint:BS(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}XE.className="BatchNormalization",vu(XE);class JE extends gS{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=eS(e.betaInitializer||"zeros"),this.gammaInitializer=eS(e.gammaInitializer||"ones"),this.betaRegularizer=_$(e.betaRegularizer),this.gammaRegularizer=_$(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=sS(e);const t=e.length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=t);for(const s of this.axis)if(s<0||s>=t)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==NI(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t])),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const n=rS(e),r=n.shape,s=r.length;return Li((()=>{const e=!0;let{mean:t,variance:a}=Bf(n,this.axis,e);const o=hI(1,s);for(const n of this.axis)o[n]=r[n];const i=e=>null!=e&&e.shape.length!==s?yh(e,o):e;let u=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null;const c=[],h=[];for(let n=0;n<s;++n)-1!==this.axis.indexOf(n)?(c.push(r[n]),h.push(1)):(c.push(1),h.push(r[n]));return t=Sd(t,c),a=Sd(a,c),null!=u&&(u=Sd(u,h)),null!=l&&(l=Sd(l,h)),jE(n,t,a,l,u,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:QN(this.betaInitializer),gammaInitializer:QN(this.gammaInitializer),betaRegularizer:A$(this.betaRegularizer),gammaRegularizer:A$(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}function YE(e,t,n){return Li((()=>{if(4!==e.rank)throw new oI(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new oI("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n=iN()),"channelsLast"!==n&&"channelsFirst"!==n)throw new oI(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return r="channelsFirst"===n?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],Zf(e,r)}))}JE.className="LayerNormalization",vu(JE);class ZE extends gS{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?iN():e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new oI(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new oI(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new oI(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new hS({ndim:4})]}computeOutputShape(e){let t,n;return e=sS(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Li((()=>YE(rS(e),this.padding,this.dataFormat)))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function QE(e,t,n,r,s,a){return Li((()=>{let o;VI(s),jI(a),GI(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s=iN()),null==a&&(a="max"),e=V$(e,s);const i="same"===r?"same":"valid";return o="max"===a?If(e,t,n,i):xh(e,t,n,i),"channelsFirst"===s&&(o=$l(o,[0,3,1,2])),o}))}function eA(e,t,n,r,s,a){return Li((()=>{let o;VI(s),jI(a),GI(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s=iN()),null==a&&(a="max"),e=U$(e,s);const i="same"===r?"same":"valid";return o="max"===a?Sf(e,t,n,i):wh(e,t,n,i),"channelsFirst"===s&&(o=$l(o,[0,4,1,2,3])),o}))}ZE.className="ZeroPadding2D",vu(ZE);class tA extends gS{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new oI(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if($I(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new oI(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}$I(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,GI(this.padding),this.inputSpec=[new hS({ndim:3})]}computeOutputShape(e){e=sS(e);const t=B$(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Li((()=>{this.invokeCallHook(e,t),e=lN(rS(e),2);const n=this.poolingFunction(rS(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Pg(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class nA extends tA{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return VI(s),GI(r),QE(e,t,n,r,s,"max")}}nA.className="MaxPooling1D",vu(nA);class rA extends tA{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return VI(s),GI(r),QE(e,t,n,r,s,"avg")}}rA.className="AveragePooling1D",vu(rA);class sA extends gS{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new oI(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];$I(this.poolSize,"poolSize"),$I(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,VI(this.dataFormat),GI(this.padding),this.inputSpec=[new hS({ndim:4})]}computeOutputShape(e){e=sS(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=B$(t,this.poolSize[0],this.padding,this.strides[0]),n=B$(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Li((()=>(this.invokeCallHook(e,t),this.poolingFunction(rS(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class aA extends sA{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return VI(s),GI(r),QE(e,t,n,r,s,"max")}}aA.className="MaxPooling2D",vu(aA);class oA extends sA{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return VI(s),GI(r),QE(e,t,n,r,s,"avg")}}oA.className="AveragePooling2D",vu(oA);class iA extends gS{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new oI(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];$I(this.poolSize,"poolSize"),$I(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,VI(this.dataFormat),GI(this.padding),this.inputSpec=[new hS({ndim:5})]}computeOutputShape(e){e=sS(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=B$(t,this.poolSize[0],this.padding,this.strides[0]),n=B$(n,this.poolSize[1],this.padding,this.strides[1]),r=B$(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Li((()=>(this.invokeCallHook(e,t),this.poolingFunction(rS(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class uA extends iA{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return VI(s),GI(r),eA(e,t,n,r,s,"max")}}uA.className="MaxPooling3D",vu(uA);class lA extends iA{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return VI(s),GI(r),eA(e,t,n,r,s,"avg")}}lA.className="AveragePooling3D",vu(lA);class cA extends gS{constructor(e){super(e),this.inputSpec=[new hS({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new iI}}class hA extends cA{constructor(e){super(e||{})}call(e,t){return Li((()=>{const t=rS(e);return Ef(t,1)}))}}hA.className="GlobalAveragePooling1D",vu(hA);class pA extends cA{constructor(e){super(e||{})}call(e,t){return Li((()=>{const t=rS(e);return ud(t,1)}))}}pA.className="GlobalMaxPooling1D",vu(pA);class dA extends gS{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,VI(this.dataFormat),this.inputSpec=[new hS({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new iI}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class fA extends dA{call(e,t){return Li((()=>{const t=rS(e);return"channelsLast"===this.dataFormat?Ef(t,[1,2]):Ef(t,[2,3])}))}}fA.className="GlobalAveragePooling2D",vu(fA);class mA extends dA{call(e,t){return Li((()=>{const t=rS(e);return"channelsLast"===this.dataFormat?ud(t,[1,2]):ud(t,[2,3])}))}}mA.className="GlobalMaxPooling2D",vu(mA);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class gA extends gS{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=t["layer"],s=vT(r,n);delete t["layer"];const a={layer:s};return Object.assign(a,t),new e(a)}}class yA extends gA{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=sS(e),e.length<3)throw new oI(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=sS(e);const t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Li((()=>{e=rS(e);const n=(e,n)=>{const r=rS(this.layer.call(e,t));return[r,[]]},r=iE(n,e,[],!1,null,null,!1,!0),s=r[1];return s}))}}function bA(e){TI(BI,"BidirectionalMergeMode",e)}yA.className="TimeDistributed",vu(yA);const xA="concat";class vA extends gA{constructor(e){super(e);const t=e.layer.getConfig(),n={};n["className"]=e.layer.getClassName(),n["config"]=t,this.forwardLayer=vT(n),t["goBackwards"]=!0!==t["goBackwards"];const r={};if(r["className"]=e.layer.getClassName(),r["config"]=t,this.backwardLayer=vT(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?xA:e.mergeMode,bA(this.mergeMode),e.weights)throw new iI("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),t=s[0]):t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):fI(n)}apply(e,t){let n=null==t?null:t["initialState"],r=null==t?null:t["constants"];null==t&&(t={});const s=oE(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],o=[];if(null!=n){const e=n.length;if(e%2>0)throw new oI("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t["initialState"]=n,a.push(...n);const r=n.map((e=>new hS({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),o.push(...r)}if(null!=r)throw new iI("Support for constants in Bidirectional layers is not implemented yet.");const i=a[0]instanceof pS;for(const u of a)if(u instanceof pS!==i)throw new oI("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[e].concat(a),r=this.inputSpec.concat(o),s=this.inputSpec;this.inputSpec=r;const i=super.apply(n,t);return this.inputSpec=s,i}return super.apply(e,t)}call(e,t){return Li((()=>{const n=t["initialState"];let r,s,a,o;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),o=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:o}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=jm(s,1)),"concat"===this.mergeMode?o=gN([r,s]):"sum"===this.mergeMode?o=Yi(r,s):"ave"===this.mergeMode?o=ru(.5,Yi(r,s)):"mul"===this.mergeMode?o=ru(r,s):null==this.mergeMode&&(o=[r,s]),this.returnState?null==this.mergeMode?o.concat(a):[o].concat(a):o}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){KI(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),KI(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states,t=e.map((e=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=vT(t["layer"]);if(delete t["layer"],null!=t["numConstants"])throw new iI("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r["layer"]=n,new e(r)}}vA.className="Bidirectional",vu(vA);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class wA extends gS{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Li((()=>(e=rS(e),"float32"!==e.dtype&&(e=uN(e,"float32")),Yi(ru(e,this.scale),this.offset))))}}wA.className="Rescaling",vu(wA);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const{resizeBilinear:kA,cropAndResize:IA}=Ox;class NA extends gS{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,s,a,o,i){return Li((()=>{let u,l=!1;const c=t/a,h=n/o,p=(r+t)/a,d=(s+n)/o,f=[c,h,p,d],m=[];3===e.rank?(l=!0,u=Wg([e])):u=e;for(let e=0;e<u.shape[0];e++)m.push(f);const g=ho(m,[m.length,4]),y=Lm(0,m.length,1,"int32"),b=[r,s],x=IA(u,g,y,b,"nearest");return uN(l?rS(uy(x)):x,i)}))}upsize(e,t,n,r){return Li((()=>{const s=kA(e,[t,n]);return uN(s,r)}))}call(e,t){return Li((()=>{const t=rS(e),n=t.dtype,r=t.shape,s=r[r.length-3],a=r[r.length-2];let o=0;s!==this.height&&(o=Math.floor((s-this.height)/2));let i=0;return a!==this.width&&(i=Math.floor((a-this.width)/2),0===i&&(i=1)),o>=0&&i>=0?this.centerCrop(t,o,i,this.height,this.width,s,a,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=sS(e);const t=e.length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function SA(e,t,n,r){let s=rS(e);if("int32"!==s.dtype&&(s=uN(s,"int32")),"int"===t)return s;const a=s.shape;if(0===s.rank&&(s=wd(s,-1)),"oneHot"===t&&1!==s.shape[s.shape.length-1]&&(s=wd(s,-1)),s.rank>2)throw new oI(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${a} which would result in output rank ${s.rank}.`);const o=["multiHot","oneHot"].includes(t),i=s;let u;if(u=Ap(i,"undefined"!==typeof r&&"count"===t?r:[],n,o),"tfIdf"!==t)return u;if(r)return ru(u,r);throw new oI("When outputMode is 'tfIdf', weights must be provided.")}NA.className="CenterCrop",vu(NA);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class TA extends gS{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=sS(e),null==e?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return Li((()=>{let n;if(e=rS(e),"int32"!==e.dtype&&(e=uN(e,"int32")),"undefined"!==typeof t["countWeights"]){if("count"!==this.outputMode)throw new oI(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t["countWeights"]}`);n=rS(t["countWeights"])}const r=ud(e),s=cd(e),a=Od(this.numTokens,r).bufferSync().get(0),o=Dd(s,0).bufferSync().get(0);if(!a||!o)throw new oI(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return SA(e,this.outputMode,this.numTokens,n)}))}}TA.className="CategoryEncoding",vu(TA);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const CA=["bilinear","nearest"],$A=new Set(CA);class EA extends gS{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!$A.has(e.interpolation))throw new oI(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){e=sS(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Li((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return Ox.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return Ox.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...$A]} are supported`)}))}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function AA(e){return new vS(e)}function RA(e){return new M$(e)}function _A(e){return new O$(e)}function OA(e){return new F$(e)}function FA(e){return new D$(e)}function DA(e){return new z$(e)}function MA(e){return new L$(e)}function LA(e){return new tE(e)}function zA(e){return new X$(e)}function PA(e){return new Y$(e)}function BA(e){return new J$(e)}function WA(e){return new Z$(e)}function VA(e){return new eE(e)}function UA(e){return new nE(e)}function GA(e){return new rE(e)}function jA(e){return new aE(e)}function HA(e){return new TE(e)}function qA(e){return new NE(e)}function KA(e){return new kE(e)}function XA(e){return new IE(e)}function JA(e){return new SE(e)}function YA(e){return new CE(e)}function ZA(e){return new $E(e)}function QA(e){return new EE(e)}function eR(e){return new RE(e)}function tR(e){return new OE(e)}function nR(e){return new DE(e)}function rR(e){return new zE(e)}function sR(e){return new ME(e)}function aR(e){return new LE(e)}function oR(e){return new FE(e)}function iR(e){return new WE(e)}function uR(e){return new XE(e)}function lR(e){return new JE(e)}function cR(e){return new ZE(e)}function hR(e){return new rA(e)}function pR(e){return hR(e)}function dR(e){return hR(e)}function fR(e){return new oA(e)}function mR(e){return fR(e)}function gR(e){return fR(e)}function yR(e){return new lA(e)}function bR(e){return yR(e)}function xR(e){return yR(e)}function vR(e){return new hA(e)}function wR(e){return new fA(e)}function kR(e){return new pA(e)}function IR(e){return new mA(e)}function NR(e){return new nA(e)}function SR(e){return new aA(e)}function TR(e){return new uA(e)}function CR(e){return new dE(e)}function $R(e){return new pE(e)}function ER(e){return new mE(e)}function AR(e){return new fE(e)}function RR(e){return new hE(e)}function _R(e){return new cE(e)}function OR(e){return new wE(e)}function FR(e){return new vE(e)}function DR(e){return new uE(e)}function MR(e){return new gE(e)}function LR(e){return new vA(e)}function zR(e){return new yA(e)}EA.className="Resizing",vu(EA);const PR=kR,BR=IR,WR=NR,VR=SR;function UR(e){return new VE(e)}function GR(e){return new UE(e)}function jR(e){return new GE(e)}function HR(e){return new AE(e)}function qR(e){return new wA(e)}function KR(e){return new NA(e)}function XR(e){return new EA(e)}function JR(e){return new TA(e)}function YR(e,t){return PT(e,t)}function ZR(e,t){return HT(e,t)}function QR(e,t){return qT(e,t)}function e_(e,t){return BT(e,t)}function t_(e,t){return eC(e,t)}function n_(e,t){return GT(e,t)}function r_(e,t){return jT(e,t)}function s_(e,t){return MT(e,t)}function a_(e,t){return IT(e,t)}function o_(e,t){return NT(e,t)}function i_(e,t){return NT(e,t)}function u_(e,t){return NT(e,t)}function l_(e,t){return kT(e,t)}function c_(e,t){return kT(e,t)}function h_(e,t){return kT(e,t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function p_(e){return new T$(e)}function d_(e){return C$(e)}function f_(e){return $$(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class m_ extends pT{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof XC))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function g_(e,t){return e<t}function y_(e,t){return e>t}class b_ extends m_{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new iI("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=g_:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=y_:this.monitorFunc=g_,this.monitorFunc===g_&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===g_?1/0:-1/0}async onEpochEnd(e,t){await uT(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}function x_(e){return new b_(e)}const v_={earlyStopping:x_},w_=Je();
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
var k_,I_;w_.registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e["DT_INVALID"]=0]="DT_INVALID",e[e["DT_FLOAT"]=1]="DT_FLOAT",e[e["DT_DOUBLE"]=2]="DT_DOUBLE",e[e["DT_INT32"]=3]="DT_INT32",e[e["DT_UINT8"]=4]="DT_UINT8",e[e["DT_INT16"]=5]="DT_INT16",e[e["DT_INT8"]=6]="DT_INT8",e[e["DT_STRING"]=7]="DT_STRING",e[e["DT_COMPLEX64"]=8]="DT_COMPLEX64",e[e["DT_INT64"]=9]="DT_INT64",e[e["DT_BOOL"]=10]="DT_BOOL",e[e["DT_QINT8"]=11]="DT_QINT8",e[e["DT_QUINT8"]=12]="DT_QUINT8",e[e["DT_QINT32"]=13]="DT_QINT32",e[e["DT_BFLOAT16"]=14]="DT_BFLOAT16",e[e["DT_QINT16"]=15]="DT_QINT16",e[e["DT_QUINT16"]=16]="DT_QUINT16",e[e["DT_UINT16"]=17]="DT_UINT16",e[e["DT_COMPLEX128"]=18]="DT_COMPLEX128",e[e["DT_HALF"]=19]="DT_HALF",e[e["DT_RESOURCE"]=20]="DT_RESOURCE",e[e["DT_VARIANT"]=21]="DT_VARIANT",e[e["DT_UINT32"]=22]="DT_UINT32",e[e["DT_UINT64"]=23]="DT_UINT64",e[e["DT_FLOAT_REF"]=101]="DT_FLOAT_REF",e[e["DT_DOUBLE_REF"]=102]="DT_DOUBLE_REF",e[e["DT_INT32_REF"]=103]="DT_INT32_REF",e[e["DT_UINT8_REF"]=104]="DT_UINT8_REF",e[e["DT_INT16_REF"]=105]="DT_INT16_REF",e[e["DT_INT8_REF"]=106]="DT_INT8_REF",e[e["DT_STRING_REF"]=107]="DT_STRING_REF",e[e["DT_COMPLEX64_REF"]=108]="DT_COMPLEX64_REF",e[e["DT_INT64_REF"]=109]="DT_INT64_REF",e[e["DT_BOOL_REF"]=110]="DT_BOOL_REF",e[e["DT_QINT8_REF"]=111]="DT_QINT8_REF",e[e["DT_QUINT8_REF"]=112]="DT_QUINT8_REF",e[e["DT_QINT32_REF"]=113]="DT_QINT32_REF",e[e["DT_BFLOAT16_REF"]=114]="DT_BFLOAT16_REF",e[e["DT_QINT16_REF"]=115]="DT_QINT16_REF",e[e["DT_QUINT16_REF"]=116]="DT_QUINT16_REF",e[e["DT_UINT16_REF"]=117]="DT_UINT16_REF",e[e["DT_COMPLEX128_REF"]=118]="DT_COMPLEX128_REF",e[e["DT_HALF_REF"]=119]="DT_HALF_REF",e[e["DT_RESOURCE_REF"]=120]="DT_RESOURCE_REF",e[e["DT_VARIANT_REF"]=121]="DT_VARIANT_REF",e[e["DT_UINT32_REF"]=122]="DT_UINT32_REF",e[e["DT_UINT64_REF"]=123]="DT_UINT64_REF"}(k_||(k_={})),function(e){let t;(function(e){e[e["LEGACY"]=0]="LEGACY",e[e["V1"]=1]="V1",e[e["V2"]=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(I_||(I_={}));
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const N_={};function S_(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};N_[e]=n}function T_(e){return N_[e]}function C_(e){delete N_[e]}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $_(e,t,n,r,s){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,o=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd;if("tensor"===a.type)return E_(t.inputNames[a.inputIndexStart],n,r,s);if("tensors"===a.type){const a=t.inputNames.slice(e,o);return a.map((e=>E_(e,n,r,s)))}const i=E_(t.inputNames.slice(e)[0],n,r,s),u=i.dataSync();return"number"===a.type?u[0]:Me(i.shape,u)}const o=t.attrParams[e];return o&&o.value}function E_(e,t,n,r){const[s,a]=O_(e);if(null!=r){const e=r.getHashTableHandleByName(s);if(null!=e)return e}const o=n.currentContextIds.find((e=>!!t[__(s,e)]));return void 0!==o?t[__(s,o)][a]:void 0}function A_(e,t,n){return t[__(e,n.currentContextId)]}function R_(e,t){const[n,r,s]=O_(e);return[__(n,t&&t.currentContextId),r,s]}function __(e,t){return t?`${e}-${t}`:e}function O_(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],r=3===t.length?t[1]:void 0,s=Number(t[t.length-1]);return[n,s,r]}function F_(e,t,n){let r=$_("pad",e,t,n);if("explicit"===r){r=$_("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function D_(e){return e.kept?e:Ti(e)}
/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const M_=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],L_=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],z_=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],P_=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],B_=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],W_=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],V_=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],U_=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],G_=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],j_=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],H_=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],q_=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],K_=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],X_=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],J_=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],Y_=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],Z_=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Q_=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],eO=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class tO{constructor(){const e=[S,T,C,$,E,A,R,_,O,F,D,M,L,z,P,B,W,V,U],t=[].concat(...e.map((e=>e.json)));this.opMappers=t.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}static get Instance(){return this._instance||(this._instance=new this)}transformGraph(e,t={}){const n=e.node,r=[],s=[],a=[],o=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?s.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e)),{});let i=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(o);h.forEach((e=>{const t=o[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=R_(e),a=o[r];if(null!=a.outputs){const e=a.outputs.indexOf(s);if(-1!==e){const s=`${r}:${e}`;t.inputNames[n]=s}}t.inputs.push(a),a.children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=o[e];0===t.children.length&&u.push(t)})):Object.keys(c).forEach((e=>{const[t]=R_(e),n=o[t];null!=n&&(n.signatureKey=c[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=R_(e),n=o[t];n&&(n.signatureKey=l[e],i.push(n))})):i=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const d={nodes:o,inputs:i,outputs:u,weights:s,placeholders:r,signature:t,functions:p};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=T_(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let s;switch(n.type){case"string":s=sO(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=sO(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=fO(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=fO(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=oO(e.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=oO(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=dO(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=dO(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=aO(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=aO(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=gO(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=gO(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=pO(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=pO(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=mO(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=mO(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=lO(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=lO(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=cO(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=cO(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=uO(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=uO(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:s,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[],r=[];let s={};null!=t&&(s=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&r.push(e[t.name]),e)),{}));const a=[],o=[];e.signature.inputArg.forEach((e=>{const[t]=R_(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:iO(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),s[t]=n}));const i=Object.keys(s);i.forEach((e=>{const t=s[e];t.inputNames.forEach(((e,n)=>{const[r,,a]=R_(e),o=s[r];if(null!=o.outputs){const e=o.outputs.indexOf(a);if(-1!==e){const s=`${r}:${e}`;t.inputNames[n]=s}}t.inputs.push(o),o.children.push(t)}))}));const u=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=R_(u[e.name]),r=s[t];null!=r&&(r.defaultOutput=n,o.push(r))}));const l=this.mapArgsToSignature(e);return{nodes:s,inputs:a,outputs:o,weights:r,placeholders:n,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function nO(e){const t=Je().global;if("undefined"!==typeof t.atob)return t.atob(e);if("undefined"!==typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function rO(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):nO(e);return t?n:n.toLowerCase()}function sO(e,t,n,r=!1){const s=e[t];return null!=s?rO(s.s,r):n}function aO(e,t,n){const r=e[t];return r?r.b:n}function oO(e,t,n){const r=e[t]||{},s=null!=r["i"]?r["i"]:null!=r["f"]?r["f"]:n;return"number"===typeof s?s:parseInt(s,10)}function iO(e){switch("string"===typeof e&&(e=k_[e]),e){case k_.DT_FLOAT:case k_.DT_HALF:return"float32";case k_.DT_INT32:case k_.DT_INT64:case k_.DT_INT8:case k_.DT_UINT8:return"int32";case k_.DT_BOOL:return"bool";case k_.DT_DOUBLE:return"float32";case k_.DT_STRING:return"string";default:return null}}function uO(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function lO(e,t,n){const r=e[t];return r&&r.type?iO(r.type):n}function cO(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>iO(e))):n}function hO(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"===typeof e.size?e.size:parseInt(e.size,10))):[]}function pO(e,t,n){const r=e[t];return r&&r.shape?hO(r.shape):n}function dO(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"===typeof e?e:parseInt(e,10))):n}function fO(e,t,n,r=!1){const s=e[t];return s&&s.list&&s.list.s?s.list.s.map((e=>rO(e,r))):n}function mO(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>hO(e))):n}function gO(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class yO{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return E_(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return E_(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return oO(this.node.rawAttrs,e,t);if(null!=n.s)return sO(this.node.rawAttrs,e,t);if(null!=n.b)return aO(this.node.rawAttrs,e,t);if(null!=n.shape)return pO(this.node.rawAttrs,e,t);if(null!=n.type)return lO(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return dO(this.node.rawAttrs,e,t);if(null!=n.list.s)return fO(this.node.rawAttrs,e,t);if(null!=n.list.shape)return mO(this.node.rawAttrs,e,t);if(null!=n.list.b)return gO(this.node.rawAttrs,e,t);if(null!=n.list.type)return cO(this.node.rawAttrs,e,t)}return t}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const bO=(e,t,n,r=G)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add($_("a",e,t,n),$_("b",e,t,n))];case"AddN":return[r.addN($_("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod($_("a",e,t,n),$_("b",e,t,n))];case"Mul":return[r.mul($_("a",e,t,n),$_("b",e,t,n))];case"RealDiv":case"Div":return[r.div($_("a",e,t,n),$_("b",e,t,n))];case"DivNoNan":return[r.divNoNan($_("a",e,t,n),$_("b",e,t,n))];case"FloorDiv":return[r.floorDiv($_("a",e,t,n),$_("b",e,t,n))];case"Sub":return[r.sub($_("a",e,t,n),$_("b",e,t,n))];case"Minimum":return[r.minimum($_("a",e,t,n),$_("b",e,t,n))];case"Maximum":return[r.maximum($_("a",e,t,n),$_("b",e,t,n))];case"Pow":return[r.pow($_("a",e,t,n),$_("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference($_("a",e,t,n),$_("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},xO=(e,t,n,r=G)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs($_("x",e,t,n))];case"Acos":return[r.acos($_("x",e,t,n))];case"Acosh":return[r.acosh($_("x",e,t,n))];case"Asin":return[r.asin($_("x",e,t,n))];case"Asinh":return[r.asinh($_("x",e,t,n))];case"Atan":return[r.atan($_("x",e,t,n))];case"Atan2":return[r.atan2($_("x",e,t,n),$_("y",e,t,n))];case"Atanh":return[r.atanh($_("x",e,t,n))];case"Ceil":return[r.ceil($_("x",e,t,n))];case"Complex":return[r.complex($_("real",e,t,n),$_("imag",e,t,n))];case"Cos":return[r.cos($_("x",e,t,n))];case"Cosh":return[r.cosh($_("x",e,t,n))];case"Elu":return[r.elu($_("x",e,t,n))];case"Erf":return[r.erf($_("x",e,t,n))];case"Exp":return[r.exp($_("x",e,t,n))];case"Expm1":return[r.expm1($_("x",e,t,n))];case"Floor":return[r.floor($_("x",e,t,n))];case"Log":return[r.log($_("x",e,t,n))];case"Log1p":return[r.log1p($_("x",e,t,n))];case"Imag":return[r.imag($_("x",e,t,n))];case"Neg":return[r.neg($_("x",e,t,n))];case"Reciprocal":return[r.reciprocal($_("x",e,t,n))];case"Real":return[r.real($_("x",e,t,n))];case"Relu":return[r.relu($_("x",e,t,n))];case"Round":return[r.round($_("x",e,t,n))];case"Selu":return[r.selu($_("x",e,t,n))];case"Sigmoid":return[r.sigmoid($_("x",e,t,n))];case"Sin":return[r.sin($_("x",e,t,n))];case"Sign":return[r.sign($_("x",e,t,n))];case"Sinh":return[r.sinh($_("x",e,t,n))];case"Softplus":return[r.softplus($_("x",e,t,n))];case"Sqrt":return[r.sqrt($_("x",e,t,n))];case"Square":return[r.square($_("x",e,t,n))];case"Tanh":return[r.tanh($_("x",e,t,n))];case"Tan":return[r.tan($_("x",e,t,n))];case"ClipByValue":return[r.clipByValue($_("x",e,t,n),$_("clipValueMin",e,t,n),$_("clipValueMax",e,t,n))];case"Relu6":return[r.relu6($_("x",e,t,n))];case"Rsqrt":return[r.rsqrt(E_(e.inputNames[0],t,n))];case"Prod":return[r.prod($_("x",e,t,n),$_("axes",e,t,n))];case"LeakyRelu":return[r.leakyRelu($_("x",e,t,n),$_("alpha",e,t,n))];case"Prelu":return[r.prelu($_("x",e,t,n),$_("alpha",e,t,n))];case"IsNan":return[r.isNaN(E_(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vO(e,t,n=""){if("number"!==typeof e&&"number"!==typeof t){oe(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const s=e[r],a=t[r];oe(s<0||a<0||s===a,(()=>n+` Shapes ${e} and ${t} must match`))}}}function wO(e){return"number"!==typeof e&&!e.some((e=>e<0))}function kO(e,t,n){let r=IO(e,n);const s=!wO(r);if(s&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&t.forEach((e=>{r=IO(e.shape,r)})),!wO(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function IO(e,t){if("number"===typeof e)return t;if("number"===typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const s=e[r],a=t[r];if(s>=0&&a>=0&&s!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=s>=0?s:a}return n}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class NO{constructor(e,t,n,r,s,a,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=yu(0),Pi(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),vO(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Pi(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return ho([],[0].concat(this.elementShape));const n=this.readMany(e);return vO(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Wg(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return ho([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const n=this.readMany(t);return vO(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Ih(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,uy(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:t.size/n,a=[];Li((()=>{t=yh(t,[1,n,s]);for(let n=0;n<e.length;++n){const o=0===n?0:r[n-1],i=[0,o,0],u=[1,e[n],s];a[n]=yh(Ch(t,i,u),this.elementShape)}return a}));const o=[];for(let i=0;i<e.length;i++)o[i]=i;this.writeMany(o,a)}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class SO{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);vO(t,e.shape,"TensorList shape mismatch: "),Pi(e)})),this.idTensor=yu(0),this.maxNumElements=r,Pi(this.idTensor)}get id(){return this.idTensor.id}copy(){return new SO([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);vO(e,this.elementShape,"TensorList shape mismatch: ");const r=kO(this.elementShape,this.tensors,e);return Li((()=>{const e=this.tensors.map((e=>yh(e,r)));return Wg(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=kO(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,vO(r.shape,e,"TensorList shape mismatch: "),yh(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(vO(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Pi(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new SO([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);vO(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=kO(this.elementShape,this.tensors,t);return yh(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);vO(this.elementShape,t.shape,"TensorList shape mismatch: "),Pi(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);vO(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=kO(this.elementShape,this.tensors,n);return 0===e.length?ho([],[0].concat(r)):Li((()=>{const t=e.map((e=>yh(this.tensors[e],r)));return Wg(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);vO(this.elementShape,t,"TensorList shape mismatch: ");const n=kO(this.elementShape,this.tensors,t);return 0===this.size()?ho([],[0].concat(n)):Li((()=>{const e=this.tensors.map((e=>yh(e,n)));return Ih(e,0)}))}}function TO(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);const s=e.shape.slice(1);vO(s,t,"TensorList shape mismatch: ");const a=uy(e);return new SO(a,t,r)}function CO(e,t,n,r){return new SO([],e,t,r)}function $O(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const a=new SO([],n,e.dtype,r),o=uy(e,0);return t.forEach(((e,t)=>{a.setItem(e,o[t])})),a}function EO(e,t,n){let r=0;const s=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const a=e.shape.slice(1),o=IO(a,n),i=0===r?0:e.size/r,u=Li((()=>{const n=[];e=yh(e,[1,r,i]);for(let r=0;r<t.length;++r){const a=0===r?0:s[r-1],u=[0,a,0],l=[1,t[r],i];n[r]=yh(Ch(e,u,l),o)}return e.dispose(),n})),l=new SO([],n,e.dtype,t.length);for(let c=0;c<u.length;c++)l.setItem(c,u[c]);return l}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const AO=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=$_("thenBranch",e,t,n),s=$_("elseBranch",e,t,n),a=$_("cond",e,t,n),o=$_("args",e,t,n),i=await a.data();return i[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=$_("body",e,t,n),s=$_("cond",e,t,n),a=$_("args",e,t,n),o=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),i=a.map((e=>e.id));let u=await o[0].data();o.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()}));let l=a;while(u[0]){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const a=await n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await a[0].data(),a.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":{const r=$_("pred",e,t,n);return[D_(r)]}case"Switch":{const r=$_("pred",e,t,n);let s=$_("data",e,t,n);return s.kept||(s=D_(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==E_(e,t,n)));if(r){const e=E_(r,t,n);return[D_(e)]}return}case"Enter":{const r=$_("frameName",e,t,n),s=$_("tensor",e,t,n);return n.enterFrame(r),[D_(s)]}case"Exit":{const r=$_("tensor",e,t,n);return n.exitFrame(),[D_(r)]}case"NextIteration":{const r=$_("tensor",e,t,n);return n.nextIteration(),[D_(r)]}case"TensorArrayV3":{const r=$_("size",e,t,n),s=$_("dtype",e,t,n),a=$_("elementShape",e,t,n),o=$_("dynamicSize",e,t,n),i=$_("clearAfterRead",e,t,n),u=$_("identicalElementShapes",e,t,n),l=$_("name",e,t,n),c=new NO(l,s,r,a,u,o,i);return n.addTensorArray(c),[c.idTensor,yu(1)]}case"TensorArrayWriteV3":{const r=$_("tensorArrayId",e,t,n),s=$_("index",e,t,n),a=$_("tensor",e,t,n),o=n.getTensorArray(r.id);return o.write(s,a),[o.idTensor]}case"TensorArrayReadV3":{const r=$_("tensorArrayId",e,t,n),s=$_("index",e,t,n),a=n.getTensorArray(r.id);return[a.read(s)]}case"TensorArrayGatherV3":{const r=$_("tensorArrayId",e,t,n),s=$_("indices",e,t,n),a=$_("dtype",e,t,n),o=n.getTensorArray(r.id);return[o.gather(s,a)]}case"TensorArrayScatterV3":{const r=$_("tensorArrayId",e,t,n),s=$_("indices",e,t,n),a=$_("tensor",e,t,n),o=n.getTensorArray(r.id);return o.scatter(s,a),[o.idTensor]}case"TensorArrayConcatV3":{const r=$_("tensorArrayId",e,t,n),s=n.getTensorArray(r.id),a=$_("dtype",e,t,n);return[s.concat(a)]}case"TensorArraySplitV3":{const r=$_("tensorArrayId",e,t,n),s=$_("tensor",e,t,n),a=$_("lengths",e,t,n),o=n.getTensorArray(r.id);return o.split(a,s),[o.idTensor]}case"TensorArraySizeV3":{const r=$_("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return[yu(s.size(),"int32")]}case"TensorArrayCloseV3":{const r=$_("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=$_("tensorListId",e,t,n),s=$_("index",e,t,n),a=$_("tensor",e,t,n),o=n.getTensorList(r.id);return o.setItem(s,a),[o.idTensor]}case"TensorListGetItem":{const r=$_("tensorListId",e,t,n),s=$_("index",e,t,n),a=$_("elementShape",e,t,n),o=$_("elementDType",e,t,n),i=n.getTensorList(r.id);return[i.getItem(s,a,o)]}case"TensorListScatterV2":case"TensorListScatter":{const r=$_("indices",e,t,n),s=$_("tensor",e,t,n),a=$_("elementShape",e,t,n),o=$_("numElements",e,t,n),i=$O(s,r,a,o);return n.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=$_("elementShape",e,t,n),s=$_("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const o=$_(a,e,t,n),i="TensorListReserve"===e.op?-1:o,u=CO(r,s,o,i);return n.addTensorList(u),[u.idTensor]}case"TensorListGather":{const r=$_("tensorListId",e,t,n),s=$_("indices",e,t,n),a=$_("elementShape",e,t,n),o=$_("elementDType",e,t,n),i=n.getTensorList(r.id);return[i.gather(s,o,a)]}case"TensorListStack":{const r=$_("tensorListId",e,t,n),s=$_("elementShape",e,t,n),a=$_("elementDType",e,t,n),o=$_("numElements",e,t,n),i=n.getTensorList(r.id);return[i.stack(s,a,o)]}case"TensorListFromTensor":{const r=$_("tensor",e,t,n),s=$_("elementShape",e,t,n),a=$_("elementDType",e,t,n),o=TO(r,s,a);return n.addTensorList(o),[o.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=$_("tensorListId",e,t,n),s=n.getTensorList(r.id),a=$_("dtype",e,t,n),o=$_("elementShape",e,t,n);return[s.concat(a,o)]}case"TensorListPushBack":{const r=$_("tensorListId",e,t,n),s=$_("tensor",e,t,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{const r=$_("tensorListId",e,t,n),s=$_("elementShape",e,t,n),a=$_("elementDType",e,t,n),o=n.getTensorList(r.id);return[o.popBack(s,a)]}case"TensorListSplit":{const r=$_("tensor",e,t,n),s=$_("elementShape",e,t,n),a=$_("lengths",e,t,n),o=EO(r,a,s);return n.addTensorList(o),[o.idTensor]}case"TensorListLength":{const r=$_("tensorListId",e,t,n),s=n.getTensorList(r.id);return[yu(s.size(),"int32")]}case"TensorListResize":{const r=$_("tensorListId",e,t,n),s=$_("size",e,t,n),a=n.getTensorList(r.id),o=a.resize(s);return n.addTensorList(o),[o.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function RO(e,t,n){const[r,s]=$_("fusedOps",e,t,n),a="biasadd"===r,o=!a,i="prelu"===s,u="fusedbatchnorm"===r,l=$_("numArgs",e,t,n);if(a){if(i&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&a&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=$_("strides",e,t,n),h=F_(e,t,n),p=$_("dataFormat",e,t,n).toUpperCase(),d=$_("dilations",e,t,n);let[f,m]=$_("args",e,t,n);o&&(m=f,f=void 0);const g=$_("leakyreluAlpha",e,t,n);return{stride:c,pad:h,dataFormat:p,dilations:d,biasArg:f,preluArg:m,activationFunc:s,leakyreluAlpha:g}}const _O=(e,t,n,r=G)=>{switch(e.op){case"Conv1D":{const s=$_("stride",e,t,n),a=$_("pad",e,t,n),o=$_("dataFormat",e,t,n).toUpperCase(),i=$_("dilation",e,t,n);return[r.conv1d($_("x",e,t,n),$_("filter",e,t,n),s,a,o,i)]}case"Conv2D":{const s=$_("strides",e,t,n),a=F_(e,t,n),o=$_("dataFormat",e,t,n).toUpperCase(),i=$_("dilations",e,t,n);return[r.conv2d($_("x",e,t,n),$_("filter",e,t,n),[s[1],s[2]],a,o,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:s,pad:a,dataFormat:o,dilations:i,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:h}=RO(e,t,n);return[r.fused.conv2d({x:$_("x",e,t,n),filter:$_("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:o,dilations:[i[1],i[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:a,dataFormat:o,dilations:i,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:h}=RO(e,t,n);return[r.fused.depthwiseConv2d({x:$_("x",e,t,n),filter:$_("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:o,dilations:[i[1],i[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=$_("outputShape",e,t,n),a=$_("strides",e,t,n),o=F_(e,t,n);return[r.conv2dTranspose($_("x",e,t,n),$_("filter",e,t,n),s,[a[1],a[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=$_("strides",e,t,n),a=F_(e,t,n),o=$_("dilations",e,t,n),i=$_("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d($_("input",e,t,n),$_("filter",e,t,n),[s[1],s[2]],a,i,[o[1],o[2]])]}case"Conv3D":{const s=$_("strides",e,t,n),a=$_("pad",e,t,n),o=$_("dataFormat",e,t,n).toUpperCase(),i=$_("dilations",e,t,n);return[r.conv3d($_("x",e,t,n),$_("filter",e,t,n),[s[1],s[2],s[3]],a,o,[i[1],i[2],i[3]])]}case"AvgPool":{const s=$_("strides",e,t,n),a=$_("pad",e,t,n),o=$_("kernelSize",e,t,n);return[r.avgPool($_("x",e,t,n),[o[1],o[2]],[s[1],s[2]],a)]}case"MaxPool":{const s=$_("strides",e,t,n),a=$_("pad",e,t,n),o=$_("kernelSize",e,t,n);return[r.maxPool($_("x",e,t,n),[o[1],o[2]],[s[1],s[2]],a)]}case"MaxPoolWithArgmax":{const s=$_("strides",e,t,n),a=$_("pad",e,t,n),o=$_("kernelSize",e,t,n),i=$_("includeBatchInIndex",e,t,n),{result:u,indexes:l}=r.maxPoolWithArgmax($_("x",e,t,n),[o[1],o[2]],[s[1],s[2]],a,i);return[u,l]}case"AvgPool3D":{const s=$_("strides",e,t,n),a=$_("pad",e,t,n),o=$_("kernelSize",e,t,n);return[r.avgPool3d($_("x",e,t,n),[o[1],o[2],o[3]],[s[1],s[2],s[3]],a)]}case"MaxPool3D":{const s=$_("strides",e,t,n),a=$_("pad",e,t,n),o=$_("kernelSize",e,t,n);return[r.maxPool3d($_("x",e,t,n),[o[1],o[2],o[3]],[s[1],s[2],s[3]],a)]}case"Dilation2D":{const s=$_("strides",e,t,n),a=$_("pad",e,t,n),o=$_("dilations",e,t,n),i=s[1],u=s[2],l=o[1],c=o[2];return[r.dilation2d($_("x",e,t,n),$_("filter",e,t,n),[i,u],a,[l,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},OO=(e,t,n,r=G)=>{switch(e.op){case"Fill":{const s=$_("shape",e,t,n),a=$_("dtype",e,t,n),o=$_("value",e,t,n);return[r.fill(s,o,a)]}case"LinSpace":{const s=$_("start",e,t,n),a=$_("stop",e,t,n),o=$_("num",e,t,n);return[r.linspace(s,a,o)]}case"Multinomial":{const s=$_("logits",e,t,n),a=$_("numSamples",e,t,n),o=$_("seed",e,t,n);return[r.multinomial(s,a,o)]}case"OneHot":{const s=$_("indices",e,t,n),a=$_("depth",e,t,n),o=$_("onValue",e,t,n),i=$_("offValue",e,t,n),u=$_("dtype",e,t,n);return[r.oneHot(s,a,o,i,u)]}case"Ones":return[r.ones($_("shape",e,t,n),$_("dtype",e,t,n))];case"OnesLike":return[r.onesLike($_("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal($_("shape",e,t,n),$_("dtype",e,t,n),$_("seed",e,t,n))];case"RandomUniform":return[r.randomUniform($_("shape",e,t,n),$_("minval",e,t,n),$_("maxval",e,t,n),$_("dtype",e,t,n))];case"Range":{const s=$_("start",e,t,n),a=$_("stop",e,t,n),o=$_("step",e,t,n);return[r.range(s,a,o,$_("dtype",e,t,n))]}case"TruncatedNormal":{const s=$_("shape",e,t,n),a=$_("mean",e,t,n),o=$_("stdDev",e,t,n),i=$_("seed",e,t,n);return[r.truncatedNormal(s,a,o,$_("dtype",e,t,n),i)]}case"Zeros":return[r.zeros($_("shape",e,t,n),$_("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike($_("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function FO(e,t,n){const r=$_("boxes",e,t,n),s=$_("scores",e,t,n),a=$_("maxOutputSize",e,t,n),o=$_("iouThreshold",e,t,n),i=$_("scoreThreshold",e,t,n),u=$_("softNmsSigma",e,t,n);return{boxes:r,scores:s,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:u}}const DO=async(e,t,n,r,s=G)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=FO(e,t,n),c=await s.image.nonMaxSuppressionWithScoreAsync(r,a,o,i,u,l);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=FO(e,t,n),l=$_("padToMaxOutputSize",e,t,n),c=await s.image.nonMaxSuppressionPaddedAsync(r,a,o,i,u,l);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=FO(e,t,n);return[await s.image.nonMaxSuppressionAsync(r,a,o,i,u)]}case"Where":{const r=s.cast($_("condition",e,t,n),"bool"),a=[await s.whereAsync(r)];return r.dispose(),a}case"ListDiff":return s.setdiff1dAsync($_("x",e,t,n),$_("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},MO=(e,t,n,r=G)=>{switch(e.op){case"LowerBound":{const s=$_("sortedSequence",e,t,n),a=$_("values",e,t,n);return[r.lowerBound(s,a)]}case"TopKV2":{const s=$_("x",e,t,n),a=$_("k",e,t,n),o=$_("sorted",e,t,n),i=r.topk(s,a,o);return[i.values,i.indices]}case"UpperBound":{const s=$_("sortedSequence",e,t,n),a=$_("values",e,t,n);return[r.upperBound(s,a)]}case"Unique":{const s=$_("x",e,t,n),a=r.unique(s);return[a.values,a.indices]}case"UniqueV2":{const s=$_("x",e,t,n),a=$_("axis",e,t,n),o=r.unique(s,a);return[o.values,o.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},LO=(e,t,n,r=G)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const s=$_("default",e,t,n);return[E_(e.name,t,n)||s];case"Placeholder":return[E_(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const r=$_("x",e,t,n);return[D_(r)]}case"IdentityN":return $_("x",e,t,n).map((e=>D_(e)));case"Snapshot":const a=$_("x",e,t,n);return[D_(a)];case"Shape":return[r.tensor1d($_("x",e,t,n).shape,"int32")];case"ShapeN":return $_("x",e,t,n).map((e=>r.tensor1d(e.shape)));case"Size":return[r.scalar($_("x",e,t,n).size,"int32")];case"Rank":return[r.scalar($_("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const o=$_("x",e,t,n),i=$_("data",e,t,n),u=$_("message",e,t,n),l=$_("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,l));return[o];default:throw TypeError(`Node type ${e.op} is not implemented`)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class zO{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=yu(0),this.tensorMap=new Map,Pi(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return yu(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),Li((()=>{const e=uy(t),r=n.length,s=e.length;oe(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let t=0;t<r;t++){const r=n[t],s=e[t];Pi(s),this.tensorMap.set(r,s)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Li((()=>{const e=[];for(let r=0;r<n.length;r++){const s=n[r],a=this.findWithDefault(s,t);e.push(a)}return Wg(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const PO=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const s=r.getHashTableHandleByName(e.name);if(null!=s)return[s];{const s=$_("keyDType",e,t,n),a=$_("valueDType",e,t,n),o=new zO(s,a);return r.addHashTable(e.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const s=$_("tableHandle",e,t,n,r),a=$_("keys",e,t,n),o=$_("values",e,t,n),i=r.getHashTableById(s.id);return[await i.import(a,o)]}case"LookupTableFind":case"LookupTableFindV2":{const s=$_("tableHandle",e,t,n,r),a=$_("keys",e,t,n),o=$_("defaultValue",e,t,n),i=r.getHashTableById(s.id);return[await i.find(a,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=$_("tableHandle",e,t,n,r),a=r.getHashTableById(s.id);return[a.tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},BO=(e,t,n,r=G)=>{switch(e.op){case"ResizeBilinear":{const s=$_("images",e,t,n),a=$_("size",e,t,n),o=$_("alignCorners",e,t,n),i=$_("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(s,[a[0],a[1]],o,i)]}case"ResizeNearestNeighbor":{const s=$_("images",e,t,n),a=$_("size",e,t,n),o=$_("alignCorners",e,t,n),i=$_("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(s,[a[0],a[1]],o,i)]}case"CropAndResize":{const s=$_("image",e,t,n),a=$_("boxes",e,t,n),o=$_("boxInd",e,t,n),i=$_("cropSize",e,t,n),u=$_("method",e,t,n),l=$_("extrapolationValue",e,t,n);return[r.image.cropAndResize(s,a,o,i,u,l)]}case"ImageProjectiveTransformV3":{const s=$_("images",e,t,n),a=$_("transforms",e,t,n),o=$_("outputShape",e,t,n),i=$_("fillValue",e,t,n),u=$_("interpolation",e,t,n),l=$_("fillMode",e,t,n);return[r.image.transform(s,a,u.toLowerCase(),l.toLowerCase(),i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},WO=(e,t,n,r=G)=>{switch(e.op){case"Equal":return[r.equal($_("a",e,t,n),$_("b",e,t,n))];case"NotEqual":return[r.notEqual($_("a",e,t,n),$_("b",e,t,n))];case"Greater":return[r.greater($_("a",e,t,n),$_("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual($_("a",e,t,n),$_("b",e,t,n))];case"Less":return[r.less($_("a",e,t,n),$_("b",e,t,n))];case"LessEqual":return[r.lessEqual($_("a",e,t,n),$_("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd($_("a",e,t,n),$_("b",e,t,n))];case"LogicalNot":return[r.logicalNot($_("a",e,t,n))];case"LogicalOr":return[r.logicalOr($_("a",e,t,n),$_("b",e,t,n))];case"Select":case"SelectV2":return[r.where($_("condition",e,t,n),$_("a",e,t,n),$_("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},VO=(e,t,n,r=G)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul($_("a",e,t,n),$_("b",e,t,n),$_("transposeA",e,t,n),$_("transposeB",e,t,n))];case"Einsum":return[r.einsum($_("equation",e,t,n),...$_("tensors",e,t,n))];case"Transpose":return[r.transpose($_("x",e,t,n),$_("perm",e,t,n))];case"_FusedMatMul":const[s,a]=$_("fusedOps",e,t,n),o="biasadd"===s,i="prelu"===a,u=$_("numArgs",e,t,n),l=$_("leakyreluAlpha",e,t,n);if(o){if(i&&2!==u)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==u)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=$_("args",e,t,n);return[r.fused.matMul({a:$_("a",e,t,n),b:$_("b",e,t,n),transposeA:$_("transposeA",e,t,n),transposeB:$_("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:h,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},UO=(e,t,n,r=G)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm($_("x",e,t,n),$_("axis",e,t,n),$_("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":return[r.batchNorm($_("x",e,t,n),$_("mean",e,t,n),$_("variance",e,t,n),$_("offset",e,t,n),$_("scale",e,t,n),$_("epsilon",e,t,n))];case"FusedBatchNormV3":return[r.batchNorm($_("x",e,t,n),$_("mean",e,t,n),$_("variance",e,t,n),$_("offset",e,t,n),$_("scale",e,t,n),$_("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization($_("x",e,t,n),$_("radius",e,t,n),$_("bias",e,t,n),$_("alpha",e,t,n),$_("beta",e,t,n))];case"Softmax":return[r.softmax($_("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax($_("x",e,t,n))];case"SparseToDense":return[r.sparseToDense($_("sparseIndices",e,t,n),$_("outputShape",e,t,n),$_("sparseValues",e,t,n),$_("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},GO=(e,t,n,r=G)=>{switch(e.op){case"RaggedGather":{const{outputNestedSplits:s,outputDenseValues:a}=r.raggedGather($_("paramsNestedSplits",e,t,n),$_("paramsDenseValues",e,t,n),$_("indices",e,t,n),$_("outputRaggedRank",e,t,n));return s.concat(a)}case"RaggedRange":{const{rtNestedSplits:s,rtDenseValues:a}=r.raggedRange($_("starts",e,t,n),$_("limits",e,t,n),$_("splits",e,t,n));return[s,a]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor($_("shape",e,t,n),$_("values",e,t,n),$_("defaultValue",e,t,n),$_("rowPartitionTensors",e,t,n),$_("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},jO=(e,t,n,r=G)=>{switch(e.op){case"Max":{const s=$_("axis",e,t,n),a=$_("keepDims",e,t,n);return[r.max($_("x",e,t,n),s,a)]}case"Mean":{const s=$_("axis",e,t,n),a=$_("keepDims",e,t,n);return[r.mean($_("x",e,t,n),s,a)]}case"Min":{const s=$_("axis",e,t,n),a=$_("keepDims",e,t,n);return[r.min($_("x",e,t,n),s,a)]}case"Sum":{const s=$_("axis",e,t,n),a=$_("keepDims",e,t,n);return[r.sum($_("x",e,t,n),s,a)]}case"All":{const s=$_("axis",e,t,n),a=$_("keepDims",e,t,n);return[r.all($_("x",e,t,n),s,a)]}case"Any":{const s=$_("axis",e,t,n),a=$_("keepDims",e,t,n);return[r.any($_("x",e,t,n),s,a)]}case"ArgMax":{const s=$_("axis",e,t,n);return[r.argMax($_("x",e,t,n),s)]}case"ArgMin":{const s=$_("axis",e,t,n);return[r.argMin($_("x",e,t,n),s)]}case"Prod":{const s=$_("axis",e,t,n),a=$_("keepDims",e,t,n);return[r.prod($_("x",e,t,n),s,a)]}case"Cumprod":{const s=$_("axis",e,t,n),a=$_("exclusive",e,t,n),o=$_("reverse",e,t,n);return[r.cumprod($_("x",e,t,n),s,a,o)]}case"Cumsum":{const s=$_("axis",e,t,n),a=$_("exclusive",e,t,n),o=$_("reverse",e,t,n);return[r.cumsum($_("x",e,t,n),s,a,o)]}case"Bincount":const s=$_("x",e,t,n),a=$_("weights",e,t,n),o=$_("size",e,t,n);return[r.bincount(s,a,o)];case"DenseBincount":{const s=$_("x",e,t,n),a=$_("weights",e,t,n),o=$_("size",e,t,n),i=$_("binaryOutput",e,t,n);return[r.denseBincount(s,a,o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},HO=(e,t,n,r=G)=>{switch(e.op){case"ConcatV2":case"Concat":{const s=$_("n",e,t,n),a=$_("axis",e,t,n);let o=$_("tensors",e,t,n);return o=o.slice(0,s),[r.concat(o,a)]}case"Gather":{const s=$_("x",e,t,n),a=$_("indices",e,t,n);return[r.gather(s,r.cast(a,"int32"),0)]}case"GatherV2":{const s=$_("axis",e,t,n),a=$_("batchDims",e,t,n),o=$_("x",e,t,n),i=$_("indices",e,t,n);return[r.gather(o,r.cast(i,"int32"),s,a)]}case"Reverse":{const s=$_("dims",e,t,n),a=[];for(let e=0;e<s.length;e++)s[e]&&a.push(e);const o=$_("x",e,t,n);return[r.reverse(o,a)]}case"ReverseV2":{const s=$_("axis",e,t,n),a=$_("x",e,t,n);return[r.reverse(a,s)]}case"Slice":{const s=$_("begin",e,t,n),a=$_("size",e,t,n);return[r.slice($_("x",e,t,n),s,a)]}case"StridedSlice":{const s=$_("begin",e,t,n),a=$_("end",e,t,n),o=$_("strides",e,t,n),i=$_("beginMask",e,t,n),u=$_("endMask",e,t,n),l=$_("ellipsisMask",e,t,n),c=$_("newAxisMask",e,t,n),h=$_("shrinkAxisMask",e,t,n),p=$_("x",e,t,n);return[r.stridedSlice(p,s,a,o,i,u,l,c,h)]}case"Pack":return Li((()=>{const s=$_("axis",e,t,n),a=$_("tensors",e,t,n),o=a[0].shape,i=r.squeeze(a[0]).shape,u=a.map((e=>{const t=he(e.shape,o);if(!t&&!he(r.squeeze(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,o)}));return[r.stack(u,s)]}));case"Unpack":{const s=$_("axis",e,t,n),a=$_("tensor",e,t,n);return r.unstack(a,s)}case"Tile":{const s=$_("reps",e,t,n);return[r.tile($_("x",e,t,n),s)]}case"Split":case"SplitV":{const s=$_("axis",e,t,n),a=$_("numOrSizeSplits",e,t,n),o=$_("x",e,t,n);return r.split(o,a,s)}case"ScatterNd":{const s=$_("indices",e,t,n),a=$_("values",e,t,n),o=$_("shape",e,t,n);return[r.scatterND(s,a,o)]}case"GatherNd":{const s=$_("x",e,t,n),a=$_("indices",e,t,n);return[r.gatherND(s,a)]}case"SparseToDense":{const s=$_("sparseIndices",e,t,n),a=$_("outputShape",e,t,n),o=$_("sparseValues",e,t,n),i=$_("defaultValue",e,t,n);return[r.sparseToDense(s,o,a,o.dtype===i.dtype?i:r.cast(i,o.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},qO=(e,t,n,r=G)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:a,emptyRowIndicator:o,reverseIndexMap:i}=r.sparse.sparseFillEmptyRows($_("indices",e,t,n),$_("values",e,t,n),$_("denseShape",e,t,n),$_("defaultValue",e,t,n));return[s,a,o,i]}case"SparseReshape":{const{outputIndices:s,outputShape:a}=r.sparse.sparseReshape($_("inputIndices",e,t,n),$_("inputShape",e,t,n),$_("newShape",e,t,n));return[s,a]}case"SparseSegmentMean":{const s=r.sparse.sparseSegmentMean($_("data",e,t,n),$_("indices",e,t,n),$_("segmentIds",e,t,n));return[s]}case"SparseSegmentSum":{const s=r.sparse.sparseSegmentSum($_("data",e,t,n),$_("indices",e,t,n),$_("segmentIds",e,t,n));return[s]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},KO=(e,t,n,r=G)=>{switch(e.op){case"FFT":return[r.fft($_("x",e,t,n))];case"IFFT":return[r.ifft($_("x",e,t,n))];case"RFFT":return[r.rfft($_("x",e,t,n))];case"IRFFT":return[r.irfft($_("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},XO=(e,t,n,r=G)=>{switch(e.op){case"StringNGrams":{const{nGrams:s,nGramsSplits:a}=r.string.stringNGrams($_("data",e,t,n),$_("dataSplits",e,t,n),$_("separator",e,t,n),$_("nGramWidths",e,t,n),$_("leftPad",e,t,n),$_("rightPad",e,t,n),$_("padWidth",e,t,n),$_("preserveShortSequences",e,t,n));return[s,a]}case"StringSplit":{const{indices:s,values:a,shape:o}=r.string.stringSplit($_("input",e,t,n),$_("delimiter",e,t,n),$_("skipEmpty",e,t,n));return[s,a,o]}case"StringToHashBucketFast":{const s=r.string.stringToHashBucketFast($_("input",e,t,n),$_("numBuckets",e,t,n));return[s]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},JO=(e,t,n,r=G)=>{switch(e.op){case"Cast":return[r.cast($_("x",e,t,n),$_("dtype",e,t,n))];case"ExpandDims":{const s=$_("axis",e,t,n);return[r.expandDims($_("x",e,t,n),s)]}case"Squeeze":{const s=$_("axis",e,t,n);return[r.squeeze($_("x",e,t,n),s)]}case"Reshape":return[r.reshape($_("x",e,t,n),$_("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad($_("x",e,t,n),$_("padding",e,t,n),$_("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad($_("x",e,t,n),$_("padding",e,t,n),$_("constantValue",e,t,n))];case"SpaceToBatchND":{const s=$_("blockShape",e,t,n),a=$_("paddings",e,t,n);return[r.spaceToBatchND($_("x",e,t,n),s,a)]}case"BatchToSpaceND":{const s=$_("blockShape",e,t,n),a=$_("crops",e,t,n);return[r.batchToSpaceND($_("x",e,t,n),s,a)]}case"DepthToSpace":{const s=$_("blockSize",e,t,n),a=$_("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace($_("x",e,t,n),s,a)]}case"BroadcastTo":return[r.broadcastTo($_("x",e,t,n),$_("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs($_("s0",e,t,n),$_("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function YO(e,t,n,r,s=Li){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return s((()=>bO(e,t,n)));case"basic_math":return s((()=>xO(e,t,n)));case"control":return AO(e,t,n);case"convolution":return s((()=>_O(e,t,n)));case"creation":return s((()=>OO(e,t,n)));case"dynamic":return DO(e,t,n);case"evaluation":return s((()=>MO(e,t,n)));case"image":return s((()=>BO(e,t,n)));case"graph":return s((()=>LO(e,t,n)));case"logical":return s((()=>WO(e,t,n)));case"matrices":return s((()=>VO(e,t,n)));case"normalization":return s((()=>UO(e,t,n)));case"ragged":return s((()=>GO(e,t,n)));case"reduction":return s((()=>jO(e,t,n)));case"slice_join":return s((()=>HO(e,t,n)));case"sparse":return s((()=>qO(e,t,n)));case"spectral":return s((()=>KO(e,t,n)));case"string":return s((()=>XO(e,t,n)));case"transformation":return s((()=>JO(e,t,n)));case"hash_table":return PO(e,t,n,r);case"custom":const a=T_(e.op);if(a&&a.customExecutor)return a.customExecutor(new yO(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return Ge(a)?a.then((e=>[].concat(e))):[].concat(a)}class ZO{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function QO(e,t,n,r){const s=new Set,a=[];let o=null,i=null;const u=new Set,l=Object.keys(e).map((e=>O_(e)[0]));let c=[];null!=r&&(c=r.map((e=>O_(e.name)[0])));const h=[...t];while(h.length>0){const e=h.pop();(sF(e)||aF(e)||oF(e))&&null==o&&(o=e,i=o.children.map((e=>e.name)).filter((e=>s.has(e)))),s.add(e.name),null==n[e.name]&&(-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),h.push(e))})):a.push(e.name)))}return{inputs:e,outputs:t,usedNodes:s,missingInputs:a,dynamicNode:o,syncInputs:i}}function eF(e,t,n){const{usedNodes:r,inputs:s}=n,a=[],o=Object.keys(s).map((e=>O_(e)[0])).map((t=>e.nodes[t])),i=e.initNodes;o.forEach((e=>{r.has(e.name)&&a.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&a.push(e)})),null!=i&&i.forEach((e=>{r.has(e.name)&&a.push(e)}));const u=new Set,l=[];while(a.length>0){const e=a.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach((e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&a.push(e)}))}return l}const tF=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],nF=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],rF=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function sF(e){return tF.indexOf(e.op)>=0}function aF(e){return nF.indexOf(e.op)>=0}function oF(e){return rF.indexOf(e.op)>=0}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class iF{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new iF(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams["shape"]?e.attrParams["shape"].value:void 0,dtype:e.attrParams["dtype"]?e.attrParams["dtype"].value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams["shape"]?e.attrParams["shape"].value:void 0,dtype:e.attrParams["dtype"]?e.attrParams["dtype"].value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=QO(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const n=t.map((e=>e.name)),s=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}return eF(this.graph,this.weightMap,n)}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return Pi(t),t}cloneTensorList(e){if(!e)return null;const t=e.map((e=>this.cloneAndKeepTensor(e)));return t}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((([e,t])=>[e,this.cloneTensorList(t)])))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[O_(e)[0]])),s=t.map((e=>O_(e)[0]));let a=s.map((e=>this.graph.nodes[e]));0===a.length&&(a=this._outputs);const o=this.getCompilationKey(r,a);let i=this.compiledMap.get(o);null==i&&(i=this.compile(e,a),this.compiledMap.set(o,i));try{this.keepIntermediateTensors=Je().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(c){this.keepIntermediateTensors=!1,console.warn(c.message)}const u={},l={};return Li((()=>{const n=new ZO(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[n,s]=O_(t),a=[];a[s]=e[t],r[n]=a,this.keepIntermediateTensors&&(this.clonedTensorsMap[n]=this.cloneTensorList(a))}));const a=this.getFrozenTensorIds(r),o={};for(let e=0;e<i.length;e++){const t=i[e];if(!r[t.name]){const e=YO(t,r,n,this._resourceManager);if(Ge(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.keepIntermediateTensors&&(this.clonedTensorsMap[t.name]=this.cloneTensorList(e)),this.checkTensorForDisposal(t.name,t,r,n,a,s,o)}}return null==this.parent&&n.dispose(a),t.map((e=>E_(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,s,a,o){"control"!==t.category&&-1===a.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(o[e.id]=(o[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const t=A_(e.name,n,r);null!=t&&t.forEach((e=>{if(e&&!e.kept&&!s.has(e.id)){const t=o[e.id];1===t?(e.dispose(),delete o[e.id]):null!=t&&o[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,r={},s={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=Je().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const a=new ZO(this.weightMap,r,s,this.functionExecutorMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(e,a,t,n),i=t.map((e=>E_(e,o,a))),u=i.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),c=new Set([...u,...l,...this.weightIds]);return Object.values(o).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&a.dispose(c),i}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const s=Object.keys(e),a=s.map((e=>this.graph.nodes[O_(e)[0]])),o=n.map((e=>O_(e)[0]));let i=o.map((e=>this.graph.nodes[e]));0===i.length&&(i=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:h}=QO(e,i,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=O_(t),s=[];s[r]=e[t],d[n]=s}));const f={},m=this.getFrozenTensorIds(d),g={};while(p.length>0){const e=this.processStack(a,p,t,d,g,m,o,f,u);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=i.filter((e=>!sF(e)&&!E_(e.name,d,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${s}]. Consider providing the following inputs: [${l}]. ${e}`)}return d}processStack(e,t,n,r,s,a,o,i,u){const l=[];while(t.length>0){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&$_("isConstant",e.node,r,n)&&([c]=R_(e.node.name,n)),null==r[e.node.name]){const h=YO(e.node,r,n,this._resourceManager);c||([c]=R_(e.node.name,n));const p=n.currentContext;Ge(h)?l.push(h.then((l=>(r[c]=l,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(l)),n.currentContext=p,this.checkTensorForDisposal(c,e.node,r,n,a,o,i),this.processChildNodes(e.node,t,n,r,s,u),l)))):(r[c]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(h)),this.checkTensorForDisposal(c,e.node,r,n,a,o,i),this.processChildNodes(e.node,t,n,r,s,u))}else this.processChildNodes(e.node,t,n,r,s,u)}return l}processChildNodes(e,t,n,r,s,a){e.children.forEach((e=>{const[o]=R_(e.name,n);!s[o]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!E_(e,r,n)))&&(s[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!E_(e,r,n)))&&(s[o]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=O_(t),s=this.graph.nodes[r];if(s.attrParams["shape"]&&s.attrParams["shape"].value){const e=s.attrParams["shape"].value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));oe(t,(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}s.attrParams["dtype"]&&s.attrParams["dtype"].value&&oe(n.dtype===s.attrParams["dtype"].value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams["dtype"].value}, but was ${n.dtype}`))}))}mapInputs(e){var t,n;const r={};for(const s in e){const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[s];null!=a?r[a.name]=e[s]:r[s]=e[s]}return r}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=O_(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{var t,n;const r=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=r?r.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=O_(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class uF{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const lF="?tfjs-format=file",cF="model.json";class hF{constructor(e,t={},n=u){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new uF}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return Ge(e)?e.then((e=>this.loadSync(e))):this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(n=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new iF(tO.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=tO.Instance.transformGraph(e.modelInitializer);this.initializer=new iF(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"===typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof Sa?[e]:e,n={};return t.forEach(((e,t)=>n[this.structuredOutputKeys[t]]=e)),n}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof Sa)&&!Array.isArray(e)){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const r=n[t];null!=r.resourceId&&(e[t]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce(((t,n)=>{var s,a,o;const i=null===(o=null===(a=null===(s=this.signature)||void 0===s?void 0:s.inputs)||void 0===a?void 0:a[n])||void 0===o?void 0:o.resourceId;return t[n]=null!=i?this.resourceIdToCapturedInput[i]:e[r++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){const s=n[r],a=t[s];this.resourceIdToCapturedInput[a.resourceId]=e[r]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&zi(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function pF(e,t={},n=u){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"===typeof e&&(e=fF(e));const r=new hF(e,t,n);return await r.load(),r}function dF(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){const[n,r]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!r||!(r instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");const s=$o(n.weightsManifest),a=So(n,s,r);t=fl(a)}else if("load"in e)t=e;else{if(!("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e))throw new Error("Unknown model format");t=fl(e)}const n=new hF(t);return n.load(),n}function fF(e){return e.endsWith("/")||(e+="/"),`${e}${cF}${lF}`}
/** @license See the LICENSE file. */
const mF="4.2.0";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
function gF(e,t){return yF(e,t)}function yF(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"===typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(kF(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const o=e[a],i=yF(o,t,n,r);s[a]=i}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function bF(e,t=vF){return xF(e,t)}function xF(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(kF(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=e.map((e=>e[a])),o=xF(r,t,n);s[a]=o}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function vF(e){return null===e?null:kF(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function wF(e,t){const n=new Map;yF(e,t,n);for(const s of Array.from(n.keys())){const e=n.get(s);if(Ge(e)){const t=await e;n.set(s,t)}}const r=yF(e,t,n);return r}function kF(e){let t=!1;if(Je().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(9182);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof Sa)&&!(e instanceof Promise)&&!t)}function IF(e){return null==e||NF(e)||Array.isArray(e)||"object"===typeof e&&e instanceof Sa||na(e)}function NF(e){return null===e||"object"!==typeof e&&"function"!==typeof e}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
function SF(e){return gF(e,TF)}function TF(e){return e instanceof Sa?{value:e.clone(),recurse:!1}:kF(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class CF{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){while(e<0)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class $F extends CF{constructor(){super($F.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
function EF(e){return new FF(e)}function AF(e){return new DF(e)}function RF(e,t){return new HF(e,t)}function _F(e,t=qF.FAIL){return new KF(e,t)}$F.INITIAL_CAPACITY=32;class OF{async toArray(){const e=[];let t=await this.next();while(!t.done)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();while(!n.done)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();while(!e.done)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);while(!t.done&&n)t=await this.next(),n=e(t.value)}handleErrors(e){return new VF(this,e)}filter(e){return new BF(this,e)}map(e){return new WF(this,e)}mapAsync(e){return new UF(this,e)}serialMapAsync(e){return new UF(this,e).serial()}flatmap(e){return new jF(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new PF(this,e,t)}columnMajorBatch(e,t=!0,n=vF){const r=this.rowMajorBatch(e,t);return r.map((e=>bF(e,n)))}concatenate(e,t){return new HF(EF([this,e]),t)}take(e){return e<0||null==e?this:new zF(this,e)}skip(e){return e<0||null==e?this:new LF(this,e)}prefetch(e){return new XF(this,e)}shuffle(e,t){return new JF(this,e,t)}serial(){return new MF(this)}}class FF extends OF{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:SF(e),done:!1}}}class DF extends OF{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class MF extends OF{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class LF extends OF{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){while(this.count++<this.maxCount){const e=await this.upstream.next();if(e.done)return e;zi(e.value)}return this.upstream.next()}}class zF extends OF{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class PF extends OF{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];while(e.length<this.batchSize){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class BF extends OF{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){while(1){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;zi(e.value)}}}class WF extends OF{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Pa(e.value),n=this.transform(e.value),r=Pa(n);for(const s of t)za(s,r)||s.dispose();return{value:n,done:!1}}}class VF extends OF{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){while(1)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class UF extends OF{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Pa(e.value),n=await this.transform(e.value),r=Pa(n);for(const s of t)za(s,r)||s.dispose();return{value:n,done:!1}}}class GF extends OF{constructor(){super(),this.outputQueue=new $F,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){while(0===this.outputQueue.length())if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class jF extends GF{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Pa(e.value),n=this.transform(e.value),r=Pa(n);this.outputQueue.pushAll(n);for(const s of t)za(s,r)||s.dispose();return!0}}class HF extends OF{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){const e="TODO: fill in upstream of chained summaries";return`${e} -> Chained`}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var qF;(function(e){e[e["FAIL"]=0]="FAIL",e[e["SHORTEST"]=1]="SHORTEST",e[e["LONGEST"]=2]="LONGEST"})(qF||(qF={}));class KF extends OF{constructor(e,t=qF.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){const e="TODO: fill in upstream of zip summaries";return`{${e}} -> Zip`}async nextState(e){await e;let t=0,n=0;function r(e){if(e instanceof OF){const r=e.next();return{value:r.then((e=>(t++,e.done&&n++,e.value))),recurse:!1}}return{value:null,recurse:!0}}const s=await wF(this.iterators,r);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case qF.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case qF.SHORTEST:return{value:null,done:!0};case qF.LONGEST:default:}return this.count++,{value:s,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class XF extends OF{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new CF(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){while(!this.buffer.isFull()){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class JF extends XF{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Sm.alea(n||Zs().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){this.upstreamExhausted||this.refill();while(!this.buffer.isEmpty()){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class YF{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return oe(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),ZF((async()=>(await n.iterator()).columnMajorBatch(e,t,tD)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,ZF((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,ZF((async()=>(await t.iterator()).filter((t=>Li((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return ZF((async()=>(await t.iterator()).map((t=>Li((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return ZF((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return ZF((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,ZF((async()=>{const n=AF((async()=>({value:await t.iterator(),done:!1})));return RF(n.take(e))}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,ZF((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=Sm.alea(t||Zs().toString());return ZF((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,ZF((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function ZF(e,t=null){return new class extends YF{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function QF(e){return ZF((async()=>EF(e)),e.length)}function eD(e){if(!kF(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return ZF((async()=>{const t=await wF(e,(e=>{if(e instanceof YF)return{value:e.iterator(),recurse:!1};if(kF(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")}));return _F(t,qF.SHORTEST)}),t)}function tD(e){if(null===e)return null;const t=e[0];if(IF(t)){const t=nD(e);return{value:t,recurse:!1}}return{value:null,recurse:!0}}function nD(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Sa?Wg(e):ho(e)}YF.MAX_BUFFER_SIZE=1e4;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class rD extends YF{constructor(e){super(),this.input=e}async iterator(){const e=await this.input.iterator(),t=e.decodeUTF8(),n=t.split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)));return n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
const sD='"',aD=Symbol("out"),oD=Symbol("field"),iD=Symbol("quote"),uD=Symbol("quoteafterquote"),lD=Symbol("quoteinquote");class cD extends YF{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new rD(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(oe(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&oe(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(oe(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const r of Object.keys(this.columnConfigs)){const e=this.fullColumnNames.indexOf(r);if(-1===e)throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value,r=this.parseRow(n,!1);return r}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},r={};for(let s=0;s<this.fullColumnNames.length;s++){const a=this.fullColumnNames[s],o=this.columnConfigs?this.columnConfigs[a]:null;if(!this.configuredColumnsOnly||o){const i=t[s];let u=null;if(""===i)if(o&&void 0!==o.default)u=o.default;else{if(o&&(o.required||o.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);u=void 0}else{const e=Number(i);if(isNaN(e))u=o&&"bool"===o.dtype?this.getBoolean(i):i;else if(o&&o.dtype)switch(o.dtype){case"float32":u=e;break;case"int32":u=Math.floor(e);break;case"bool":u=this.getBoolean(i);break;default:u=e}else u=e}o&&o.isLabel?r[a]=u:n[a]=u}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let r=0;const s=e.length;let a=aD;for(let o=0;o<s;o++)switch(a){case aD:switch(e.charAt(o)){case sD:r=o+1,a=iD;break;case this.delimiter:if(r=o+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),a=aD;break;default:a=oD,r=o;break}break;case oD:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(r,o)),a=aD,r=o+1;break;default:}break;case iD:switch(e.charAt(o)){case sD:a=uD;break;default:}break;case uD:switch(e.charAt(o)){case this.delimiter:n.push(e.substring(r,o-1)),a=aD,r=o+1;break;case sD:a=iD;break;default:a=lD;break}break;case lD:switch(e.charAt(o)){case sD:a=iD;break;default:}break;default:}if(a===uD?n.push(e.substring(r,s-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class hD extends OF{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!Je().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");const t=new hD(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((r=>{const s=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(le(t));return n.set(e,n.length-e.length),ho(n,t)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class pD extends OF{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Kg([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,s=n+e,a=t+r;this.cropBox=Xg([r,n,a,s],[1,4])}else this.cropBox=Xg([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!Je().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new pD(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&oe("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(t){console.log(t),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Bl(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return Li((()=>{const t=wd(Ni(e,"float32"),0);let n;n=Ox.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return yh(n,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){const e=this.stream.getTracks();e.forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class dD{}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class fD extends OF{split(e){return new mD(this,e)}}class mD extends fD{constructor(e,t){super(),this.upstream=e,this.impl=new gD(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class gD extends GF{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class yD extends OF{decodeUTF8(){return new bD(this)}}class bD extends fD{constructor(e){super(),this.upstream=e,this.impl=new xD(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class xD extends GF{constructor(e){if(super(),this.upstream=e,Je().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(7796);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=Je().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class vD extends yD{constructor(e,t={}){super(),this.file=e,this.options=t,oe(e instanceof Uint8Array||!!Je().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let s=r.result;if(s instanceof ArrayBuffer&&(s=new Uint8Array(s)),!(s instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(s)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));const s=this.file.slice(this.offset,n);r.readAsArrayBuffer(s)}this.offset=n}));return{value:await e,done:!1}}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
async function wD(e,t={},n){let r,s;"string"===typeof e?r=e:(r=e.url,s=kD(e));const a=await(n||Qs)(r,s);if(a.ok){const e=new Uint8Array(await a.arrayBuffer());return new vD(e,t)}throw new Error(a.statusText)}const kD=e=>{const t={method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity};return t};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
function ID(e){return"string"===typeof e&&"file://"===e.slice(0,7)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class ND extends dD{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(ID(this.input)&&Je().get("IS_NODE")){const e=n(451);this.input=e.readFileSync(this.input.slice(7))}return new vD(this.input,this.options)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class SD extends dD{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return ID(this.url)?new ND(this.url,this.fileOptions).iterator():wD(this.url,this.fileOptions)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
function TD(e,t={}){return new cD(new SD(e),t)}function CD(e){const t=AF(e);return ZF((async()=>t))}function $D(e){return ZF((async()=>{const t=await e();return AF((()=>t.next()))}))}async function ED(e,t){return pD.create(e,t)}async function AD(e){return hD.create(e)}
/** @license See the LICENSE file. */
const RD="4.2.0";
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _D(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&oe("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const OD=hy;class FD extends J{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new X(this,Fi())}nextDataId(){return FD.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Je().get("IS_NODE")&&ys("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&$e(n[0])){const s=n.map((e=>ea(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){const t=this.data.get(e);return t.refCount}return 0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return cv(e,t)}return Le(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>ta(e)));return ki(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return ki(e.shape,e.dtype,t)}makeOutput(e,t,n){return Fi().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Zs();e();const n=Zs()-t;return{kernelMs:n}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){_D([e],"where");const t=this.readSync(e.dataId);return OD(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}FD.nextDataId=0;
/** @license See the LICENSE file. */
const DD="4.2.0";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function MD(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:o}=r;if(_D(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const i=a,u=i.data.get(o.dataId).values,l=le(o.shape),c=n||o.dtype,h=ke(c,l);for(let e=0;e<l;++e)h[e]=t(u[e],s);return i.makeTensorInfo(o.shape,c,h)}}function LD(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:o}=r;if(_D(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const i=a,u=i.data.get(o.dataId).values,l=n||o.dtype,c=t(u,l,s);return i.makeTensorInfo(o.shape,l,c)}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
qi("cpu",(()=>new FD),1);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const zD=MD(en,(e=>e>=0?e:Math.exp(e)-1)),PD={kernelName:en,backendName:"cpu",kernelFunc:zD};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function BD(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const WD={kernelName:bn,backendName:"cpu",kernelFunc:BD};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function VD(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;_D([s],"leakyRelu");const o=le(s.shape),i=n.data.get(s.dataId).values,u=we("float32",o);for(let l=0;l<i.length;l++)u[l]=i[l]<0?a*i[l]:i[l];return n.makeTensorInfo(s.shape,"float32",u)}const UD={kernelName:Nn,backendName:"cpu",kernelFunc:VD};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function GD(e){return(t,n,r,s,a)=>{const o=Fu(t,n),i=o.length,u=Fe(o),l=le(o),c=we(a,l),h=t.length,p=n.length,d=Fe(t),f=Fe(n),m=_u(t,o),g=_u(n,o);if(m.length+g.length===0)for(let y=0;y<c.length;++y)c[y]=e(r[y%r.length],s[y%s.length]);else for(let y=0;y<c.length;++y){const t=Ue(y,i,u),n=t.slice(-h);m.forEach((e=>n[e]=0));const a=Ve(n,h,d),o=t.slice(-p);g.forEach((e=>o[e]=0));const l=Ve(o,p,f);c[y]=e(r[a],s[l])}return[c,o]}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const jD=GD(((e,t)=>e<0?t*e:e));function HD(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;_D([r,s],"prelu");const a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,[i,u]=jD(r.shape,s.shape,a,o,"float32");return n.makeTensorInfo(u,"float32",i)}const qD={kernelName:lr,backendName:"cpu",kernelFunc:HD},KD=MD(yr,(e=>Math.max(0,e))),XD={kernelName:yr,backendName:"cpu",kernelFunc:KD},JD=MD(Ir,(e=>Math.min(Math.max(0,e),6))),YD={kernelName:Ir,backendName:"cpu",kernelFunc:JD};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ZD(e){return(t,n,r)=>{const s=we(n,t.length);for(let a=0;a<t.length;++a)s[a]=e(t[a],r);return s}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const QD=ZD((e=>1/(1+Math.exp(-e)))),eM=MD(Dr,(e=>1/(1+Math.exp(-e)))),tM={kernelName:Dr,backendName:"cpu",kernelFunc:eM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nM(e,t,n,r,s){if("linear"===n)return BD({inputs:{x:t},backend:e});if("relu"===n)return KD({inputs:{x:t},backend:e});if("elu"===n)return zD({inputs:{x:t},backend:e});if("relu6"===n)return JD({inputs:{x:t},backend:e});if("prelu"===n)return HD({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return VD({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return eM({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rM(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,i=n.makeTensorInfo(r.shape,"complex64"),u=n.data.get(i.dataId);return u.complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",o)},i}const sM={kernelName:Et,backendName:"cpu",kernelFunc:rM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function aM(e,t,n="float32"){if("complex64"===n){const n=aM(e,t,"float32"),r=aM(e,t,"float32");return rM({inputs:{real:n,imag:r},backend:e})}const r=Pe(le(t),n);return e.makeTensorInfo(t,n,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oM(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const iM={kernelName:mr,backendName:"cpu",kernelFunc:oM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uM(e,t,n,r){if("int32"===r){const n=Int32Array.from(e);return[t,"int32",n]}if("bool"===r){const r=Ys([0],n),[s,a]=GD(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[a,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function lM(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return BD({inputs:{x:s},backend:n});const e=aM(n,s.shape,s.dtype),t=lM({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=rM({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=oM({inputs:{input:s},backend:n}),t=lM({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!Se(s.dtype,a)){const e=BD({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}const o=n.data.get(s.dataId).values,[i,u,l]=uM(o,s.shape,s.dtype,a);return n.makeTensorInfo(i,u,l)}const cM={kernelName:Tt,backendName:"cpu",kernelFunc:lM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hM(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a:a,b:o}=n,i=s;_D([a,o],e);const u=i.data.get(a.dataId).values,l=i.data.get(o.dataId).values,c="string"===a.dtype?Gv(u):u,h="string"===a.dtype?Gv(l):l,p=r||a.dtype,[d,f]=t(a.shape,o.shape,c,h,p);return i.makeTensorInfo(f,p,d)}:({inputs:e,backend:s})=>{const{a:a,b:o}=e,i=s;if("complex64"===a.dtype||"complex64"===o.dtype){const e=lM({inputs:{x:a},backend:i,attrs:{dtype:"complex64"}}),t=i.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,u=i.data.get(r.dataId).values,l=i.data.get(s.dataId).values,c=lM({inputs:{x:o},backend:i,attrs:{dtype:"complex64"}}),h=i.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=i.data.get(p.dataId).values,m=i.data.get(d.dataId).values,[g,y,b]=n(a.shape,o.shape,u,l,f,m),x=i.makeTensorInfo(b,"float32",g),v=i.makeTensorInfo(b,"float32",y),w=rM({inputs:{real:x,imag:v},backend:i});return i.disposeIntermediateTensorInfo(e),i.disposeIntermediateTensorInfo(c),i.disposeIntermediateTensorInfo(x),i.disposeIntermediateTensorInfo(v),w}{const e=i.data.get(a.dataId).values,n=i.data.get(o.dataId).values,s=r||a.dtype,[u,l]=t(a.shape,o.shape,e,n,s);return i.makeTensorInfo(l,s,u)}}}function pM(e){return(t,n,r,s,a,o)=>{const i=Fu(t,n),u=le(i),l=i.length,c=Fe(i),h=we("float32",u),p=we("float32",u),d=_u(t,i),f=_u(n,i),m=cv(r,s),g=cv(a,o),y=t.length,b=Fe(t),x=n.length,v=Fe(n);if(d.length+f.length===0)for(let w=0;w<h.length;w++){const t=w%m.length,n=w%g.length,r=e(m[2*t],m[2*t+1],g[2*n],g[2*n+1]);h[w]=r.real,p[w]=r.imag}else for(let w=0;w<h.length;w++){const t=Ue(w,l,c),n=t.slice(-y);d.forEach((e=>n[e]=0));const r=Ve(n,y,b),s=t.slice(-x);f.forEach((e=>s[e]=0));const a=Ve(s,x,v),o=e(m[2*r],m[2*r+1],g[2*a],g[2*a+1]);h[w]=o.real,p[w]=o.imag}return[h,p,i]}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const dM=GD(((e,t)=>e+t)),fM=pM(((e,t,n,r)=>({real:e+n,imag:t+r}))),mM=hM(ot,dM,fM),gM={kernelName:ot,backendName:"cpu",kernelFunc:mM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yM(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,o=le(s.shape),i=be(a,o),u=le(i);oe(o===u,(()=>`The new shape (${i}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const l=n.data.get(s.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=i,t.shape=i}return{dataId:s.dataId,shape:i,dtype:s.dtype}}const bM={kernelName:br,backendName:"cpu",kernelFunc:yM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xM(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:o,transposeB:i}=r;_D([s,a],"matMul");const u=s.shape.length,l=a.shape.length,c=o?s.shape[u-2]:s.shape[u-1],h=i?a.shape[l-1]:a.shape[l-2],p=o?s.shape[u-1]:s.shape[u-2],d=i?a.shape[l-2]:a.shape[l-1],f=s.shape.slice(0,-2),m=a.shape.slice(0,-2),g=le(f),y=le(m),b=Fu(s.shape.slice(0,-2),a.shape.slice(0,-2)),x=b.concat([p,d]);oe(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`));const v=o?[g,c,p]:[g,p,c],w=i?[y,d,h]:[y,h,d],k=yM({inputs:{x:s},backend:n,attrs:{shape:v}}),I=yM({inputs:{x:a},backend:n,attrs:{shape:w}}),N=o?k.shape[1]:k.shape[2],S=o?k.shape[2]:k.shape[1],T=i?I.shape[1]:I.shape[2],C=Math.max(g,y),$=n.data.get(k.dataId).values,E=n.data.get(I.dataId).values,A=Fe(k.shape),R=Fe(I.shape),[_,O,F]=o?[A[0],1,A[1]]:[A[0],A[1],1],[D,M,L]=i?[1,R[1],R[0]]:[R[1],1,R[0]],z=S*T,P=ki([C,S,T],k.dtype),B=P.values,W=n.blockSize;for(let V=0;V<C;V++){const e=V%g,t=V%y;for(let n=0;n<S;n+=W){const r=Math.min(n+W,S);for(let s=0;s<T;s+=W){const a=Math.min(s+W,T);for(let o=0;o<N;o+=W){const i=Math.min(o+W,N);for(let u=n;u<r;u++)for(let n=s;n<a;n++){let r=0;for(let s=o;s<i;s++){const a=$[e*_+u*O+s*F],o=E[s*D+n*M+t*L];r+=a*o}B[V*z+(u*T+n)]+=r}}}}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(I),n.makeTensorInfo(x,P.dtype,P.values)}const vM={kernelName:wt,backendName:"cpu",kernelFunc:xM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wM(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;let p,d,f;const m=[],g=xM({inputs:{a:s,b:a},attrs:{transposeA:u,transposeB:l},backend:n});p=g,o&&(d=mM({inputs:{a:p,b:o},backend:n}),m.push(p),p=d),c&&(f=nM(n,p,c,i,h),m.push(p),p=f);for(const y of m)n.disposeIntermediateTensorInfo(y);return p}const kM={kernelName:fs,backendName:"cpu",kernelFunc:wM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function IM(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const NM=e=>{const{x:t}=e.inputs,n=e.backend;_D(t,"abs");let r=new Float32Array(le(t.shape));const s=n.data.get(t.dataId).values;return r=IM(s),n.makeOutput(r,t.shape,t.dtype)},SM={kernelName:rt,backendName:"cpu",kernelFunc:NM},TM=MD(st,(e=>Math.acos(e))),CM={kernelName:st,backendName:"cpu",kernelFunc:TM},$M=MD(at,(e=>Math.acosh(e))),EM={kernelName:at,backendName:"cpu",kernelFunc:$M};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function AM(e){const{inputs:t,backend:n}=e,r=t;_D(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),a=ki(r[0].shape,r[0].dtype),o=a.values;for(let i=0;i<r.length;i++){const e=s[i];for(let t=0;t<o.length;t++)o[t]+=e[t]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}const RM={kernelName:it,backendName:"cpu",kernelFunc:AM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _M(e,t,n,r,s){const a=t.length,o=le(t),i=Fe(t),u=Fe(s),l=we(n,le(s));for(let c=0;c<o;++c){const t=Ue(c,a,i),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[r[e]];const s=Ve(n,a,u);l[s]=e[c]}return l}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function OM(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;_D(s,"transpose");const o=s.shape.length,i=new Array(o);for(let h=0;h<i.length;h++)i[h]=s.shape[a[h]];const u=r.data.get(s.dataId).values,l=_M(u,s.shape,s.dtype,a,i),c=r.write(l,i,s.dtype);return{dataId:c,shape:i,dtype:s.dtype}}const FM={kernelName:as,backendName:"cpu",kernelFunc:OM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function DM(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;_D(s,"all");const i=xe(a,s.shape);let u=i;const l=sd(u,s.shape.length);let c=s;null!=l&&(c=OM({inputs:{x:s},backend:n,attrs:{perm:l}}),u=od(u.length,s.shape.length)),rd("all",u,c.shape.length);const[h,p]=td(c.shape,u),d=le(p),f=Pe(le(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*d;let t=m[e];for(let n=0;n<d;++n){const r=m[e+n];t=t&&r}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(o){const e=nd(h,i),t=yM({inputs:{x:g},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(g),t}return g}const MM={kernelName:ut,backendName:"cpu",kernelFunc:DM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function LM(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;_D(s,"any");const i=xe(a,s.shape);let u=i;const l=sd(u,s.shape.length);let c=s;null!=l&&(c=OM({inputs:{x:s},backend:n,attrs:{perm:l}}),u=od(u.length,s.shape.length)),rd("any",u,c.shape.length);const[h,p]=td(c.shape,u),d=le(p),f=Pe(le(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*d;let t=m[e];for(let n=0;n<d;++n){const r=m[e+n];t=t||r}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(o){const e=nd(h,i),t=yM({inputs:{x:g},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(g),t}return g}const zM={kernelName:lt,backendName:"cpu",kernelFunc:LM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function PM(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;_D(s,"argMax");let o=xe(a,s.shape);const i=sd(o,s.shape.length);let u=s;const l=[];null!=i&&(u=OM({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(u),o=od(o.length,u.shape.length)),o=[o[0]],rd("argMax",o,u.shape.length);const[c,h]=td(u.shape,o),p=le(c),d=Pe(p,"int32"),f=le(h),m=n.data.get(u.dataId).values;for(let g=0;g<d.length;++g){const e=g*f;let t=m[e],n=0;for(let r=0;r<f;++r){const s=m[e+r];s>t&&(t=s,n=r)}d[g]=n}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}const BM={kernelName:ct,backendName:"cpu",kernelFunc:PM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function WM(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;_D(s,"argMin");let o=xe(a,s.shape);const i=sd(o,s.shape.length);let u=s;const l=[];null!=i&&(u=OM({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(u),o=od(o.length,u.shape.length)),o=[o[0]],rd("argMin",o,u.shape.length);const[c,h]=td(u.shape,o),p=le(c),d=Pe(p,"int32"),f=le(h),m=n.data.get(u.dataId).values;for(let g=0;g<d.length;++g){const e=g*f;let t=m[e],n=0;for(let r=0;r<f;++r){const s=m[e+r];s<t&&(t=s,n=r)}d[g]=n}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}const VM={kernelName:ht,backendName:"cpu",kernelFunc:WM},UM=MD(pt,(e=>Math.asin(e))),GM={kernelName:pt,backendName:"cpu",kernelFunc:UM},jM=MD(dt,(e=>Math.asinh(e))),HM={kernelName:dt,backendName:"cpu",kernelFunc:jM},qM=MD(ft,(e=>Math.atan(e))),KM={kernelName:ft,backendName:"cpu",kernelFunc:qM},XM=GD(((e,t)=>Math.atan2(e,t))),JM=hM(gt,XM),YM={kernelName:gt,backendName:"cpu",kernelFunc:JM},ZM=MD(mt,(e=>Math.atanh(e))),QM={kernelName:mt,backendName:"cpu",kernelFunc:ZM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eL(e,t,n,r,s,a){const o=s.strideHeight,i=s.strideWidth,u=s.dilationHeight,l=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,d=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=ki(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let v=0;v<s.batchSize;++v){const t=v*y,n=v*r[0];for(let m=0;m<s.inChannels;++m)for(let y=0;y<s.outHeight;++y){const v=y*o-p,w=Math.max(0,v),k=Math.min(s.inHeight,c+v),I=t+y*b;for(let t=0;t<s.outWidth;++t){const o=t*i-d,c=Math.max(0,o),p=Math.min(s.inWidth,h+o);let y=f,b=0,v=0;for(let t=w;t<k;t+=u){const s=n+t*r[1];for(let t=c;t<p;t+=l){const n=s+t*r[2],o=e[n+m];"max"===a&&o>y?y=o:"avg"===a&&(b+=o,v++)}if(isNaN(y))break}const N=I+t*x+m;g[N]="avg"===a?b/v:y}}}return m}function tL(e,t,n,r,s=!1,a=!1){const o=ki(r.outShape,"int32"),i=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,m=ki(t,n,e);for(let g=0;g<r.batchSize;++g)for(let e=0;e<r.inChannels;++e)for(let t=0;t<r.outHeight;++t){const n=t*i-d;let y=n;while(y<0)y+=l;const b=Math.min(r.inHeight,h+n);for(let i=0;i<r.outWidth;++i){const h=i*u-f;let d=h;while(d<0)d+=c;const x=Math.min(r.inWidth,p+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let t=y;t<b;t+=l){const o=t-n;for(let n=d;n<x;n+=c){const i=n-h,u=m.get(g,t,n,e);u>v&&(v=u,w=s?a?((g*r.inHeight+t)*r.inWidth+n)*r.inChannels+e:(t*r.inWidth+n)*r.inChannels+e:o*p+i)}}o.set(w,g,t,i,e)}}return o}function nL(e,t,n,r,s,a){const o=s.strideDepth,i=s.strideHeight,u=s.strideWidth,l=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,p=s.effectiveFilterDepth,d=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=ki(s.outShape,n),v=x.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],N=s.outShape[4];for(let S=0;S<s.batchSize;++S){const t=S*w,n=S*r[0];for(let x=0;x<s.inChannels;++x)for(let w=0;w<s.outDepth;++w){const S=w*o-m;let T=S;while(T<0)T+=l;const C=Math.min(s.inDepth,p+S),$=t+w*k;for(let t=0;t<s.outHeight;++t){const o=t*i-g;let p=o;while(p<0)p+=c;const m=Math.min(s.inHeight,d+o),w=$+t*I;for(let t=0;t<s.outWidth;++t){const o=t*u-y;let i=o;while(i<0)i+=h;const d=Math.min(s.inWidth,f+o),g=w+t*N;let k=b,I=0,S=0;for(let t=T;t<C;t+=l){const s=n+t*r[1];for(let t=p;t<m;t+=c){const n=s+t*r[2];for(let t=i;t<d;t+=h){const s=n+t*r[3],o=e[s+x];if("max"===a&&o>k?k=o:"avg"===a&&(I+=o,S++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}const $=g+x;v[$]="avg"===a?I/Math.max(S,1):k}}}}return x}function rL(e,t){const n=ki(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,d=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-p;let x=b;while(x<0)x+=o;const v=Math.min(t.inDepth,l+b);for(let r=0;r<t.outHeight;++r){const l=r*s-d;let p=l;while(p<0)p+=i;const w=Math.min(t.inHeight,c+l);for(let s=0;s<t.outWidth;++s){const d=s*a-f;let k=d;while(k<0)k+=u;const I=Math.min(t.inWidth,h+d);let N=Number.NEGATIVE_INFINITY,S=-1;for(let t=x;t<v;t+=o){const n=t-b;for(let r=p;r<w;r+=i){const s=r-l;for(let a=k;a<I;a+=u){const o=a-d,i=e.get(m,t,r,a,g);i>=N&&(N=i,S=n*c*h+s*c+o)}}}n.set(S,m,y,r,s,g)}}}return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sL(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;_D(s,"avgPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=r,l=1;oe(ph(o,l),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`));const c=Zc(s.shape,a,o,l,i,u);let h;if(1===c.filterWidth&&1===c.filterHeight&&he(c.inShape,c.outShape))h=BD({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=Fe(s.shape),r=eL(e,s.shape,s.dtype,t,c,"avg");h=n.makeTensorInfo(c.outShape,s.dtype,r.values)}return h}const aL={kernelName:yt,backendName:"cpu",kernelFunc:sL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oL(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:u,dataFormat:l}=r;_D(s,"avgPool3d");const c=Qc(s.shape,a,o,1,i,u,l),h=n.data.get(s.dataId).values,p=nL(h,s.shape,s.dtype,Fe(s.shape),c,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}const iL={kernelName:xt,backendName:"cpu",kernelFunc:oL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uL(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:o,strides:i,pad:u,dimRoundingMode:l}=r;_D([s,a],"avgPool3DGrad");const c=Qc(a.shape,o,i,1,u,l),h=c.strideDepth,p=c.strideHeight,d=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=v-1-c.padInfo.front,N=k-1-c.padInfo.left,S=w-1-c.padInfo.top,T=ki(a.shape,"float32"),C=1/(f*m*g),$=n.bufferSync(s);for(let E=0;E<c.batchSize;++E)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=t-I,a=n-S,o=r-N;let i=0;for(let t=0;t<v;t+=y){const n=(s+t)/h;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let t=0;t<w;t+=b){const r=(a+t)/p;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let t=0;t<k;t+=x){const s=(o+t)/d;if(s<0||s>=c.outWidth||Math.floor(s)!==s)continue;const a=$.get(E,n,r,s,e);i+=a}}}T.set(i*C,E,t,n,r,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}const lL={kernelName:vt,backendName:"cpu",kernelFunc:uL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cL(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a;_D([s,a],"avgPoolGrad");const{filterSize:i,strides:u,pad:l}=r,c=Zc(o.shape,i,u,1,l),h=c.strideHeight,p=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,v=y-1-c.padInfo.top,w=ki(o.shape,"float32"),k=1/(d*f),I=n.data.get(s.dataId).values,N=ki(s.shape,"float32",I);for(let S=0;S<c.batchSize;++S)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inHeight;++t)for(let n=0;n<c.inWidth;++n){const r=t-v,s=n-x;let a=0;for(let t=0;t<y;t+=m){const n=(r+t)/h;if(!(n<0||n>=c.outHeight||Math.floor(n)!==n))for(let t=0;t<b;t+=g){const r=(s+t)/p;if(r<0||r>=c.outWidth||Math.floor(r)!==r)continue;const o=N.get(S,n,r,e);a+=o}}w.set(a*k,S,t,n,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}const hL={kernelName:bt,backendName:"cpu",kernelFunc:cL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pL(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:o,mean:i,variance:u}=t;oe(i.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),oe(null==o||i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),oe(null==a||i.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),_D([s,i,u,a,o],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,p=n.data.get(u.dataId).values,d=a?n.data.get(a.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=d.length,b=p.length,x=h.length;let v=0,w=0,k=0,I=0;for(let N=0;N<c.length;++N)m[N]=f[v++]+(c[N]-h[w++])*d[k++]/Math.sqrt(p[I++]+l),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(s.shape,s.dtype,m)}const dL={kernelName:dn,backendName:"cpu",kernelFunc:pL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fL(e,t,n,r,s){const a=ac(r,t,n),o=le(n),i=Fe(r);if(a){const n=oc(t,i);return"string"===s?e.slice(n,n+o):e.subarray(n,n+o)}const u="string"===s?Gv(e):e,l=ki(r,s,u),c=ki(n,s);for(let h=0;h<c.size;++h){const e=c.indexToLoc(h),n=e.map(((e,n)=>e+t[n]));c.set(l.get(...n),...e)}return"string"===s?jv(c.values):c.values}function mL(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:o}=r;_D(s,"slice");const[i,u]=ic(s,a,o);ql(s,i,u);const l=n.data.get(s.dataId).values,c=fL(l,i,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,c)}const gL={kernelName:Rr,backendName:"cpu",kernelFunc:mL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yL(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:o}=r;_D([s],"batchToSpaceND");const i=a.reduce(((e,t)=>e*t)),u=Yx(s.shape,a,i),l=Zx(u.length,a.length),c=Qx(s.shape,a,i),h=ev(o,a.length),p=tv(c,o,a.length),d=yM({inputs:{x:s},backend:n,attrs:{shape:u}}),f=OM({inputs:{x:d},backend:n,attrs:{perm:l}}),m=yM({inputs:{x:f},backend:n,attrs:{shape:c}}),g=mL({inputs:{x:m},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const bL={kernelName:kt,backendName:"cpu",kernelFunc:yL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xL(e,t,n,r,s){const a=le(r),o=Pe(s,n);for(let i=0;i<e.length;i++){const n=e[i];if(n<0)throw new Error("Input x must be non-negative!");n>=s||(o[n]+=a>0?t[i]:1)}return o}function vL(e,t,n,r=!1){const s=e.shape[0],a=e.shape[1],o=ki([s,n],t.dtype);for(let i=0;i<s;i++)for(let s=0;s<a;s++){const a=e.get(i,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?o.set(1,i,a):t.size>0?o.set(o.get(i,a)+t.get(i,s),i,a):o.set(o.get(i,a)+1,i,a))}return o}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wL(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o}=r,i=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,l=xL(i,u,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,l)}const kL={kernelName:It,backendName:"cpu",kernelFunc:wL};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function IL(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,i=Fu(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const NL={kernelName:St,backendName:"cpu",kernelFunc:IL},SL=ZD((e=>Math.ceil(e))),TL=LD(Ct,SL),CL={kernelName:Ct,backendName:"cpu",kernelFunc:TL},$L=MD($t,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),EL={kernelName:$t,backendName:"cpu",kernelFunc:$L},AL=e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(le(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.real,o=s.complexTensorInfos.imag,i=n.data.get(a.dataId).values,u=n.data.get(o.dataId).values;for(let l=0;l<i.length;l++){const e=i[l],t=u[l];r[l]=Math.hypot(e,t)}return n.makeOutput(r,t.shape,"float32")},RL={kernelName:At,backendName:"cpu",kernelFunc:AL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _L(e,t,n,r){const s=ke(n,le(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=le(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const a="string"===n?Gv(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const i=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[i+t]=a[o++]}r+=e.shape[1]}))}return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function OL(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const FL={kernelName:vn,backendName:"cpu",kernelFunc:OL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function DL(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=xe(s,t[0].shape)[0],o=t.map((e=>e.shape));Wx(o,a);let i=Vx(t.map((e=>e.shape)),a);if(0===le(i))return n.makeTensorInfo(i,t[0].dtype,[]);const u=t.filter((e=>le(e.shape)>0));if(1===u.length)return BD({inputs:{x:u[0]},backend:n});if("complex64"===u[0].dtype){const e=u.map((e=>oM({inputs:{input:e},backend:n}))),t=u.map((e=>OL({inputs:{input:e},backend:n}))),r=DL({inputs:e,backend:n,attrs:{axis:a}}),s=DL({inputs:t,backend:n,attrs:{axis:a}}),o=rM({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}const l=u.map((e=>{const t=le(e.shape.slice(a)),r=[-1,t];return yM({inputs:{x:e},backend:n,attrs:{shape:r}})})),c=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=Vx(l.map((e=>e.shape)),1);const h=1===l[0].shape[0],p=_L(c,i,t[0].dtype,h),d=Vx(u.map((e=>e.shape)),a),f=n.makeTensorInfo(d,t[0].dtype,p);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const ML={kernelName:Rt,backendName:"cpu",kernelFunc:DL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function LL(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dataFormat:u,dilations:l,dimRoundingMode:c}=r;_D([s,a],"conv2d");const h=fh(u),p=eh(s.shape,a.shape,o,l,i,c,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,v=new ba(p.outShape,s.dtype),w=Fe(s.shape),k=Fe(a.shape),I=w[0],N=x?w[1]:w[2],S=x?w[2]:1,T=x?1:w[1],C=v.strides[0],$=x?v.strides[1]:v.strides[2],E=x?v.strides[2]:1,A=x?1:v.strides[1],R=n.data.get(s.dataId).values,_=n.data.get(a.dataId).values,O=v.values;for(let F=0;F<p.batchSize;++F){const e=F*I,t=F*C;for(let n=0;n<p.outHeight;++n){const r=t+n*$,s=n*p.strideHeight-b;for(let t=0;t<d;++t){const n=s+t*m;if(n<0||n>=p.inHeight)continue;const a=t*k[0],o=e+n*N;for(let e=0;e<p.outWidth;++e){const t=r+e*E,n=e*p.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=p.inWidth)continue;const s=a+e*k[1],i=o+r*S;let u=s;for(let e=0;e<p.inChannels;++e){const n=R[i+e*T];for(let e=0;e<p.outChannels;++e)O[t+e*A]+=n*_[u+e];u+=p.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,O)}const zL={kernelName:_t,backendName:"cpu",kernelFunc:LL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function PL(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;_D([s,a],"conv2dBackpropFilter");const h=fh(u),p=eh(s.shape,c,o,1,i,l,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new ba(p.filterShape,"float32"),x=p.padInfo.left,v=p.padInfo.top,w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=new ba(s.shape,s.dtype,w),N=new ba(a.shape,a.dtype,k);for(let S=0;S<m;++S){const e=Math.max(0,Math.ceil((v-S)/d)),t=Math.min(p.outHeight,(p.inHeight+v-S)/d);for(let n=0;n<g;++n){const r=Math.max(0,Math.ceil((x-n)/f)),s=Math.min(p.outWidth,(p.inWidth+x-n)/f);for(let a=0;a<p.inChannels;++a)for(let o=0;o<p.outChannels;++o){let i=0;for(let u=0;u<p.batchSize;++u)for(let l=e;l<t;++l){const e=S+l*d-v;for(let t=r;t<s;++t){const r=n+t*f-x;i+=y?I.get(u,e,r,a)*N.get(u,l,t,o):I.get(u,a,e,r)*N.get(u,o,l,t)}}b.set(i,S,n,a,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}const BL={kernelName:Ot,backendName:"cpu",kernelFunc:PL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function WL(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:o,strides:i,pad:u,dataFormat:l,dimRoundingMode:c}=r;_D([s,a],"conv2dBackpropInput");const h=Fe(a.shape),p=Fe(s.shape);let d=fh(l);const f=eh(o,a.shape,i,1,u,c,!1,d),m=new ba(f.inShape,"float32"),g=m.values,y=n.data.get(s.dataId).values,b=n.data.get(a.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:I,filterWidth:N,inChannels:S,inHeight:T,inWidth:C,outChannels:$,outHeight:E,outWidth:A,strideHeight:R,strideWidth:_}=f;d=f.dataFormat;const O=I-1-f.padInfo.top,F=N-1-f.padInfo.left,D="channelsLast"===d,M=m.strides[0],L=D?m.strides[1]:m.strides[2],z=D?m.strides[2]:1,P=D?1:m.strides[1],B=p[0],W=D?p[1]:p[2],V=D?p[2]:1,U=D?1:p[1];for(let G=0;G<k;++G)for(let e=0;e<S;++e)for(let t=0;t<T;++t){const n=t-O,r=Math.max(0,Math.ceil(n/R)),s=Math.min(E,(I+n)/R);for(let a=0;a<C;++a){const o=a-F,i=Math.max(0,Math.ceil(o/_)),u=Math.min(A,(N+o)/_);let l=0;for(let t=r;t<s;++t){const r=t*R-n;for(let n=i;n<u;++n){const s=n*_-o,a=B*G+W*t+V*n,i=x*(I-1-r)+v*(N-1-s)+w*e;for(let e=0;e<$;++e){const t=y[a+U*e],n=b[i+e];l+=t*n}}}const c=M*G+L*t+z*a+P*e;g[c]=l}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}const VL={kernelName:Ft,backendName:"cpu",kernelFunc:WL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function UL(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:u}=r;_D([s,a],"conv3d");const l=th(s.shape,a.shape,o,u,i),{filterDepth:c,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,v=new ba(l.outShape,s.dtype),w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=v.values,N=Fe(s.shape),S=Fe(a.shape);for(let T=0;T<l.batchSize;++T){const e=T*N[0],t=T*v.strides[0];for(let n=0;n<l.outDepth;++n){const r=t+n*v.strides[1],s=n*l.strideDepth-y;for(let t=0;t<c;++t){const n=s+t*d;if(n<0||n>=l.inDepth)continue;const a=t*S[0],o=e+n*N[1];for(let e=0;e<l.outHeight;++e){const t=r+e*v.strides[2],n=e*l.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=l.inHeight)continue;const s=a+e*S[1],i=o+r*N[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-b;for(let e=0;e<p;++e){const t=r+e*m;if(t<0||t>=l.inWidth)continue;const a=s+e*S[2],o=i+t*l.inChannels;let u=a;for(let e=0;e<l.inChannels;++e){const t=w[o+e];for(let e=0;e<l.outChannels;++e)I[n+e]+=t*k[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}const GL={kernelName:Dt,backendName:"cpu",kernelFunc:UL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jL(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,filterShape:u}=r;_D([s,a],"conv3dBackpropFilterV2");const l=Fe(s.shape),c=Fe(a.shape),h=th(s.shape,u,o,1,i),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new ba(h.filterShape,"float32"),x=b.values,[v,w,k,I]=b.strides,N=n.data.get(a.dataId).values,[S,T,C,$]=c,E=n.data.get(s.dataId).values,[A,R,_,O]=l,F=h.padInfo.front,D=h.padInfo.left,M=h.padInfo.top;for(let L=0;L<m;++L){const e=Math.max(0,Math.ceil((F-L)/p)),t=Math.min(h.outDepth,(h.inDepth+F-L)/p),n=L*v;for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((M-r)/d)),a=Math.min(h.outHeight,(h.inHeight+M-r)/d),o=r*w+n;for(let n=0;n<y;++n){const i=Math.max(0,Math.ceil((D-n)/f)),u=Math.min(h.outWidth,(h.inWidth+D-n)/f),l=n*k+o;for(let o=0;o<h.inChannels;++o){const c=o*I+l;for(let l=0;l<h.outChannels;++l){let m=0;for(let c=0;c<h.batchSize;++c){const h=c*A,g=c*S;for(let c=e;c<t;++c){const e=L+c*p-F,t=e*R+h,y=c*T+g;for(let c=s;c<a;++c){const e=r+c*d-M,s=e*_+t,a=c*C+y;for(let t=i;t<u;++t){const e=n+t*f-D,r=e*O+s,i=t*$+a;m+=E[r+o]*N[i+l]}}}}x[c+l]=m}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}const HL={kernelName:Mt,backendName:"cpu",kernelFunc:jL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qL(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:o,strides:i,inputShape:u}=r;_D([s],"conv3dBackpropInputV2");const l=Fe(s.shape),c=Fe(a.shape),h=th(u,a.shape,i,1,o),p=new ba(h.inShape,"float32"),d=p.values,[f,m,g,y]=p.strides,b=n.data.get(s.dataId).values,[x,v,w,k]=l,I=n.data.get(a.dataId).values,[N,S,T,C]=c,{batchSize:$,filterDepth:E,filterHeight:A,filterWidth:R,inChannels:_,inDepth:O,inHeight:F,inWidth:D,outChannels:M,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=h,U=E-1-h.padInfo.front,G=A-1-h.padInfo.top,j=R-1-h.padInfo.left;for(let H=0;H<$;++H)for(let e=0;e<_;++e)for(let t=0;t<O;++t){const n=t-U,r=Math.max(0,Math.ceil(n/B)),s=Math.min(L,(E+n)/B);for(let a=0;a<F;++a){const o=a-G,i=Math.max(0,Math.ceil(o/W)),u=Math.min(z,(A+o)/W);for(let l=0;l<D;++l){const c=l-j,h=Math.max(0,Math.ceil(c/V)),p=Math.min(P,(R+c)/V);let $=0;for(let t=r;t<s;++t){const r=t*B-n;for(let n=i;n<u;++n){const s=n*W-o;for(let a=h;a<p;++a){const o=a*V-c,i=x*H+v*t+w*n+k*a,u=N*(E-1-r)+S*(A-1-s)+T*(R-1-o)+C*e;for(let e=0;e<M;++e){const t=b[i+e],n=I[u+e];$+=t*n}}}}d[f*H+m*t+g*a+y*l+e]=$}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}const KL={kernelName:Lt,backendName:"cpu",kernelFunc:qL},XL=MD(zt,(e=>Math.cos(e))),JL={kernelName:zt,backendName:"cpu",kernelFunc:XL},YL=MD(Pt,(e=>Math.cosh(e))),ZL={kernelName:Pt,backendName:"cpu",kernelFunc:YL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function QL(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:o}=t,{cropSize:i,method:u,extrapolationValue:l}=r,[c,h,p,d]=s.shape,f=a.shape[0],[m,g]=i,y=ki([f,m,g,d],"float32"),b=n.data.get(a.dataId).values,x=n.data.get(o.dataId).values,v=n.data.get(s.dataId).values,w=Fe(s.shape),k=Fe(y.shape);for(let I=0;I<f;I++){const e=4*I,t=b[e],n=b[e+1],r=b[e+2],s=b[e+3],a=x[I];if(a>=c)continue;const o=m>1?(r-t)*(h-1)/(m-1):0,i=g>1?(s-n)*(p-1)/(g-1):0;for(let c=0;c<m;c++){const e=m>1?t*(h-1)+c*o:.5*(t+r)*(h-1);if(e<0||e>h-1)for(let t=0;t<g;t++)for(let e=0;e<d;e++){const n=e+t*k[2]+c*k[1]+I*k[0];y.values[n]=l}else if("bilinear"===u){const t=Math.floor(e),r=Math.ceil(e),o=e-t;for(let e=0;e<g;e++){const u=g>1?n*(p-1)+e*i:.5*(n+s)*(p-1);if(u<0||u>p-1){for(let t=0;t<d;t++){const n=t+e*k[2]+c*k[1]+I*k[0];y.values[n]=l}continue}const h=Math.floor(u),f=Math.ceil(u),m=u-h;for(let n=0;n<d;n++){let s=n+h*w[2]+t*w[1]+a*w[0];const i=v[s];s=n+f*w[2]+t*w[1]+a*w[0];const u=v[s];s=n+h*w[2]+r*w[1]+a*w[0];const l=v[s];s=n+f*w[2]+r*w[1]+a*w[0];const p=v[s],d=i+(u-i)*m,g=l+(p-l)*m;s=n+e*k[2]+c*k[1]+I*k[0],y.values[s]=d+(g-d)*o}}}else for(let t=0;t<g;++t){const r=g>1?n*(p-1)+t*i:.5*(n+s)*(p-1);if(r<0||r>p-1){for(let e=0;e<d;e++){const n=e+t*k[2]+c*k[1]+I*k[0];y.values[n]=l}continue}const o=Math.round(r),u=Math.round(e);for(let e=0;e<d;e++){const n=e+o*w[2]+u*w[1]+a*w[0],r=e+t*k[2]+c*k[1]+I*k[0];y.values[r]=v[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}const ez={kernelName:Vt,backendName:"cpu",kernelFunc:QL};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tz(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r;_D(s,"cumprod");const u=sd([a],s.shape.length);let l=s;null!=u&&(l=OM({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=od(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=Fa(l.dtype,"int32"),p=ze(le(l.shape),h),d=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=i?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<d.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)p[t]=o?1:d[t];else{const n=m(y,e-1);p[t]=o?d[n]*p[n]:d[t]*p[n]}}const g=n.makeTensorInfo(l.shape,h,p);if(null!=u){const e=ad(u),t=OM({inputs:{x:g},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),t}return g}const nz={kernelName:Bt,backendName:"cpu",kernelFunc:tz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rz(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r;_D(s,"cumsum");const u=sd([a],s.shape.length);let l=s;null!=u&&(l=OM({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=od(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=Fa(l.dtype,"int32"),p=Pe(le(l.shape),h),d=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=i?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<d.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)p[t]=o?0:d[t];else{const n=m(y,e-1);p[t]=o?d[n]+p[n]:d[t]+p[n]}}const g=n.makeTensorInfo(l.shape,h,p);if(null!=u){const e=ad(u),t=OM({inputs:{x:g},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),t}return g}const sz={kernelName:Wt,backendName:"cpu",kernelFunc:rz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function az(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o,binaryOutput:i}=r;if(1===s.shape.length){const e=n.data.get(s.dataId).values,t=n.data.get(a.dataId).values,r=xL(e,t,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=vL(e,t,o,i);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}const oz={kernelName:Ut,backendName:"cpu",kernelFunc:az};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function iz(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:o}=r;oe("NHWC"===o,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`));const i=s.shape[0],u=s.shape[1],l=s.shape[2],c=s.shape[3],h=u*a,p=l*a,d=c/(a*a),f=n.data.get(s.dataId).values,m=new Float32Array(i*h*p*d);let g=0;for(let y=0;y<i;++y)for(let e=0;e<h;++e){const t=Math.floor(e/a),n=e%a;for(let e=0;e<p;++e){const r=Math.floor(e/a),s=e%a,o=(n*a+s)*d;for(let e=0;e<d;++e){const n=e+o,s=n+c*(r+l*(t+u*y));m[g++]=f[s]}}}return n.makeTensorInfo([i,h,p,d],s.dtype,m)}const uz={kernelName:Gt,backendName:"cpu",kernelFunc:iz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lz(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:u,dimRoundingMode:l}=r;_D([s,a],"depthwiseConv2DNative");const c=Fe(s.shape),h=Fe(a.shape);let p=u;null==p&&(p=[1,1]),oe(ph(o,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${p}'`));const d=eh(s.shape,a.shape,o,p,i,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,x=b.left,v=b.top,w=d.outChannels/d.inChannels,k=new ba(d.outShape,s.dtype),I=n.data.get(s.dataId).values,N=n.data.get(a.dataId).values,S=k.values;for(let T=0;T<d.batchSize;++T){const e=T*c[0],t=T*k.strides[0];for(let n=0;n<d.outHeight;++n){const r=t+n*k.strides[1],s=n*d.strideHeight-v;for(let t=0;t<f;++t){const n=s+t*g;if(n<0||n>=d.inHeight)continue;const a=t*h[0],o=e+n*c[1];for(let e=0;e<d.outWidth;++e){const t=r+e*k.strides[2],n=e*d.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=d.inWidth)continue;const s=a+e*h[1],i=o+r*d.inChannels;let u=t,l=s;for(let e=0;e<d.inChannels;++e){const t=I[i+e];for(let e=0;e<w;++e)S[u+e]+=t*N[l+e];u+=w,l+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const cz={kernelName:jt,backendName:"cpu",kernelFunc:lz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hz(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:l,filterShape:c}=r;_D([s,a],"depthwiseConv2dNativeBackpropFilter");const h=eh(s.shape,c,o,i,u,l,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new ba(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(s.dataId).values,w=new ba(s.shape,s.dtype,v),k=n.data.get(a.dataId).values,I=new ba(a.shape,a.dtype,k);for(let N=0;N<f;++N){const e=Math.max(0,Math.ceil((b-N)/p)),t=Math.min(h.outHeight,(h.inHeight+b-N)/p);for(let n=0;n<m;++n){const r=Math.max(0,Math.ceil((y-n)/d)),s=Math.min(h.outWidth,(h.inWidth+y-n)/d);for(let a=0;a<h.outChannels;++a){const o=Math.trunc(a/x),i=a%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let i=e;i<t;++i){const e=N+i*p-b;for(let t=r;t<s;++t){const r=n+t*d-y;u+=w.get(l,e,r,o)*I.get(l,i,t,a)}}g.set(u,N,n,o,i)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}const pz={kernelName:Ht,backendName:"cpu",kernelFunc:hz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dz(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:l,inputShape:c}=r;_D([s,a],"depthwiseConv2DNativeBackpropInput");const h=Fe(s.shape),p=Fe(a.shape),d=eh(c,a.shape,o,i,u,l,!0),f=new ba(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(s.dataId).values,[v,w,k]=h,I=n.data.get(a.dataId).values,[N,S,T]=p,{batchSize:C,filterHeight:$,filterWidth:E,inChannels:A,inHeight:R,inWidth:_,outChannels:O,outHeight:F,outWidth:D,strideHeight:M,strideWidth:L}=d,z=$-1-d.padInfo.top,P=E-1-d.padInfo.left,B=O/A;for(let W=0;W<C;++W)for(let e=0;e<A;++e)for(let t=0;t<R;++t){const n=t-z,r=Math.max(0,Math.ceil(n/M)),s=Math.min(F,($+n)/M);for(let a=0;a<_;++a){const o=a-P,i=Math.max(0,Math.ceil(o/L)),u=Math.min(D,(E+o)/L);let l=0;for(let t=r;t<s;++t){const r=t*M-n;for(let n=i;n<u;++n){const s=n*L-o,a=v*W+w*t+k*n,i=N*($-1-r)+S*(E-1-s)+T*e;for(let t=0;t<B;++t){const n=e*B+t,r=x[a+n],s=I[i+t];l+=r*s}}}m[g*W+y*t+b*a+e]=l}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}const fz={kernelName:qt,backendName:"cpu",kernelFunc:dz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mz(e){const{inputs:t,backend:n}=e,{x:r}=t,s=le(r.shape),a=n.data.get(r.dataId).values,o=ki([s,s],r.dtype),i=o.values;for(let l=0;l<a.length;l++)i[l*s+l]=a[l];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,o.dtype,o.values)}const gz={kernelName:Kt,backendName:"cpu",kernelFunc:mz},yz={kernelName:Xt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:a,pad:o,dilations:i}=n,u=t,l=u.data.get(r.dataId).values,c=r.shape.length,h=u.data.get(s.dataId).values,p=s.shape.length,{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:N,dilationWidth:S,outShape:T}=Yc(r.shape,s.shape,a,o,"NHWC",i),C=le(T),$=T.length,E=ke(r.dtype,C);for(let R=0;R<d;++R)for(let e=0;e<y;++e){const t=e*v-x.top;for(let n=0;n<b;++n){const a=n*w-x.left;for(let o=0;o<g;++o){let i=Number.MIN_SAFE_INTEGER;for(let e=0;e<k;++e){const n=t+e*N;if(n>=0&&n<f)for(let t=0;t<I;++t){const u=a+t*S;if(u>=0&&u<m){const a=Ve([R,n,u,o],c,Fe(r.shape)),d=Ve([e,t,o],p,Fe(s.shape)),f=l[a]+h[d];f>i&&(i=f)}}}const u=Ve([R,e,n,o],$,Fe(T));E[u]=i}}}const A=u.write(Ys(E,r.dtype),T,r.dtype);return{dataId:A,shape:T,dtype:r.dtype}}},bz={kernelName:Yt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:o,pad:i,dilations:u}=n,l=t,c=Me(r.shape,l.data.get(r.dataId).values),h=Me(s.shape,l.data.get(s.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:S}=Yc(r.shape,s.shape,o,i,"NHWC",u);oe(a.rank===S.length,(()=>`Error in ${Yt}, dy must have the same rank as output ${S.length}, but got ${a.rank}`));const T=Me(S,l.data.get(a.dataId).values),C=Be(s.shape,s.dtype);for(let E=0;E<p;++E)for(let e=0;e<g;++e){const t=e*x-b.top;for(let n=0;n<y;++n){const r=n*v-b.left;for(let s=0;s<m;++s){let a=Number.MIN_SAFE_INTEGER,o=0,i=0;for(let e=0;e<w;++e){const n=t+e*I;if(n>=0&&n<d)for(let t=0;t<k;++t){const u=r+t*N;if(u>=0&&u<f){const r=c[E][n][u][s]+h[e][t][s];r>a&&(a=r,o=e,i=t)}}}C[o][i][s]+=T[E][e][n][s]}}}const $=l.write(Ys(C,r.dtype),s.shape,s.dtype);return{dataId:$,shape:s.shape,dtype:s.dtype}}},xz={kernelName:Jt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:o,pad:i,dilations:u}=n,l=t,c=Me(r.shape,l.data.get(r.dataId).values),h=Me(s.shape,l.data.get(s.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:S}=Yc(r.shape,s.shape,o,i,"NHWC",u);oe(a.rank===S.length,(()=>`Error in ${Jt}, dy must have the same rank as output ${S.length}, but got ${a.rank}`));const T=Me(S,l.data.get(a.dataId).values),C=Be(r.shape,r.dtype);for(let E=0;E<p;++E)for(let e=0;e<g;++e){const t=e*x-b.top;for(let n=0;n<y;++n){const r=n*v-b.left;for(let s=0;s<m;++s){let a=Number.MIN_SAFE_INTEGER,o=t<0?0:t,i=r<0?0:r;for(let e=0;e<w;++e){const n=t+e*I;if(n>=0&&n<d)for(let t=0;t<k;++t){const u=r+t*N;if(u>=0&&u<f){const r=c[E][n][u][s]+h[e][t][s];r>a&&(a=r,o=n,i=u)}}}C[E][o][i][s]+=T[E][e][n][s]}}}const $=l.write(Ys(C,r.dtype),r.shape,r.dtype);return{dataId:$,shape:r.shape,dtype:r.dtype}}},vz=GD(((e,t)=>e*t)),wz=pM(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),kz=hM(Yn,vz,wz),Iz={kernelName:Yn,backendName:"cpu",kernelFunc:kz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Nz(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;let i;_D(s,"sum"),i="bool"===s.dtype?lM({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):BD({inputs:{x:s},backend:n});const u=i.shape.length,l=xe(a,i.shape),c=sd(l,u);let h=l,p=i;null!=c&&(p=OM({inputs:{x:i},backend:n,attrs:{perm:c}}),h=od(h.length,u)),rd("sum",h,p.shape.length);const[d,f]=td(p.shape,h),m=Fa(p.dtype,"int32");let g=aM(n,d,m);const y=le(f),b=n.data.get(g.dataId).values,x=n.data.get(p.dataId).values;for(let v=0;v<b.length;++v){const e=v*y;let t=0;for(let n=0;n<y;++n)t+=x[e+n];b[v]=t}if(o){const e=nd(g.shape,l),t=g;g=yM({inputs:{x:g},backend:n,attrs:{shape:e}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(i),null!=c&&n.disposeIntermediateTensorInfo(p),g}const Sz={kernelName:zr,backendName:"cpu",kernelFunc:Nz};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Tz(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:o,summedDims:i,idDims:u}=kv(s,a.length);Nv(o.length,u,a);const{path:l,steps:c}=Sv(i,u),h=c.length;let p=null,d=o.length;const f=[];for(let m=0;m<h;++m){for(const e of c[m]){const{permutationIndices:t,expandDims:r}=Iv(d,u[e]);let s;Tv(t)?s=a[e]:(s=OM({inputs:{x:a[e]},backend:n,attrs:{perm:t}}),f.push(s));const o=s.shape.slice();for(let e=0;e<r.length;++e)o.splice(r[e],0,1);he(s.shape,o)||(s=yM({inputs:{x:s},backend:n,attrs:{shape:o}}),f.push(s)),null===p?p=s:(p=kz({inputs:{a:s,b:p},backend:n}),f.push(p))}m<h-1&&(l[m]>=0&&(p=Nz({inputs:{x:p},backend:n,attrs:{axis:l[m]-(o.length-d),keepDims:!1}}),f.push(p)),d--)}for(const m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}const Cz={kernelName:Qt,backendName:"cpu",kernelFunc:Tz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $z(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;_D([r,s],"eluGrad");const a=new Float32Array(le(s.shape)),o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values;for(let u=0;u<o.length;++u){const e=o[u];a[u]=e>=1?i[u]:i[u]*(e+1)}return n.makeTensorInfo(s.shape,"float32",a)}const Ez={kernelName:tn,backendName:"cpu",kernelFunc:$z},Az=GD(((e,t)=>e===t?1:0)),Rz=hM(rn,Az,null,"bool"),_z={kernelName:rn,backendName:"cpu",kernelFunc:Rz},Oz=sv,Fz=av,Dz=ov,Mz=iv,Lz=uv,zz=lv,Pz=MD(nn,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+Oz*n);return t*(1-((((zz*r+Lz)*r+Mz)*r+Dz)*r+Fz)*r*Math.exp(-n*n))})),Bz={kernelName:nn,backendName:"cpu",kernelFunc:Pz},Wz=ZD((e=>Math.exp(e))),Vz=LD(sn,Wz,"float32"),Uz={kernelName:sn,backendName:"cpu",kernelFunc:Vz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Gz(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,o=s.shape.length,i=s.shape.slice();let u=a;return a<0&&(oe(-(o+1)<=a,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),u=o+a+1),i.splice(u,0,1),yM({inputs:{x:s},backend:n,attrs:{shape:i}})}const jz={kernelName:an,backendName:"cpu",kernelFunc:Gz},Hz=ZD((e=>Math.expm1(e))),qz=LD(on,Hz),Kz={kernelName:on,backendName:"cpu",kernelFunc:qz},Xz=GD(((e,t)=>e/t)),Jz=hM(Zt,Xz),Yz={kernelName:Zt,backendName:"cpu",kernelFunc:Jz},Zz=GD(((e,t)=>e-t)),Qz=pM(((e,t,n,r)=>({real:e-n,imag:t-r}))),eP=hM(Qr,Zz,Qz),tP={kernelName:Qr,backendName:"cpu",kernelFunc:eP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nP(e,t,n){const r=e.shape,s=r[0],a=r[1],o=n.data.get(e.dataId),i=o.complexTensorInfos.real,u=o.complexTensorInfos.imag,l=[s,a],c=le(l),h=we("float32",c),p=we("float32",c);for(let g=0;g<s;g++){const e=mL({inputs:{x:i},backend:n,attrs:{begin:[g,0],size:[1,a]}}),r=mL({inputs:{x:u},backend:n,attrs:{begin:[g,0],size:[1,a]}}),s=rM({inputs:{real:e,imag:r},backend:n}),{real:o,imag:l}=rP(s,t,n),c=cv(o,l);for(let t=0;t<a;t++){const e=fv(c,t);h[g*a+t]=e.real,p[g*a+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s)}const d=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",p),m=rM({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}function rP(e,t,n){const r=le(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,o=n.data.get(s.complexTensorInfos.imag.dataId).values;if(sP(r)){const s=aP(a,o,r,t,n),i=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(i,"float32",s.real),t=n.makeTensorInfo(i,"float32",s.imag),a=n.makeTensorInfo([],"float32",Xs(r,"float32")),o=BD({inputs:{x:a},backend:n}),u=Yz.kernelFunc({inputs:{a:e,b:a},backend:n}),l=Yz.kernelFunc({inputs:{a:t,b:o},backend:n}),c=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:h}}return s}{const e=cv(a,o),n=oP(e,r,t);return hv(n)}}function sP(e){return 0===(e&e-1)}function aP(e,t,n,r,s){if(1===n)return{real:e,imag:t};const a=cv(e,t),o=n/2,i=pv(a),u=i.real,l=i.imag,c=[u.length],h=s.makeTensorInfo(c,"float32",u),p=s.makeTensorInfo(c,"float32",l),d=rM({inputs:{real:h,imag:p},backend:s}),f=dv(a),m=f.real,g=f.imag,y=[m.length],b=s.makeTensorInfo(y,"float32",m),x=s.makeTensorInfo(y,"float32",g),v=rM({inputs:{real:b,imag:x},backend:s}),w=aP(u,l,o,r,s),k=w.real,I=w.imag,N=[k.length],S=s.makeTensorInfo(N,"float32",k),T=s.makeTensorInfo(N,"float32",I),C=rM({inputs:{real:S,imag:T},backend:s}),$=aP(m,g,o,r,s),E=$.real,A=$.imag,R=[E.length],_=s.makeTensorInfo(R,"float32",E),O=s.makeTensorInfo(R,"float32",A),F=rM({inputs:{real:_,imag:O},backend:s}),D=gv(n,r),M=[D.real.length],L=s.makeTensorInfo(M,"float32",D.real),z=s.makeTensorInfo(M,"float32",D.imag),P=rM({inputs:{real:L,imag:z},backend:s}),B=kz({inputs:{a:P,b:F},backend:s}),W=mM({inputs:{a:C,b:B},backend:s}),V=eP({inputs:{a:C,b:B},backend:s}),U=oM({inputs:{input:W},backend:s}),G=oM({inputs:{input:V},backend:s}),j=OL({inputs:{input:W},backend:s}),H=OL({inputs:{input:V},backend:s}),q=DL({inputs:[U,G],backend:s,attrs:{axis:0}}),K=DL({inputs:[j,H],backend:s,attrs:{axis:0}}),X=s.data.get(q.dataId).values,J=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:X,imag:J}}function oP(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,o=0;for(let r=0;r<t;r++){const i=yv(s*r,t,n),u=fv(e,r);a+=u.real*i.real-u.imag*i.imag,o+=u.real*i.imag+u.imag*i.real}n&&(a/=t,o/=t),mv(r,a,o,s)}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function iP(e){const{inputs:t,backend:n}=e,{input:r}=t,s=le(r.shape),a=r.shape[r.shape.length-1],o=s/a,i=yM({inputs:{x:r},backend:n,attrs:{shape:[o,a]}}),u=nP(i,!1,n),l=yM({inputs:{x:u},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}const uP={kernelName:un,backendName:"cpu",kernelFunc:iP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lP(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,o=a||Re(s),i=ke(o,le(r));return hP(i,s,o),t.makeTensorInfo(r,o,i)}const cP={kernelName:ln,backendName:"cpu",kernelFunc:lP};function hP(e,t,n){e.fill(t)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const pP={kernelName:cn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,a=we(r.dtype,le(r.shape)),[o,i,u,l]=r.shape,c=s.data.get(r.dataId).values;for(let p=0;p<o;p++){const e=p*u*i*l;for(let t=0;t<i;t++){const n=t*(u*l);for(let t=0;t<u;t++){const r=t*l;for(let s=0;s<l;s++){const o=Math.round(u-t-1),i=e+n+r+s;let h=c[i];if(o>=0&&o<u){const t=o*l,r=e+n+t+s;h=c[r]}a[i]=h}}}}const h=s.write(a,r.shape,r.dtype);return{dataId:h,shape:r.shape,dtype:r.dtype}}},dP=ZD((e=>Math.floor(e))),fP=LD(hn,dP),mP={kernelName:hn,backendName:"cpu",kernelFunc:fP},gP=GD(((e,t)=>Math.floor(e/t))),yP=hM(pn,gP,null,"int32"),bP={kernelName:pn,backendName:"cpu",kernelFunc:yP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xP(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=LL({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(o){const e=m;if("NCHW"===c&&1===o.shape.length&&1!==o.shape[0]){const e=yM({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=mM({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=mM({inputs:{a:m,b:o},backend:n});n.disposeIntermediateTensorInfo(e)}if(d){const e=m;if("NCHW"===c&&"prelu"===d&&1===i.shape.length&&1!==i.shape[0]){const e=yM({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=nM(n,m,d,e,f),n.disposeIntermediateTensorInfo(e)}else m=nM(n,m,d,i,f);n.disposeIntermediateTensorInfo(e)}return m}const vP={kernelName:ms,backendName:"cpu",kernelFunc:xP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wP(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=lz({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(o){const e=m;m=mM({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=nM(n,m,d,i,f),n.disposeIntermediateTensorInfo(e)}return m}const kP={kernelName:gs,backendName:"cpu",kernelFunc:wP};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function IP(e,t,n,r,s,a,o,i,u){const l=ki([r,a],n);for(let c=0;c<r;c++){const n=[];let r=0;for(let t=0;t<s;t++){const a=e[c*s+t];r+=a*o[t],n.push(a)}if(r<0||r>=u/a)throw new Error(`Invalid indices: ${n} does not index into ${i}`);for(let e=0;e<a;e++)l.values[c*a+e]=t.get(...t.indexToLoc(r*a+e))}return l}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function NP(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=le(r.shape),o=s.shape,i=o[o.length-1],[u,l,c,h]=Wl(r,s);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const p=n.data.get(s.dataId).values,d=n.bufferSync(r),f=IP(p,d,r.dtype,l,i,c,h,r.shape,a);return n.makeTensorInfo(u,r.dtype,f.values)}const SP={kernelName:mn,backendName:"cpu",kernelFunc:NP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function TP(e,t,n){const r=ki(n,e.dtype);for(let s=0;s<r.size;++s){const n=r.indexToLoc(s),a=n.slice(),o=a[0],i=a[2],u=t.locToIndex([o,i]);a[2]=t.values[u];const l=e.locToIndex(a);0<=l&&l<e.values.length&&(r.values[s]=e.values[l])}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function CP(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:o,batchDims:i}=r;_D([s,a],"gatherV2");const u=xe(o,s.shape)[0],l=n.data.get(a.dataId).values,c=s.shape[u];for(let v=0;v<l.length;++v){const e=l[v];oe(e<=c-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${c-1}]`))}let h=i;null==i&&(h=0);const p=le(a.shape),d=Uv(s,a,u,h),f=yM({inputs:{x:s},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),m=yM({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,p/d.batchSize]}}),g=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize],y=n.bufferSync(m),b=n.bufferSync(f),x=TP(b,y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(d.outputShape,x.dtype,x.values)}const $P={kernelName:fn,backendName:"cpu",kernelFunc:CP},EP=GD(((e,t)=>e>t?1:0)),AP=hM(gn,EP,null,"bool"),RP={kernelName:gn,backendName:"cpu",kernelFunc:AP},_P=GD(((e,t)=>e>=t?1:0)),OP=hM(yn,_P,null,"bool"),FP={kernelName:yn,backendName:"cpu",kernelFunc:OP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function DP(e){const{inputs:t,backend:n}=e,{input:r}=t,s=le(r.shape),a=r.shape[r.shape.length-1],o=s/a,i=yM({inputs:{x:r},backend:n,attrs:{shape:[o,a]}}),u=nP(i,!0,n),l=yM({inputs:{x:u},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}const MP={kernelName:xn,backendName:"cpu",kernelFunc:DP},LP=MD(wn,(e=>Number.isFinite(e)?1:0),"bool"),zP={kernelName:wn,backendName:"cpu",kernelFunc:LP},PP=MD(kn,(e=>Math.abs(e)===1/0?1:0),"bool"),BP={kernelName:kn,backendName:"cpu",kernelFunc:PP},WP=MD(In,(e=>Number.isNaN(e)?1:0),"bool"),VP={kernelName:In,backendName:"cpu",kernelFunc:WP},UP=GD(((e,t)=>e<t?1:0)),GP=hM(Sn,UP,null,"bool"),jP={kernelName:Sn,backendName:"cpu",kernelFunc:GP},HP=GD(((e,t)=>e<=t?1:0)),qP=hM(Tn,HP,null,"bool"),KP={kernelName:Tn,backendName:"cpu",kernelFunc:qP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function XP(e,t,n){const r=(t-e)/(n-1),s=Pe(n,"float32");s[0]=e;for(let a=1;a<s.length;a++)s[a]=s[a-1]+r;return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function JP(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,o=XP(r,s,a);return t.makeTensorInfo([o.length],"float32",o)}const YP={kernelName:Cn,backendName:"cpu",kernelFunc:JP},ZP=ZD((e=>Math.log(e))),QP=LD($n,ZP),eB={kernelName:$n,backendName:"cpu",kernelFunc:QP},tB=MD(En,(e=>Math.log1p(e))),nB={kernelName:En,backendName:"cpu",kernelFunc:tB},rB=GD(((e,t)=>e&&t)),sB=hM(An,rB,null,"bool"),aB={kernelName:An,backendName:"cpu",kernelFunc:sB},oB=MD(Rn,(e=>e?0:1),"bool"),iB={kernelName:Rn,backendName:"cpu",kernelFunc:oB},uB=GD(((e,t)=>e||t)),lB=hM(_n,uB,null,"bool"),cB={kernelName:_n,backendName:"cpu",kernelFunc:lB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hB(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:o,alpha:i,beta:u}=r;_D(s,"LRN");const l=s.shape[3],c=l-1,h=n.data.get(s.dataId).values,p=le(s.shape),d=new Float32Array(p);function f(e){const t=e%l;let n=e-t+Math.max(0,t-a);const r=e-t+Math.min(t+a,c);let s=0;for(;n<=r;n++){const e=h[n];s+=e*e}return s}for(let m=0;m<p;m++){const e=f(m),t=h[m]*Math.pow(o+i*e,-u);d[m]=t}return n.makeTensorInfo(s.shape,s.dtype,d)}const pB={kernelName:Mn,backendName:"cpu",kernelFunc:hB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dB(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:o}=t,{depthRadius:i,bias:u,alpha:l,beta:c}=r;_D(o,"LRNGrad");const h=le(o.shape),p=o.shape[3],d=n.data.get(o.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(h),y=h;for(let b=0;b<y;b++){const e=b%p,t=b-e+Math.max(0,e-i),n=b-e+Math.min(p,e+i+1);let r=0;for(let s=t;s<n;s++)r+=Math.pow(f[s],2);r=l*r+u;for(let s=t;s<n;s++){let e=-2*l*c*f[s]*m[b]/r;b===s&&(e+=Math.pow(r,-c)),e*=d[b],g[s]+=e}}return n.makeTensorInfo(o.shape,s.dtype,g)}const fB={kernelName:Ln,backendName:"cpu",kernelFunc:dB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mB(e,t,n,r){const s=we(r,le(n));for(let a=0;a<s.length;++a){const n=a*t;let r=e[n];for(let s=0;s<t;++s){const t=e[n+s];(Number.isNaN(t)||t>r)&&(r=t)}s[a]=r}return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gB(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:o}=r,i=n;let u=s.shape;const l=u.length,c=xe(a,u);let h=c;const p=sd(h,l);let d=i.data.get(s.dataId).values;if(null!=p){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[p[t]];d=_M(d,u,s.dtype,p,e),h=od(h.length,l),u=e}_D(s,"max"),rd("max",h,l);const[f,m]=td(u,h),g=le(m),y=mB(d,g,f,s.dtype),b=i.write(y,f,s.dtype);let x=f;if(o){const e=nd(f,c);x=e}return{dataId:b,shape:x,dtype:s.dtype}}const yB={kernelName:zn,backendName:"cpu",kernelFunc:gB},bB=GD(((e,t)=>Math.max(e,t))),xB=hM(Pn,bB),vB={kernelName:Pn,backendName:"cpu",kernelFunc:xB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wB(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;_D(s,"maxPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=r,l=1;oe(ph(o,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`));const c=Zc(s.shape,a,o,l,i,u);let h;if(1===c.filterWidth&&1===c.filterHeight&&he(c.inShape,c.outShape))h=BD({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=Fe(s.shape),r=eL(e,s.shape,s.dtype,t,c,"max");h=n.makeTensorInfo(c.outShape,s.dtype,r.values)}return h}const kB={kernelName:Bn,backendName:"cpu",kernelFunc:wB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function IB(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:u,dataFormat:l}=r;_D(s,"maxPool3d");const c=Qc(s.shape,a,o,1,i,u,l),h=n.data.get(s.dataId).values,p=nL(h,s.shape,s.dtype,Fe(s.shape),c,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}const NB={kernelName:Vn,backendName:"cpu",kernelFunc:IB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function SB(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:o,strides:i,pad:u,dimRoundingMode:l}=r;_D([s,a],"maxPool3DGrad");const c=Qc(a.shape,o,i,1,u,l),h=n.bufferSync(a),p=rL(h,c),d=c.strideDepth,f=c.strideHeight,m=c.strideWidth,g=c.dilationDepth,y=c.dilationHeight,b=c.dilationWidth,x=c.effectiveFilterDepth,v=c.effectiveFilterHeight,w=c.effectiveFilterWidth,k=x-1-c.padInfo.front,I=w-1-c.padInfo.left,N=v-1-c.padInfo.top,S=ki(a.shape,"float32"),T=n.bufferSync(s);for(let C=0;C<c.batchSize;++C)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=t-k,a=n-N,o=r-I;let i=0;for(let t=0;t<x;t+=g){const n=(s+t)/d;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let r=0;r<v;r+=y){const s=(a+r)/f;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let a=0;a<w;a+=b){const u=(o+a)/m;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const l=x*v*w-1-p.get(C,n,s,u,e),h=t*v*w+r*w+a,d=l===h?1:0;if(0===d)continue;const f=T.get(C,n,s,u,e);i+=f*d}}}S.set(i,C,t,n,r,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}const TB={kernelName:Un,backendName:"cpu",kernelFunc:SB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function CB(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:o}=t,i=a;_D([a,o],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,p=Zc(i.shape,u,l,1,c,h),d=n.data.get(i.dataId).values,f=ki(p.outShape,i.dtype,tL(d,i.shape,i.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,v=p.effectiveFilterWidth,w=v-1-p.padInfo.left,k=x-1-p.padInfo.top,I=ki(i.shape,"float32"),N=n.data.get(s.dataId).values,S=ki(s.shape,"float32",N);for(let T=0;T<p.batchSize;++T)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inHeight;++t)for(let n=0;n<p.inWidth;++n){const r=t-k,s=n-w;let a=0;for(let t=0;t<x;t+=y){const n=(r+t)/m;if(!(n<0||n>=p.outHeight||Math.floor(n)!==n))for(let r=0;r<v;r+=b){const o=(s+r)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const i=x*v-1-f.get(T,n,o,e),u=t*v+r,l=i===u?1:0;if(0===l)continue;const c=S.get(T,n,o,e);a+=c*l}}I.set(a,T,t,n,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const $B={kernelName:Wn,backendName:"cpu",kernelFunc:CB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function EB(e,t,n,r,s){const a=Fe(t),o=eL(e,t,n,a,s,"max"),i=tL(e,t,n,s,!0,r);return[o.values,i.values]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const AB={kernelName:Gn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:o,includeBatchInIndex:i}=t,u=n;_D(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=Zc(r.shape,s,a,[1,1],o),[h,p]=EB(l,r.shape,r.dtype,i,c),d=u.write(h,c.outShape,r.dtype),f=u.write(p,c.outShape,r.dtype);return[{dataId:d,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function RB(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=xe(a,s.shape),u=td(s.shape,i),l=u[1],c=le(l),h=[],p=n.makeTensorInfo([],"float32",new Float32Array([c]));h.push(p);const d=lM({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});h.push(d);const f=Jz({inputs:{a:d,b:p},backend:n});h.push(f);const m=Nz({inputs:{x:f},backend:n,attrs:{axis:a,keepDims:o}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}const _B={kernelName:jn,backendName:"cpu",kernelFunc:RB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function OB(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;_D(s,"min");const i=xe(a,s.shape);let u=i;const l=sd(u,s.shape.length);let c=s;null!=l&&(c=OM({inputs:{x:s},backend:n,attrs:{perm:l}}),u=od(u.length,s.shape.length)),rd("min",u,c.shape.length);const[h,p]=td(c.shape,u),d=le(p),f=Pe(le(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*d;let t=m[e];for(let n=0;n<d;++n){const r=m[e+n];(Number.isNaN(r)||r<t)&&(t=r)}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(o){const e=nd(h,i),t=yM({inputs:{x:g},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(g),t}return g}const FB={kernelName:Hn,backendName:"cpu",kernelFunc:OB},DB=GD(((e,t)=>Math.min(e,t))),MB=hM(qn,DB),LB={kernelName:qn,backendName:"cpu",kernelFunc:MB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zB(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:o}=r;_D(s,"mirrorPad");const i=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=a.map((e=>e[0])),l=a.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===o?0:1,h=n.data.get(s.dataId).values,p=s.shape.length,d=Fe(s.shape),f=le(i),m=i.length,g=Fe(i),y=we(s.dtype,f);for(let x=0;x<f;x++){let e=Ue(x,m,g);for(let n=0;n<m;n++)e[n]<u[n]?e[n]=2*u[n]-e[n]-c:e[n]>=l[n]&&(e[n]=2*(l[n]-1)-e[n]+c);e=e.map(((e,t)=>e-u[t]));const t=Ve(e,p,d);y[x]=h[t]}const b=n.write(y,i,s.dtype);return{dataId:b,shape:i,dtype:s.dtype}}const PB={kernelName:Kn,backendName:"cpu",kernelFunc:zB},BB=GD(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),WB=hM(Xn,BB),VB={kernelName:Xn,backendName:"cpu",kernelFunc:WB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function UB(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,o=s.shape.length;let i=a;if(-1===i&&(i=o-1),i!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${i}`);const u=xe([i],s.shape),l=gB({inputs:{x:s},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=nd(l.shape,u),h=yM({inputs:{x:l},backend:n,attrs:{shape:c}}),p=eP({inputs:{a:s,b:h},backend:n}),d=Vz({inputs:{x:p},backend:n}),f=Nz({inputs:{x:d},backend:n,attrs:{axis:u,keepDims:!1}}),m=yM({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Jz({inputs:{a:d,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const GB={kernelName:Wr,backendName:"cpu",kernelFunc:UB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jB(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:o,normalized:i}=r;_D(s,"multinomial");const u=i?s:UB({inputs:{logits:s},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,p=[l,a],d=Pe(le(p),"int32");for(let f=0;f<l;++f){const e=f*c,t=new Float32Array(c-1);t[0]=h[e];for(let s=1;s<t.length;++s)t[s]=t[s-1]+h[e+s];const n=Sm.alea(o.toString()),r=f*a;for(let s=0;s<a;++s){const e=n();d[r+s]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){d[r+s]=n;break}}}return i||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(p,"int32",d)}const HB={kernelName:Jn,backendName:"cpu",kernelFunc:jB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qB(e,t,n){const r=Xs(-1,n);return vz([],t,r,e,n)}function KB(e){const{inputs:t,backend:n}=e,{x:r}=t;_D(r,"neg");const s=n.data.get(r.dataId).values,[a,o]=qB(s,r.shape,r.dtype);return n.makeTensorInfo(o,r.dtype,a)}const XB={kernelName:Zn,backendName:"cpu",kernelFunc:KB},JB=yb;function YB(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=r;_D(s,"NonMaxSuppression");const l=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=JB(l,c,o,i,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}const ZB={kernelName:er,backendName:"cpu",kernelFunc:YB},QB=bb;function eW(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:l}=r;_D(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:d}=QB(c,h,o,i,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}const tW={kernelName:tr,backendName:"cpu",kernelFunc:eW},nW=xb;function rW(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=r;_D(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,p=o,d=i,f=u,m=l,{selectedIndices:g,selectedScores:y}=nW(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const sW={kernelName:nr,backendName:"cpu",kernelFunc:rW},aW=GD(((e,t)=>e!==t?1:0)),oW=hM(Qn,aW,null,"bool"),iW={kernelName:Qn,backendName:"cpu",kernelFunc:oW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uW(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:o,onValue:i,offValue:u}=r;_D(s,"oneHot");const l=le(s.shape),c=new Float32Array(l*o);c.fill(u);const h=n.data.get(s.dataId).values;for(let p=0;p<l;++p)h[p]>=0&&h[p]<o&&(c[p*o+h[p]]=i);return n.makeTensorInfo([...s.shape,o],a,c)}const lW={kernelName:sr,backendName:"cpu",kernelFunc:uW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cW(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=oM({inputs:{input:r},backend:n}),t=cW({inputs:{x:e},backend:n}),s=OL({inputs:{input:r},backend:n}),a=cW({inputs:{x:s},backend:n}),o=rM({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),o}return lP({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const hW={kernelName:cs,backendName:"cpu",kernelFunc:cW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pW(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const e=oM({inputs:{input:r},backend:n}),t=pW({inputs:{x:e},backend:n}),s=OL({inputs:{input:r},backend:n}),a=cW({inputs:{x:s},backend:n}),o=rM({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),o}return lP({backend:n,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}const dW={kernelName:rr,backendName:"cpu",kernelFunc:pW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fW(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return Gz({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,o=t[0].dtype;t.forEach((e=>{ie(a,e.shape,"All tensors passed to stack must have matching shapes"),oe(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],u=t.map((e=>{const t=Gz({inputs:{input:e},backend:n,attrs:{dim:s}});return i.push(t),t})),l=DL({inputs:u,backend:n,attrs:{axis:s}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const mW={kernelName:ar,backendName:"cpu",kernelFunc:fW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gW(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:o}=r;_D(s,"pad");const i=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=a.map((e=>e[0])),l=n.data.get(s.dataId).values,c=le(s.shape),h=s.shape.length,p=Fe(s.shape),d=le(i),f=i.length,m=Fe(i),g=we(s.dtype,d);0!==o&&g.fill(o);for(let b=0;b<c;b++){const e=Ue(b,h,p),t=e.map(((e,t)=>e+u[t])),n=Ve(t,f,m);g[n]=l[b]}const y=n.write(g,i,s.dtype);return{dataId:y,shape:i,dtype:s.dtype}}const yW={kernelName:or,backendName:"cpu",kernelFunc:gW},bW=GD(((e,t)=>Math.pow(e,t))),xW=hM(ur,bW),vW={kernelName:ur,backendName:"cpu",kernelFunc:xW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wW(e,t,n,r){const[s,a]=td(e,r),o=Fa(t,"int32"),i=Pe(le(s),o),u=le(a);for(let l=0;l<i.length;++l){const e=l*u;let t=1;for(let r=0;r<u;++r)t*=n[e+r];i[l]=t}return{outVals:i,outShape:s,outDtype:o}}function kW(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;_D(s,"prod");const i=s.shape.length,u=xe(a,s.shape),l=sd(u,i);let c=u,h=s;const p=[];null!=l&&(h=OM({inputs:{x:s},backend:n,attrs:{perm:l}}),p.push(h),c=od(c.length,i));const d=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=wW(h.shape,h.dtype,d,c);let y=m;return o&&(y=nd(m,u)),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}const IW={kernelName:cr,backendName:"cpu",kernelFunc:kW};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function NW(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){const s=Ue(r,t.length,Fe(t)).join(",");throw new Error(`indices[${s}] = ${e} is not in [0, ${n})`)}}))}function SW(e,t){for(let n=0;n<e.length;++n){const r=e[n],s=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}function TW(e,t,n,r){const s=[];let a=0;const o=t.length-1+n.length,i=new Array(o).fill(null).map((()=>[0]));SW(n,r);let u=1;for(let l=0;l<t.length-1;++l){u*=t[l];const e=t[l+1];for(let t=1;t<u+1;++t)i[l].push(t*e)}for(let l=0;l<e.length;++l){let r=e[l],o=e[l]+1;for(let e=0;e<n.length;++e){const s=n[e],a=e+t.length-1;if(a>=0){const e=i[a],t=e[e.length-1]-s[r];for(let n=r;n<o;++n)i[a].push(s[n+1]+t)}r=s[r],o=s[o]}o!==r&&(s.push([r,o]),a+=o-r)}return{outSplits:i,valueSlices:s,numValues:a}}function CW(e){const t=[];for(let n=0;n<e.length;++n){const r=e[n].length,s=ke("int32",r);t.push(s),e[n].forEach(((e,t)=>s[t]=e))}return t}function $W(e,t){const n=e.slice(0,t);while(n.length<t)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function EW(e,t,n,r,s,a){const o=$W(t,2)[1],i=$W(a,2)[1];let u=0;for(const l of n)for(let t=l[0];t<l[1];++t){for(let n=0;n<r;++n)s[u*i+n]=e[t*o+n];++u}}function AW(e,t,n,r,s){const a=t.slice();a[0]=s;const o=ke(n,le(a)),i=e.length,u=0===i?0:i/t[0];return EW(e,t,r,u,o,a),[o,a]}function RW(e,t,n,r,s,a,o,i){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");const u=t[0][0]-1;if(NW(a,o,u),0===r.length)throw new Error("params.rank must be nonzero");const l=r[0],{outSplits:c,valueSlices:h,numValues:p}=TW(a,o,e,l),d=CW(c),f=AW(n,r,s,h,p);return[d,f[0],f[1]]}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _W(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:o}=t,{outputRaggedRank:i}=r,u=s.map((e=>n.data.get(e.dataId).values)),l=s.map((e=>e.shape)),c=n.data.get(a.dataId).values,h=n.data.get(o.dataId).values,[p,d,f]=RW(u,l,c,a.shape,a.dtype,h,o.shape,i),m=p.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,a.dtype,d);return m.concat([g])}const OW={kernelName:hr,backendName:"cpu",kernelFunc:_W},FW=2147483647;function DW(e,t,n,r,s,a,o){if(t.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const i=0===t.length,u=0===s.length,l=0===o.length,c=[];i||c.push(t[0]),u||c.push(s[0]),l||c.push(o[0]);for(let g=1;g<c.length;++g)if(c[g]!==c[g-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],p=ke("int32",h+1);p[0]=0;for(let g=0;g<h;++g){const t=i?e[0]:e[g],n=u?r[0]:r[g],s=l?a[0]:a[g];if(0===s)throw new Error("Requires delta != 0");let o;if(s>0&&n<t||s<0&&n>t)o=0;else if(o=Math.ceil(Math.abs((n-t)/s)),o>FW)throw new Error(`Requires ((limit - start) / delta) <= ${FW}`);p[g+1]=p[g]+o}const d=p[h],f=ke(n,d);let m=0;for(let g=0;g<h;++g){const t=p[g+1]-p[g];let n=i?e[0]:e[g];const r=l?a[0]:a[g];for(let e=0;e<t;++e)f[m++]=n,n+=r}return[p,f]}
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function MW(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,[l,c]=DW(o,r.shape,r.dtype,i,s.shape,u,a.shape),h=n.makeTensorInfo([l.length],"int32",l),p=n.makeTensorInfo([c.length],r.dtype,c);return[h,p]}const LW={kernelName:pr,backendName:"cpu",kernelFunc:MW};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var zW=Ux;class PW{constructor(e,t,n,r,s,a,o,i,u,l){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=a,this.defaultValueShape=o,this.rowPartitionValues=i,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=jx(l),this.raggedRank=Hx(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===zW.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===zW.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case zW.VALUE_ROWIDS:return PW.getMaxWidthValueRowID(t);case zW.ROW_SPLITS:return PW.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${zW[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],s=0;for(let a=1;a<t;++a){const t=e[a];t!==r&&(r=t,s=Math.max(a-n,s),n=a)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return WW(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;qx(n,t);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=Gx(this.raggedRank,r,t),a=s;a[0]<0&&(a[0]=e);for(let o=1;o<=this.raggedRank;++o)a[o]<0&&(a[o]=this.getMaxWidth(o));return a}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),s=[];let a=0;for(let o=0;o<r;++o,a+=t)s.push(a);for(let o=r;o<e;++o)s.push(-1);return oe(s.length===e,(()=>"Final length of result must be equal to firstDimension.")),s}calculateOutputIndexRowSplit(e,t,n,r){const s=e.length,a=[];for(let o=0;o<s-1;++o){const s=e[o+1]-e[o];let i=Math.min(r,s),u=t[o];-1===u&&(i=0);for(let e=0;e<i;++e)a.push(u),u+=n;for(let e=0;e<s-i;++e)a.push(-1)}if(s>0&&a.length!==e[s-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,r){const s=e.length,a=[];if(0===s)return[];let o=0,i=e[0];if(i>=t.length)throw new Error(`Got currentValueRowId=${i}, which is not less than ${t.length}`);let u=t[i];a.push(u);for(let l=1;l<s;++l){const s=e[l];if(s===i)u>=0&&(++o,o<r?u+=n:u=-1);else{if(o=0,i=s,s>=t.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${t.length}`);u=t[s]}a.push(u)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,r){const s=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case zW.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,n,r);case zW.ROW_SPLITS:if(s.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,n,r);default:throw new Error(`Unsupported partition type: ${zW[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case zW.FIRST_DIM_SIZE:return e[0];case zW.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case zW.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${zW[t]}`)}}compute(){const e=this.rowPartitionValues[0];if(e.length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),n=this.calculateOutputSize(t),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let i=r.length-2;i>=0;--i)r[i]=r[i+1]*n[i+1];const s=WW(n,!1),a=ke(this.valuesDType,le(s)),o=r[0]*n[0];if(o>0){let e=this.calculateFirstParentOutputIndex(t,r[0],n[0]);for(let t=1;t<=this.raggedRank;++t){const s=this.calculateOutputIndex(t-1,e,r[t],n[t]);e=s}this.setOutput(this.raggedRank,e,a,s)}return[s,a]}setOutput(e,t,n,r){if(0===n.length)return;const s=this.values,a=n;let o=r.slice();o=o.slice(e+1);const i=le(o),u=t.length;let l=this.defaultValue;if(l.length!==i&&1!==l.length){const e=this.defaultValueShape;Li((()=>{const t=yh(l,e),n=Kh(t,o);l=n.dataSync()}))}let c=0,h=0,p=0;for(let d=0;d<=u;++d){let e=d<u?t[d]:-1;if(e!==p){if(h<p){const e=s.subarray(c*i),t=a.subarray(h*i),n=(p-h)*i;BW(t,e,n)}if(d>=u){const t=n.length;e=Math.floor(t/i)}if(e>p)if(1===this.defaultValue.length)a.subarray(p*i,e*i).fill(this.defaultValue[0]),p=e;else while(e>p){const e=a.slice(p*i);BW(e,l,i),++p}e<0?(c=d+1,h=p):(c=d,h=p,p=h+1)}else++p}}}function BW(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function WW(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function VW(e,t,n,r,s,a,o,i,u,l){return new PW(e,t,n,r,s,a,o,i,u,l).compute()}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function UW(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:u}=r,l=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,h=n.data.get(o.dataId).values,p=i.map((e=>n.data.get(e.dataId).values)),d=i.map((e=>e.shape)),[f,m]=VW(l,s.shape,c,a.shape,a.dtype,h,o.shape,p,d,u);return n.makeTensorInfo(f,a.dtype,m)}const GW={kernelName:dr,backendName:"cpu",kernelFunc:UW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jW(e,t,n,r){const s=e===t,a=e<t&&n<0,o=t<e&&n>1;if(s||a||o)return Pe(0,r);const i=Math.abs(Math.ceil((t-e)/n)),u=Pe(i,r);t<e&&1===n&&(n=-1),u[0]=e;for(let l=1;l<u.length;l++)u[l]=u[l-1]+n;return u}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function HW(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:o}=n,i=jW(r,s,o,a);return t.makeTensorInfo([i.length],a,i)}const qW={kernelName:fr,backendName:"cpu",kernelFunc:HW},KW=MD(gr,(e=>1/e)),XW={kernelName:gr,backendName:"cpu",kernelFunc:KW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function JW(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r;_D(s,"resizeBilinear");const u=Fe(s.shape),[l,c]=i,[h,p,d,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(le([h,l,c,f])),y=[a&&l>1?p-1:p,a&&c>1?d-1:d],b=[a&&l>1?l-1:l,a&&c>1?c-1:c];let x=0;const v=y[0]/b[0],w=y[1]/b[1];for(let k=0;k<h;k++)for(let e=0;e<l;e++){let t;t=o?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(p-1,Math.ceil(t)),a=k*u[0]+n*u[1],i=k*u[0]+s*u[1];for(let e=0;e<c;e++){let t;t=o?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),s=t-n,l=Math.min(d-1,Math.ceil(t)),c=a+n*u[2],h=i+n*u[2],p=a+l*u[2],y=i+l*u[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],a=m[p+e],o=m[y+e],i=t+(a-t)*s,u=n+(o-n)*s,l=i+(u-i)*r;g[x++]=l}}}return n.makeTensorInfo([h,l,c,f],"float32",g)}const YW={kernelName:wr,backendName:"cpu",kernelFunc:JW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ZW(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r;_D([a,s],"resizeBilinearGrad");const i=Fe(s.shape),[u,l,c,h]=s.shape,[,p,d]=a.shape,f=new Float32Array(u*l*c*h),m=[o&&p>1?l-1:l,o&&d>1?c-1:c],g=[o&&p>1?p-1:p,o&&d>1?d-1:d],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(a.dataId).values;let v=0;for(let w=0;w<u;w++){const e=w*i[0];for(let t=0;t<p;t++){const n=t*y,r=Math.floor(n),s=Math.min(Math.ceil(n),l-1),a=e+r*i[1],o=e+s*i[1],u=n-r,p=1-u;for(let e=0;e<d;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,l=1-s,d=a+n*i[2],m=a+r*i[2],g=o+n*i[2],y=o+r*i[2],w=p*l,k=p*s,I=u*l,N=u*s;for(let e=0;e<h;e++){const t=x[v++];f[d+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*N}}}}return n.makeTensorInfo([u,c,l,h],"float32",f)}const QW={kernelName:kr,backendName:"cpu",kernelFunc:ZW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eV(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r;_D(s,"resizeNearestNeighbor");const u=Fe(s.shape),[l,c]=i,[h,p,d,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(h*l*c*f),y=[a&&l>1?p-1:p,a&&c>1?d-1:d],b=[a&&l>1?l-1:l,a&&c>1?c-1:c],x=y[0]/b[0],v=y[1]/b[1];let w=0;for(let k=0;k<h;k++){const e=k*u[0];for(let t=0;t<l;t++){const n=o?x*(t+.5):x*t;let r=Math.min(p-1,a?Math.round(n):Math.floor(n));o&&(r=Math.max(0,r));const s=e+r*u[1];for(let e=0;e<c;e++){const t=o?v*(e+.5):v*e;let n=Math.min(d-1,a?Math.round(t):Math.floor(t));o&&(n=Math.max(0,n));const r=s+n*u[2];for(let e=0;e<f;e++){const t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([h,l,c,f],s.dtype,g)}const tV={kernelName:xr,backendName:"cpu",kernelFunc:eV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nV(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r;_D([a,s],"resizeNearestNeighborGrad");const i=Fe(s.shape),u=Fe(a.shape),[l,c,h,p]=s.shape,[,d,f]=a.shape,m=new Float32Array(l*c*h*p),g=n.data.get(a.dataId).values,y=[o&&d>1?c-1:c,o&&f>1?h-1:h],b=[o&&d>1?d-1:d,o&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,I=2*Math.ceil(w)+2,N=2*Math.ceil(k)+2;for(let S=0;S<l;S++){const e=S*i[0];for(let t=0;t<c;t++){const n=e+t*i[1],r=Math.floor(t*w),s=Math.floor(r-I/2);for(let a=0;a<h;a++){const r=n+a*i[2],l=Math.floor(a*k),y=Math.floor(l-N/2);for(let n=0;n<p;n++){let i=0;for(let r=0;r<I;r++){const l=r+s;if(l<0||l>=d)continue;const p=e+l*u[1],m=l*x,b=Math.min(c-1,o?Math.round(m):Math.floor(m));if(t===b)for(let e=0;e<N;e++){const t=e+y;if(t<0||t>=f)continue;const r=p+t*u[2],s=t*v,l=Math.min(h-1,o?Math.round(s):Math.floor(s));a===l&&(i+=g[r+n])}}m[r+n]=i}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}const rV={kernelName:vr,backendName:"cpu",kernelFunc:nV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sV(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;_D(s,"reverse");const o=s.shape.length,i=xe(a,s.shape);if(0===o)return BD({inputs:{x:s},backend:n});const u=new ba(s.shape,s.dtype),l=n.bufferSync(s);for(let c=0;c<u.size;c++){const e=u.indexToLoc(c),t=e.slice();i.forEach((e=>t[e]=s.shape[e]-1-t[e])),u.set(l.get(...t),...e)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}const aV={kernelName:Nr,backendName:"cpu",kernelFunc:sV},oV={kernelName:ds,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:o}=t,i=n,u=we(r.dtype,le(r.shape)),[l,c,h,p]=r.shape,[d,f]=Jx(o,c,h),m=255,g=Math.sin(s),y=Math.cos(s),b=i.data.get(r.dataId).values;for(let v=0;v<l;v++){const e=v*h*c*p;for(let t=0;t<c;t++){const n=t*(h*p);for(let r=0;r<h;r++){const s=r*p;for(let o=0;o<p;o++){const i=[l,t,r,o],x=i[2],v=i[1];let w=(x-d)*y-(v-f)*g,k=(x-d)*g+(v-f)*y;w=Math.round(w+d),k=Math.round(k+f);let I=a;if("number"!==typeof a&&(I=3===o?m:a[o]),w>=0&&w<h&&k>=0&&k<c){const t=k*(h*p),n=w*p,r=e+t+n+o;I=b[r]}const N=e+n+s+o;u[N]=I}}}}const x=i.write(u,r.shape,r.dtype);return{dataId:x,shape:r.shape,dtype:r.dtype}}},iV=MD(Sr,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),uV={kernelName:Sr,backendName:"cpu",kernelFunc:iV},lV=ZD((e=>1/Math.sqrt(e))),cV=LD(Tr,lV),hV={kernelName:Tr,backendName:"cpu",kernelFunc:cV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pV(e,t,n,r,s,a,o,i,u,l){const c=[r/s,s],h=e.values,p=t.values;if(0===r)return ki(n,t.dtype);const d=ki(c,t.dtype);"string"===typeof u||"number"===typeof u?d.values.fill(u):"boolean"===typeof u&&d.values.fill(+u);for(let f=0;f<a;f++){const e=[];let a=0;for(let t=0;t<o;t++){const n=h[f*o+t];e.push(n),a+=n*i[t]}if(a<0||a>=r/s)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<s;n++)l?d.values[a*s+n]+=p[f*s+n]:d.values[a*s+n]=0===t.rank?p[0]:p[f*s+n]}return d}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dV(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:o}=r,{sliceRank:i,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Gl(a,s,o),p=!0,d=n.bufferSync(s),f=n.bufferSync(a),m=pV(d,f,o,h,l,u,i,c,0,p);return n.makeTensorInfo(o,m.dtype,m.values)}const fV={kernelName:Cr,backendName:"cpu",kernelFunc:dV};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mV(e,t){let n=0,r=e.length,s=0;while(n<r)s=Math.floor((n+r)/2),e[s]<t?n=s+1:r=s;return r}function gV(e,t){let n=0,r=e.length,s=0;while(n<r)s=Math.floor((n+r)/2),e[s]<=t?n=s+1:r=s;return r}function yV(e,t,n,r,s,a){const o=ke("int32",n*s);for(let i=0;i<n;++i){const n=e.slice(i*r,(i+1)*r),u=i*s;for(let e=0;e<s;++e)o[u+e]="left"===a?mV(n,t[e+u]):gV(n,t[e+u])}return o}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bV(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:o}=r,i=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,l=yV(i,u,s.shape[0],s.shape[1],a.shape[1],o);return n.makeTensorInfo(a.shape,"int32",l)}const xV={kernelName:$r,backendName:"cpu",kernelFunc:bV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vV(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;_D([r,s,a],"select");const o=r.shape.length,i=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,c=Fa(s.dtype,a.dtype),h=Pe(le(s.shape),c);let p=0;const d=0===o||o>1||1===s.shape.length?1:le(s.shape.slice(1));for(let f=0;f<i.length;f++)for(let e=0;e<d;e++)1===i[f]?h[p++]=u[f]:h[p++]=l[f];return n.makeTensorInfo(s.shape,c,h)}const wV={kernelName:Er,backendName:"cpu",kernelFunc:vV},kV=nv,IV=rv,NV=MD(Ar,(e=>e>=0?IV*e:kV*(Math.exp(e)-1))),SV={kernelName:Ar,backendName:"cpu",kernelFunc:NV},TV=MD(Fr,(e=>e<0?-1:e>0?1:0)),CV={kernelName:Fr,backendName:"cpu",kernelFunc:TV},$V=MD(_r,(e=>Math.sin(e))),EV={kernelName:_r,backendName:"cpu",kernelFunc:$V},AV=MD(Or,(e=>Math.sinh(e))),RV={kernelName:Or,backendName:"cpu",kernelFunc:AV},_V=1.1920928955078125e-7,OV=Math.log(_V)+2,FV=MD(Mr,(e=>{const t=e>-OV,n=e<OV,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),DV={kernelName:Mr,backendName:"cpu",kernelFunc:FV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function MV(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:o}=r;_D([s],"spaceToBatchND");const i=le(a),u=[[0,0]];u.push(...o);for(let k=1+a.length;k<s.shape.length;++k)u.push([0,0]);const l=yW.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),c=Yx(l.shape,a,i,!1),h=Zx(c.length,a.length,!1),p=Qx(l.shape,a,i,!1),d={x:l},f={shape:c},m=yM({inputs:d,backend:n,attrs:f}),g={x:m},y={perm:h},b=OM({inputs:g,backend:n,attrs:y}),x={x:b},v={shape:p},w=yM({inputs:x,backend:n,attrs:v});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),w}const LV={kernelName:Pr,backendName:"cpu",kernelFunc:MV};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zV(e,t,n,r,s,a,o){const i=t[0],u=a[0],l=new Array(u),c=new Array(i),h=t[1];if(0===u){if(0!==i)throw new Error(Ev(i));const e=ke(n,0),t=ke(s,0);return[e,[0,h],t,l,c]}let p=!0,d=0;const f=new Array(u).fill(0);for(let g=0;g<i;++g){const t=e[g*h];if(t<0)throw new Error(Av(g,t));if(t>=u)throw new Error(Rv(g,t,u));++f[t],p=p&&t>=d,d=t}let m=!0;for(let g=0;g<u;++g){const e=0===f[g];l[g]=e,m=m&&!e,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&p){const t=e,n=r;for(let e=0;e<i;++e)c[e]=e;return[t,[i,h],n,l,c]}{const t=f[u-1],a=ke(n,t*h),p=ke(s,t),d=new Array(u).fill(0);for(let n=0;n<i;++n){const t=e[n*h],s=d[t],o=(0===t?0:f[t-1])+s;d[t]++;for(let r=0;r<h;++r)a[o*h+r]=e[n*h+r];p[o]=r[n],c[n]=o}for(let e=0;e<u;++e){const t=d[e];if(0===t){const t=0===e?0:f[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;p[t]=o}}return[a,[t,h],p,l,c]}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function PV(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:o}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const i=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,c=n.data.get(o.dataId).values[0],[h,p,d,f,m]=zV(i,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],s.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}const BV={kernelName:Vr,backendName:"cpu",kernelFunc:PV};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function WV(e,t,n,r,s){const a=le(r),o=t[0],i=s.length,u=[];let l=1,c=-1;for(let g=0;g<i;++g){const e=s[g];if(-1===e){if(-1!==c)throw new Error(_v(c,g));c=g,u.push(1)}else{if(e<0)throw new Error(Ov(g,e));l*=e,u.push(e)}}if(-1!==c){if(l<=0)throw new Error(Fv());const e=Math.trunc(a/l);if(l*e!==a)throw new Error(Dv(r,u));u[c]=e}const h=le(u);if(h!==a)throw new Error(Mv(r,u));const p=r.length,d=[];if(p>0){d[p-1]=1;for(let e=p-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}const f=[];if(i>0){f[i-1]=1;for(let e=i-2;e>=0;--e)f[e]=f[e+1]*u[e+1]}const m=ke(n,o*i);for(let g=0;g<o;++g){let t=0;for(let n=0;n<p;++n)t+=e[g*p+n]*d[n];for(let e=0;e<i;++e)m[g*i+e]=Math.trunc(t/f[e]),t%=f[e]}return[m,[o,i],u]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function VV(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const o=Array.from(n.data.get(s.dataId).values),i=n.data.get(r.dataId).values,u=Array.from(n.data.get(a.dataId).values),[l,c,h]=WV(i,r.shape,r.dtype,o,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}const UV={kernelName:Ur,backendName:"cpu",kernelFunc:VV};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function GV(e,t,n,r,s,a=!1,o=0){const i=r.length,u=[t[0],e.length/t[0]],l=u[1],c=i>0?s[i-1]+1:0,h=c;if(h<0)throw new Error(Lv());const p=t.slice();p[0]=h;const d=p.reduce(((e,t)=>e*t),1),f=ke(n,d);if(0===i)return h>0&&f.fill(o),[f,p];if(h<=0)throw new Error(Lv());let m=0,g=1,y=0,b=s[m];while(1){let t=0;if(g<i){if(t=s[g],b===t){++g;continue}if(b>=t)throw new Error(zv())}if(b<0||b>=h)throw new Error(Pv(b,h));b>y&&f.fill(o,y*l,b*l);for(let n=m;n<g;++n){const t=r[n];if(t<0||t>=u[0])throw new Error(Bv(n,r[n],u[0]));for(let n=0;n<l;n++)f[b*l+n]+=e[t*l+n]}if(a)for(let e=0;e<l;e++)f[b*l+e]/=g-m;if(m=g,++g,y=b+1,b=t,g>i)break}return y<h&&f.fill(o,y*l,h*l),[f,p]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jV(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,[l,c]=GV(o,r.shape,r.dtype,i,u,!0);return n.makeTensorInfo(c,r.dtype,l)}const HV={kernelName:Gr,backendName:"cpu",kernelFunc:jV};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qV(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,[l,c]=GV(o,r.shape,r.dtype,i,u);return n.makeTensorInfo(c,r.dtype,l)}const KV={kernelName:jr,backendName:"cpu",kernelFunc:qV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function XV(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:o}=t,{outputShape:i}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:p}=Gl(a,s,i),d=!1,f=n.bufferSync(s);let m;switch(a.dtype){case"bool":{const e=n.bufferSync(a),t=Boolean(n.data.get(o.dataId).values[0]);m=pV(f,e,i,p,c,l,u,h,t,d);break}case"float32":{const e=n.bufferSync(a),t=n.data.get(o.dataId).values[0];m=pV(f,e,i,p,c,l,u,h,t,d);break}case"int32":{const e=n.bufferSync(a),t=n.data.get(o.dataId).values[0];m=pV(f,e,i,p,c,l,u,h,t,d);break}case"string":{const e=n.bufferSync(a),t=ta(n.data.get(o.dataId).values[0]);m=pV(f,e,i,p,c,l,u,h,t,d);break}default:throw new Error(`Unsupported type ${a.dtype}`)}return n.makeTensorInfo(i,m.dtype,m.values)}const JV={kernelName:Hr,backendName:"cpu",kernelFunc:XV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function YV(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:o}=r,i=xe(o,s.shape)[0],u=$v(s,a,i),l=new Array(s.shape.length).fill(0),c=s.shape.slice();return u.map((e=>{const t=[...c];t[i]=e;const r=mL({inputs:{x:s},backend:n,attrs:{begin:l,size:t}});return l[i]+=e,r}))}const ZV={kernelName:Br,backendName:"cpu",kernelFunc:YV},QV=ZD((e=>Math.sqrt(e))),eU=MD(Lr,(e=>Math.sqrt(e))),tU={kernelName:Lr,backendName:"cpu",kernelFunc:eU},nU={kernelName:Kr,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;_D(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let i=0;i<s.length;++i){const e=s[i];a[i]=e*e}const o=r.write(a,n.shape,n.dtype);return{dataId:o,shape:n.shape,dtype:n.dtype}}},rU=GD(((e,t)=>{const n=e-t;return n*n})),sU=hM(qr,rU),aU={kernelName:qr,backendName:"cpu",kernelFunc:sU},oU=MD(hs,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),iU={kernelName:hs,backendName:"cpu",kernelFunc:oU};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uU(e,t,n,r){const s=ki(e,t.dtype);for(let a=0;a<s.size;a++){const e=s.indexToLoc(a),o=new Array(e.length);for(let t=0;t<o.length;t++)o[t]=e[t]*n[t]+r[t];s.set(t.get(...o),...e)}return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lU(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:o,strides:i,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r;_D(s,"stridedSlice");const{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=uc(s.shape,a,o,i,u,l,c,h,p);let w;if(m)w=yM({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){oe(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=Xl(b,x,v),t=mL({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});w=yM({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=n.bufferSync(s),t=uU(d,e,v,b);w=n.makeTensorInfo(f,t.dtype,t.values)}return w}const cU={kernelName:Xr,backendName:"cpu",kernelFunc:lU};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class hU{constructor(e,t,n,r,s,a){this.separator=ea(e),this.nGramWidths=t,this.leftPad=ea(n),this.rightPad=ea(r),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,a){for(let o=0;o<s;++o){const i=this.getPadWidth(a),u=Math.max(0,i-o),l=Math.max(0,i-(s-(o+1))),c=a-(u+l),h=t+(u>0?0:o-i);let p=0;p+=u*this.leftPad.length;for(let t=0;t<c;++t)p+=e[h+t].length;p+=l*this.rightPad.length;const d=u+l+c-1;p+=d*this.separator.length,n[r+o]=new Uint8Array(p);const f=n[r+o];let m=0;const g=e=>e.forEach((e=>f[m++]=e));for(let e=0;e<u;++e)g(this.leftPad),g(this.separator);for(let t=0;t<c-1;++t)g(e[h+t]),g(this.separator);if(c>0){g(e[h+c-1]);for(let e=0;e<l;++e)g(this.separator),g(this.rightPad)}else{for(let e=0;e<l-1;++e)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<r;++s){let r=t[s]>=e;if(r=r&&t[s]<=n,!r)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,a=ke("int32",r);if(0===n||0===r){const e=new Array(n);for(let t=0;t<=s;++t)a[t]=0;return[e,a]}a[0]=0;for(let i=1;i<=s;++i){const e=t[i]-t[i-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),a[i]=a[i-1]+n}const o=new Array(a[s]);for(let i=0;i<s;++i){const n=t[i];let r=a[i];if(this.nGramWidths.forEach((s=>{const a=t[i+1]-t[i],u=this.getNumNGrams(a,s);this.createNGrams(e,n,o,r,u,s),r+=u})),this.preserveShort&&r===a[i]){const s=t[i+1]-t[i];if(0===s)continue;const a=s+2*this.padWidth,u=1;this.createNGrams(e,n,o,r,u,a)}}return[o,a]}}function pU(e,t,n,r,s,a,o,i){return new hU(n,r,s,a,o,i).compute(e,t)}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dU(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:o,rightPad:i,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,p=n.data.get(c.dataId).values,d=n.data.get(h.dataId).values,[f,m]=pU(p,d,s,a,o,i,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}const fU={kernelName:Jr,backendName:"cpu",kernelFunc:dU};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mU(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let a=e.indexOf(s);while(-1!==a){const t=e.subarray(0,a);n&&0===t.length||r.push(t),e=e.subarray(a+1),a=e.indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(s,a);n&&0===t.length||r.push(t),s=a+1}}function gU(e,t,n){const r=e.length,s=[];let a=0,o=0;const i=new Array(r);for(let p=0;p<r;++p){const r=s.length;mU(e[p],t,n,s);const u=s.length-r;i[p]=u,a+=u,o=Math.max(o,u)}const u=ke("int32",2*a),l=new Array(a),c=[r,o];let h=0;for(let p=0;p<r;++p)for(let e=0;e<i[p];++e)u[2*h]=p,u[2*h+1]=e,l[h]=s[h],++h;return[u,l,c]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yU(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:o}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const i=n.data.get(a.dataId).values,u=n.data.get(o.dataId).values[0],[l,c,h]=gU(i,u,s),p=c.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}const bU={kernelName:Yr,backendName:"cpu",kernelFunc:yU};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xU(e,t){const n=ke("int32",e.length);for(let r=0;r<e.length;++r)n[r]=Ks(e[r]).modulo(t).getLowBitsUnsigned();return n}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vU(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const o=n.data.get(a.dataId).values,i=xU(o,s);return n.makeTensorInfo(a.shape,"int32",i)}const wU={kernelName:Zr,backendName:"cpu",kernelFunc:vU},kU=MD(es,(e=>Math.tan(e))),IU={kernelName:es,backendName:"cpu",kernelFunc:kU},NU=MD(ts,(e=>Math.tanh(e))),SU={kernelName:ts,backendName:"cpu",kernelFunc:NU};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function TU(e,t){const n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];const r=ki(n,e.dtype);for(let s=0;s<r.values.length;++s){const t=r.indexToLoc(s),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const a=e.locToIndex(n);r.values[s]=e.values[a]}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function CU(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;_D(s,"tile");const o=TU(n.bufferSync(s),a);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const $U={kernelName:ns,backendName:"cpu",kernelFunc:CU},EU=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function AU(e,t,n=0,r=e.length-1){while(r>n){if(r-n>600){const s=r-n+1,a=t-n+1,o=Math.log(s),i=.5*Math.exp(2*o/3),u=.5*Math.sqrt(o*i*(s-i)/s)*Math.sign(a-s/2),l=Math.max(n,Math.floor(t-a*i/s+u)),c=Math.min(r,Math.floor(t+(s-a)*i/s+u));AU(e,t,l,c)}const s=e[t];let a=n,o=r;ne(e,n,t),EU(e[r],s)>0&&ne(e,n,r);while(a<o){ne(e,a,o),a++,o--;while(EU(e[a],s)<0)a+=1;while(EU(e[o],s)>0)o-=1}0===EU(e[n],s)?ne(e,n,o):(o+=1,ne(e,o,r)),o<=t&&(n=o+1),t<=o&&(r=o-1)}}function RU(e,t,n,r,s){const a=t[t.length-1],[o,i]=[e.length/a,a],u=we(n,o*r),l=we("int32",o*r);for(let h=0;h<o;h++){const t=h*i,n=e.subarray(t,t+i);let a=new Array(n.length);n.forEach(((e,t)=>a[t]={value:e,index:t})),r<a.length&&(AU(a,r),a=a.slice(0,r)),s&&a.sort(EU);const o=h*r,c=u.subarray(o,o+r),p=l.subarray(o,o+r);for(let e=0;e<r;e++)c[e]=a[e].value,p[e]=a[e].index}const c=t.slice();return c[c.length-1]=r,[ki(c,n,u),ki(c,"int32",l)]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _U(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:o}=r;_D(s,"topk");const i=n.data.get(s.dataId).values,[u,l]=RU(i,s.shape,s.dtype,a,o);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}const OU={kernelName:rs,backendName:"cpu",kernelFunc:_U};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function FU(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:u,outputShape:l}=n,[c,h,p,d]=s.shape,[f,m]=null!=l?l:[h,p],g=[c,f,m,d],y=Fe(s.shape),b=y[0],x=y[1],v=y[2],w=Fe(g),k=w[0],I=w[1],N=w[2],S=we(s.dtype,le(g));S.fill(u);const T=r.data.get(s.dataId).values,C=r.data.get(a.dataId).values;for(let E=0;E<c;++E){const e=1===a.shape[0]?C:C.subarray(8*E,8*E+8);for(let t=0;t<f;++t)for(let n=0;n<m;++n)for(let r=0;r<d;++r){let s;const a=e[6]*n+e[7]*t+1;if(0===a)continue;const l=(e[0]*n+e[1]*t+e[2])/a,c=(e[3]*n+e[4]*t+e[5])/a,d=MU(l,p,i),f=MU(c,h,i);switch(o){case"nearest":s=VU(T,h,p,b,x,v,E,f,d,r,u);break;case"bilinear":s=UU(T,h,p,b,x,v,E,f,d,r,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}const m=E*k+t*I+n*N+r;S[m]=s}return r.makeTensorInfo(g,s.dtype,S)}const $=r.write(S,g,s.dtype);return{dataId:$,shape:s.shape,dtype:s.dtype}}const DU={kernelName:ss,backendName:"cpu",kernelFunc:FU};function MU(e,t,n){switch(n){case"reflect":return LU(e,t);case"wrap":return zU(e,t);case"nearest":return BU(e,t);case"constant":default:return PU(e,t)}}function LU(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return ee(0,n,t-1)}function zU(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return ee(0,n,t-1)}function PU(e,t){return e}function BU(e,t){return ee(0,e,t-1)}function WU(e,t,n,r,s,a,o,i,u,l,c){const h=o*r+i*s+u*a+l;return 0<=i&&i<t&&0<=u&&u<n?e[h]:c}function VU(e,t,n,r,s,a,o,i,u,l,c){const h=Math.round(i),p=Math.round(u);return WU(e,t,n,r,s,a,o,h,p,l,c)}function UU(e,t,n,r,s,a,o,i,u,l,c){const h=Math.floor(i),p=Math.floor(u),d=h+1,f=p+1,m=(f-u)*WU(e,t,n,r,s,a,o,h,p,l,c)+(u-p)*WU(e,t,n,r,s,a,o,h,f,l,c),g=(f-u)*WU(e,t,n,r,s,a,o,d,p,l,c)+(u-p)*WU(e,t,n,r,s,a,o,d,f,l,c);return(d-i)*m+(i-h)*g}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function GU(e,t,n,r){const s=xe(t,n)[0],a=[1,n[0],1];for(let f=0;f<s;f++)a[0]*=n[f];a[1]=n[s];for(let f=s+1;f<n.length;f++)a[2]*=n[f];const o={},i=new Int32Array(n[s]),u=new ba(a,r,e),l=[],c=1===a[0]&&1===a[2];for(let f=0;f<n[s];f++){let t;if(c)t=e[f].toString();else{const e=[];for(let t=0;t<a[0];t++)for(let n=0;n<a[2];n++)e.push(u.get(t,f,n));t=e.join(",")}if(void 0!==o[t])i[f]=o[t];else{const e=Object.keys(o).length;o[t]=e,i[f]=e,l.push(f)}}const h=a.slice();h[1]=Object.keys(o).length;const p=new ba(h,r);l.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)p.set(u.get(n,e,r),n,t,r)}));const d=n.slice();return d[s]=h[1],{outputValues:p.values,outputShape:d,indices:i}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jU(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;_D(a,"unique");const o=r.data.get(a.dataId).values,{outputValues:i,outputShape:u,indices:l}=GU(o,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,i),r.makeTensorInfo([l.length],"int32",l)]}const HU={kernelName:os,backendName:"cpu",kernelFunc:jU};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qU(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const o=s.shape.length,i=s.shape[a],u=new Array(o-1);let l=0;for(let d=0;d<o;d++)d!==a&&(u[l++]=s.shape[d]);const c=new Array(o).fill(0),h=s.shape.slice();h[a]=1;const p=new Array(i);for(let d=0;d<p.length;d++){c[a]=d;const e=mL({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});p[d]=yM({inputs:{x:e},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(e)}return p}const KU={kernelName:is,backendName:"cpu",kernelFunc:qU};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function XU(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:o}=r;_D(s,"unsortedSegmentSum");const i=s.shape.length,u=a.shape.length,l=[],c=[],h=i-u;let p=a;for(let f=0;f<h;++f){const e=Gz({inputs:{input:p},backend:n,attrs:{dim:f+1}});p=e,c.push(e)}for(let f=0;f<o;++f){const e=Xs(f,"int32"),t=n.makeTensorInfo([],"int32",e),r=Rz({inputs:{a:t,b:p},backend:n}),a=lM({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),o=kz({inputs:{a:a,b:s},backend:n}),i=Nz({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}});l.push(i),c.push(t),c.push(r),c.push(a),c.push(o),c.push(i)}const d=fW({inputs:l,backend:n,attrs:{axis:0}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const JU={kernelName:us,backendName:"cpu",kernelFunc:XU},YU=[kM,SM,CM,EM,gM,RM,MM,zM,BM,VM,GM,HM,KM,YM,QM,aL,iL,lL,hL,vM,dL,bL,kL,NL,cM,CL,EL,sM,RL,ML,zL,BL,VL,GL,HL,KL,JL,ZL,ez,nz,sz,oz,uz,cz,pz,fz,gz,yz,bz,xz,Cz,PD,Ez,_z,Bz,Uz,jz,Kz,uP,cP,pP,mP,bP,vP,kP,SP,$P,RP,FP,WD,MP,FL,zP,BP,VP,UD,jP,KP,YP,eB,nB,aB,iB,cB,pB,fB,yB,vB,kB,NB,TB,$B,AB,_B,FB,LB,PB,VB,HB,Iz,XB,ZB,tW,sW,iW,lW,dW,mW,yW,vW,qD,IW,OW,LW,GW,qW,iM,Yz,XW,XD,YD,bM,YW,QW,tV,rV,aV,oV,uV,hV,fV,xV,wV,SV,tM,CV,EV,RV,gL,GB,DV,LV,BV,UV,HV,KV,JV,ZV,tU,nU,aU,iU,cU,fU,bU,wU,tP,Sz,IU,SU,$U,OU,DU,FM,HU,KU,JU,hW];for(const C4 of YU)Ns(C4);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ZU={},QU={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function eG(e,t){ZU[e]=t}function tG(e,t){if(!(e in ZU)||null!=t){const n=rG(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;ZU[e]=n}const n=ZU[e];return null==n||n.isContextLost()?(delete ZU[e],tG(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),ZU[e])}function nG(e){if("undefined"!==typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function rG(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?nG(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete ZU[e]}),!1),Je().getBool("SOFTWARE_WEBGL_ENABLED")&&(QU.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",QU)||n.getContext("experimental-webgl",QU):n.getContext("webgl2",QU)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var sG,aG,oG;function iG(e,t){return[t,e]}function uG(e,t){return e*t}function lG(e){const t=le(e),n=Math.ceil(t/4);return fe(n)}function cG(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function hG(e,t){const[n,r]=cG(e,t);return n*r*4}function pG(e,t){const n=e;let r,s,a,o,i,u,l,c,h,p;return 2===Je().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,o=n.RGBA32F,i=n.RED,l=4,c=1,h=n.HALF_FLOAT,p=n.FLOAT,u=n.RGBA8):(r=e.RGBA,s=e.RGBA,a=e.RGBA,o=n.RGBA,i=e.RGBA,l=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,u=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:p}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dG(e,t){const n=t();return Je().getBool("DEBUG")&&fG(e),n}function fG(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+bG(e,t))}(function(e){e[e["DENSE"]=0]="DENSE",e[e["SHARED_BATCH"]=1]="SHARED_BATCH"})(sG||(sG={})),function(e){e[e["RENDER"]=0]="RENDER",e[e["UPLOAD"]=1]="UPLOAD",e[e["PIXELS"]=2]="PIXELS",e[e["DOWNLOAD"]=3]="DOWNLOAD"}(aG||(aG={})),function(e){e[e["UNPACKED_FLOAT16"]=0]="UNPACKED_FLOAT16",e[e["UNPACKED_FLOAT32"]=1]="UNPACKED_FLOAT32",e[e["PACKED_4X1_UNSIGNED_BYTE"]=2]="PACKED_4X1_UNSIGNED_BYTE",e[e["PACKED_2X2_FLOAT32"]=3]="PACKED_2X2_FLOAT32",e[e["PACKED_2X2_FLOAT16"]=4]="PACKED_2X2_FLOAT16"}(oG||(oG={}));const mG=5.96e-8,gG=65504;function yG(e){return!!(Je().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||mG<Math.abs(e)&&Math.abs(e)<gG)}function bG(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function xG(e,t){return WG(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function vG(e,t){const n=WG(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(dG(e,(()=>e.shaderSource(n,t))),dG(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function wG(e,t){const n=WG(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(dG(e,(()=>e.shaderSource(n,t))),dG(e,(()=>e.compileShader(n))),Je().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw IG(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const kG=/ERROR: [0-9]+:([0-9]+):/g;function IG(e,t){const n=kG.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),a=s.length.toString().length+2,o=s.map(((e,t)=>ge((t+1).toString(),a)+e));let i=0;for(let h=0;h<o.length;h++)i=Math.max(o[h].length,i);const u=o.slice(0,r-1),l=o.slice(r-1,r),c=o.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${ge(l[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function NG(e){return WG(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function SG(e,t){if(dG(e,(()=>e.linkProgram(t))),!Je().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function TG(e,t){if(dG(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function CG(e,t){const n=WG(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return dG(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),dG(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function $G(e,t){const n=WG(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return dG(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),dG(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function EG(e){return WG(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function AG(e,t){const n=Je().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){const n=`[${e}x${t}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(e>n||t>n){const r=`[${e}x${t}]`,s=`[${n}x${n}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+s+".")}}function RG(e){return WG(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function _G(e,t,n,r,s,a,o){const i=e.getAttribLocation(t,n);return-1!==i&&(dG(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),dG(e,(()=>e.vertexAttribPointer(i,s,e.FLOAT,!1,a,o))),dG(e,(()=>e.enableVertexAttribArray(i))),!0)}function OG(e,t,n){VG(e,n),dG(e,(()=>e.activeTexture(e.TEXTURE0+n))),dG(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function FG(e,t,n){return WG(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function DG(e,t,n){return e.getUniformLocation(t,n)}function MG(e,t,n,r){dG(e,(()=>OG(e,t,r))),dG(e,(()=>e.uniform1i(n,r)))}function LG(e,t,n){dG(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),dG(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function zG(e,t){dG(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),dG(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function PG(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+BG(e,t))}function BG(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function WG(e,t,n){const r=dG(e,(()=>t()));if(null==r)throw new Error(n);return r}function VG(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){const e=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${e}.`)}}function UG(e,t=2){return le(e.slice(0,e.length-t))}function GG(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function jG(e){let t=[1,1,1];const n=0===e.length||1===e.length&&1===e[0];return n||(t=[UG(e),...GG(e)]),t}function HG(e,t=!1){let n=Je().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=Je().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&Je().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,e=e.map(((t,n)=>n>=e.length-2?te(e[n]):e[n])),1===e.length&&(e=[2,e[0]])),2!==e.length){const t=ve(e);e=t.newShape}let s=le(e),a=null;e.length<=1&&s<=n?a=[1,s]:2===e.length&&e[0]<=n&&e[1]<=n?a=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?a=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?a=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?a=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(a=[e[0],e[1]*e[2]*e[3]]);const o=null!=a&&Math.max(...a)>r&&Math.min(...a)<=(t?2:1)&&Math.min(...a)>0;if(null==a||o)if(t){const t=UG(e);let n=2,r=2;e.length&&([n,r]=GG(e)),s=t*(n/2)*(r/2),a=fe(s).map((e=>2*e))}else a=fe(s);return a}function qG(e){return e%2===0}function KG(e,t){if(e=e.slice(-2),t=t.slice(-2),he(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(qG(n)&&qG(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&qG(e[0])&&qG(t[0])}let XG,JG;function YG(e){if(null==XG){const t=tG(e);XG=t.getParameter(t.MAX_TEXTURE_SIZE)}return XG}function ZG(e){if(null==JG){const t=tG(e);JG=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,JG)}function QG(e){if(0===e)return 0;let t;const n=tG(e);return t=ej(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:ej(n,"EXT_disjoint_timer_query")?1:0,t}function ej(e,t){const n=e.getExtension(t);return null!=n}function tj(e){try{const t=tG(e);if(null!=t)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function nj(e){if(0===e)return!1;const t=tG(e);if(1===e){if(!ej(t,"OES_texture_float"))return!1}else if(!ej(t,"EXT_color_buffer_float"))return!1;const n=sj(t);return n}function rj(e){if(0===e)return!1;const t=tG(e);if(1!==e){if(ej(t,"EXT_color_buffer_float"))return sj(t);const e="EXT_color_buffer_half_float";if(ej(t,e)){const n=t.getExtension(e);return aj(t,n)}return!1}if(!ej(t,"OES_texture_float"))return!1;if(!ej(t,"WEBGL_color_buffer_float"))return!1;const n=sj(t);return n}function sj(e){const t=pG(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);const r=1,s=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,r,s,0,t.textureFormatFloat,t.textureTypeFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),o}function aj(e,t){const n=pG(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const s=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,s,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(o),i}function oj(e){if(2!==e)return!1;const t=tG(e),n=null!=t.fenceSync;return n}function ij(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&oe("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const uj=Je();
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lj(){let e,t,n,r,s,a,o,i,u,l;return 2===Je().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",o="out vec4 outputColor;",i=Je().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",o="",i="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:u,defineRound:l}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cj(e,t,n="index"){const r=Fe(t);return r.map(((t,s)=>{const a=`int ${e[s]} = ${n} / ${t}`,o=s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`;return`${a}; ${o};`})).join("")}function hj(e,t,n="index"){const r=Fe(t);return r.map(((t,s)=>{const a=`int ${e[s]} = ${n} / outShapeStrides[${s}]`,o=s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`;return`${a}; ${o};`})).join("")}function pj(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let a=n-3;a>=0;--a)s[a]=`(${s[a+1]} * ${r[a+1]})`;return s}function dj(e,t,n="index"){const r=e.map(((e,t)=>t)),s=pj(r,t);return s.map(((t,r)=>{const a=`int ${e[r]} = ${n} / ${s[r]}`,o=r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${s[r]}`:`index -= ${e[r]} * ${s[r]}`;return`${a}; ${o};`})).join("")}function fj(e){const t=Fe(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}function mj(){return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n"}uj.registerFlag("HAS_WEBGL",(()=>uj.getNumber("WEBGL_VERSION")>0)),uj.registerFlag("WEBGL_VERSION",(()=>tj(2)?2:tj(1)?1:0)),uj.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),uj.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===uj.get("WEBGL_VERSION"))),uj.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),uj.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),uj.registerFlag("WEBGL_PACK",(()=>uj.getBool("HAS_WEBGL"))),uj.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>uj.getBool("WEBGL_PACK"))),uj.registerFlag("WEBGL_PACK_CLIP",(()=>uj.getBool("WEBGL_PACK"))),uj.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>uj.getBool("WEBGL_PACK"))),uj.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>uj.getBool("WEBGL_PACK"))),uj.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>uj.getBool("WEBGL_PACK"))),uj.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>uj.getBool("WEBGL_PACK"))),uj.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>uj.getBool("WEBGL_PACK"))),uj.registerFlag("WEBGL_PACK_REDUCE",(()=>uj.getBool("WEBGL_PACK"))),uj.registerFlag("WEBGL_LAZILY_UNPACK",(()=>uj.getBool("WEBGL_PACK"))),uj.registerFlag("WEBGL_CONV_IM2COL",(()=>uj.getBool("WEBGL_PACK"))),uj.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>YG(uj.getNumber("WEBGL_VERSION")))),uj.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>ZG(uj.getNumber("WEBGL_VERSION")))),uj.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=uj.getNumber("WEBGL_VERSION");return 0===e?0:QG(e)})),uj.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>uj.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Za())),uj.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>nj(uj.getNumber("WEBGL_VERSION")))),uj.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!uj.getBool("WEBGL_FORCE_F16_TEXTURES")&&uj.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),uj.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>rj(uj.getNumber("WEBGL_VERSION")))),uj.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>oj(uj.getNumber("WEBGL_VERSION")))),uj.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>{const e=uj.getBool("WEBGL_RENDER_FLOAT32_ENABLED");return e?4:0})),uj.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),uj.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Za()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),uj.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),uj.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),uj.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),uj.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),uj.registerFlag("WEBGL_EXP_CONV",(()=>!1)),uj.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>uj.getBool("IS_TEST"))),uj.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),uj.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),uj.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),uj.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const gj="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:yj}=y;function bj(e,t,n){const r=[];if(e.forEach((e=>{const t=le(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=oH(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`);break;default:break}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break;default:break}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const s=r.join("\n"),a=e.map((e=>wj(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),o=t.texShape,i=lj(),u=Nj(i);let l,c,h=Cj(i);t.isPacked?(l=kj(t.logicalShape,o,n.enableShapeUniforms),c=Tj(i)):(l=Ij(t.logicalShape,o,n.enableShapeUniforms),c=Sj(i)),n.packedInputs&&(h+=Rj);const p=[h,u,c,s,l,a,n.userCode].join("\n");return p}function xj(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return jj(e,t);case 1:return qj(e,t);case 2:return Xj(e,t);case 3:return Yj(e,t);case 4:return Qj(e,t);case 5:return eH(e);case 6:return tH(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function vj(e,t){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return Gj(e);case 1:return Hj(e,t);case 2:return Kj(e,t);case 3:return Jj(e,t);default:return Zj(e,t)}}function wj(e,t,n=!1,r){let s="";s+=n?vj(e,r):xj(e,r);const a=e.shapeInfo.logicalShape,o=t.logicalShape;return a.length<=o.length&&(s+=n?rH(e,t):sH(e,t)),s}function kj(e,t,n){switch(e.length){case 0:return _j();case 1:return Oj(e,t,n);case 2:return Wj(e,t,n);case 3:return Dj(e,t,n);default:return Lj(e,t,n)}}function Ij(e,t,n){switch(e.length){case 0:return _j();case 1:return Fj(e,t,n);case 2:return Vj(e,t,n);case 3:return Mj(e,t,n);case 4:return zj(e,t,n);case 5:return Pj(e,t);case 6:return Bj(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function Nj(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}function Sj(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}function Tj(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}function Cj(e){const t=`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${$j}\n    ${Ej}\n    ${Aj}\n  `;return t}const $j="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ej="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Aj="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Rj="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function _j(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function Oj(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}function Fj(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}function Dj(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),a=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}function Mj(e,t,n){if(n){const t=hj(["r","c","d"],e);return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${t}\n    return ivec3(r, c, d);\n  }\n`}const r=cj(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}function Lj(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),a=s*Math.ceil(e[e.length-2]/2);let o=a,i="",u="b, r, c";for(let l=2;l<e.length-1;l++)o*=e[e.length-l-1],i=`\n      int b${l} = index / ${o};\n      index -= b${l} * ${o};\n    `+i,u=`b${l}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}function zj(e,t,n){if(n){const t=hj(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${t}\n      return ivec4(r, c, d, d2);\n    }\n  `}const r=cj(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}function Pj(e,t){const n=cj(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}function Bj(e,t){const n=cj(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}function Wj(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(he(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}function Vj(e,t,n){return he(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}function Uj(e){return`offset${e}`}function Gj(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=lj();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}function jj(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,a]=e.shapeInfo.texShape;if(1===s&&1===a)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=Uj(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[i,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${i}, ${u}, ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}function Hj(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=lj();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${o[0]}, ${o[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}function qj(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${nH(e)}\n      }\n    `;const s=e.shapeInfo.texShape,a=s[0],o=s[1];if(1===o&&1===a)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=Uj(n);return 1===o?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===a?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${o}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${o}, index + ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}function Kj(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,o=a[0],i=a[1],u=lj();if(null!=a&&he(n,a))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${o}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=Math.ceil(n[1]/2);return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}function Xj(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape;if(null!=a&&he(n,a)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=a[0],n=a[1];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:o,keptDims:i}=ve(n),u=o;if(u.length<n.length){const n=iH(e,u),r=["row","col"];return`\n      ${xj(n,t)}\n      float ${s}(int row, int col) {\n        return ${s}(${uH(r,i)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${nH(e)}\n      }\n    `;const l=a[0],c=a[1],h=Uj(r);return 1===c?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===l?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}function Jj(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const r=n.slice(1),a=[1,2],o=iH(e,r),i=["b","row","col"];return`\n        ${vj(o,t)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${uH(i,a)});\n        }\n      `}const i=lj();if(t)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${i.texture2D}(${r}, uv);\n    }\n  `;const u=o[0],l=o[1],c=Math.ceil(n[2]/2),h=c*Math.ceil(n[1]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${h}, ${c}, b, row, col);\n      return ${i.texture2D}(${r}, uv);\n    }\n  `}function Yj(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[1]*n[2],o=n[2],{newShape:i,keptDims:u}=ve(n),l=i;if(l.length<n.length){const n=iH(e,l),r=["row","col","depth"];return`\n        ${xj(n,t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${uH(r,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${o}, 1)));\n        ${nH(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],p=c[1],d=e.shapeInfo.flatOffset;if(p===a&&null==d)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${o}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(p===o&&null==d)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=Uj(r);return t?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${o} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${p}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}function Zj(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=lj();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,o=a.length,i=e.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=u[0],c=u[1],h=Math.ceil(a[o-1]/2);let p=h*Math.ceil(a[o-2]/2),d="int b, int row, int col",f=`b * ${p} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<o-1;m++)d=`int b${m}, `+d,p*=a[o-m-1],f=`b${m} * ${p} + `+f;return`\n    vec4 ${r}(${d}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}function Qj(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[3],o=n[2]*a,i=n[1]*o,{newShape:u,keptDims:l}=ve(n);if(u.length<n.length){const n=iH(e,u),r=["row","col","depth","depth2"];return`\n      ${xj(n,t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${uH(r,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${o}, ${a}, 1)));\n        ${nH(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(d===i&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${o}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(d===a&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=Uj(r);return t?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${o} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${d}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}function eH(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],a=t[3]*s,o=t[2]*a,i=t[1]*o,{newShape:u,keptDims:l}=ve(t);if(u.length<t.length){const t=iH(e,u),n=["row","col","depth","depth2","depth3"];return`\n      ${xj(t)}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${uH(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${i}, ${o}, ${a}, ${s})) +\n          depth3;\n        ${nH(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1];if(d===i&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=Uj(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${o} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${p}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function tH(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=ve(t);if(s.length<t.length){const t=iH(e,s),n=["row","col","depth","depth2","depth3","depth4"];return`\n      ${xj(t)}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${uH(n,a)});\n      }\n    `}const o=t[5],i=t[4]*o,u=t[3]*i,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${i})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${nH(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${i}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===o&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=Uj(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${i} + depth3 * ${o} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function nH(e){const t=e.name,n=le(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function rH(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=yj(e.shapeInfo.logicalShape,t.logicalShape),u=aH(o),l=o-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":o<2&&i.length>=1?"coords = 0;":i.map((e=>`coords.${h[e+l]} = 0;`)).join("\n");let p="";p=o<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+l]}`)).join(", ");let d="return outputValue;";const f=le(e.shapeInfo.logicalShape),m=1===f,g=le(t.logicalShape),y=1===g;if(1!==a||m||y){if(m&&!y)d=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(i.length){const e=a-2,t=a-1;i.indexOf(e)>-1&&i.indexOf(t)>-1?d="return vec4(outputValue.x);":i.indexOf(e)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(t)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${p});\n      ${d}\n    }\n  `}function sH(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.texShape,o=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===u&&null==e.shapeInfo.flatOffset&&he(o,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=aH(u),c=yj(e.shapeInfo.logicalShape,t.logicalShape),h=u-i;let p;const d=["x","y","z","w","u","v"];p=0===i?"":u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${d[e+h]} = 0;`)).join("\n");let f="";return f=u<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+h]}`)).join(", "),`\n    float ${s}() {\n      ${l} coords = getOutputCoords();\n      ${p}\n      return get${r}(${f});\n    }\n  `}function aH(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function oH(e,t,n){const{newShape:r,keptDims:s}=ve(t),a=t.length,o=e&&3===a&&1===t[0],i=o?t.slice(1):r,u=!e&&a>1&&!he(t,n)&&r.length<a||o,l=u?i:t;return{useSqueezeShape:u,uniformShape:l,keptDims:s}}function iH(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function uH(e,t){return t.map((t=>e[t])).join(", ")}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lH(e,t,n,r){const s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),a=s.map((e=>e.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},i=bj(s,o,t),u=wG(e.gl,i),l=e.createProgram(u);return Je().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:i,webGLProgram:l,inShapeInfos:a,outShapeInfo:o,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:u,source:i,webGLProgram:l,inShapeInfos:a,outShapeInfo:o},cH(e,t,l))}function cH(e,t,n){const r={},s={},a={},o=[];let i,u,l,c=null,h=null;h=e.getUniformLocation(n,"NAN",!1),1===Je().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(n,"INFINITY",!1));const p=!1;for(let d=0;d<t.variableNames.length;d++){const o=t.variableNames[d];r[o]=e.getUniformLocation(n,o,p),r[`offset${o}`]=e.getUniformLocation(n,`offset${o}`,p),t.enableShapeUniforms&&(s[`${o}Shape`]=e.getUniformLocation(n,`${o}Shape`,p),a[`${o}TexShape`]=e.getUniformLocation(n,`${o}TexShape`,p))}return t.enableShapeUniforms&&(i=e.getUniformLocation(n,"outShape",p),l=e.getUniformLocation(n,"outShapeStrides",p),u=e.getUniformLocation(n,"outTexShape",p)),t.customUniforms&&t.customUniforms.forEach(((t,r)=>{o[r]=e.getUniformLocation(n,t.name,p)})),{uniformLocations:r,customUniformLocations:o,infLoc:c,nanLoc:h,inShapesLocations:s,inTexShapesLocations:a,outShapeLocation:i,outShapeStridesLocation:l,outTexShapeLocation:u}}function hH(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],a=s.shape;if(!he(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&s.isUniform)return;const o=e.texShape,i=s.isUniform?null:s.texData.texShape;if(!he(o,i))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${i} must match`)}))}function pH(e,t,n,r,s){t.program.enableShapeUniforms||(hH(t.inShapeInfos,n),hH([t.outShapeInfo],[r]));const a=r.texData.texture,o=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,o[0],o[1]):e.setOutputMatrixTexture(a.texture,o[0],o[1]),e.setProgram(t.webGLProgram),1===Je().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const s=t.program.variableNames[r],a=t.uniformLocations[s],o=t.uniformLocations[`offset${s}`],i=t.inShapesLocations[`${s}Shape`],u=t.inTexShapesLocations[`${s}TexShape`];if(i){const{uniformShape:r}=oH(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(i,new Int32Array(r));break;case 2:e.gl.uniform2iv(i,new Int32Array(r));break;case 3:e.gl.uniform3iv(i,new Int32Array(r));break;case 4:e.gl.uniform4iv(i,new Int32Array(r));break;default:break}}if(u&&e.gl.uniform2i(u,n.texData.texShape[0],n.texData.texShape[1]),null!=a)if(n.isUniform)if(le(n.shape)<2)e.gl.uniform1f(a,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=n.texData.slice&&null!=o&&e.gl.uniform1i(o,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,a,r)}));const i=t.outShapeLocation;if(i)switch(r.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(r.shape));break;default:break}if(t.outShapeStridesLocation){const n=Fe(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n));break;default:break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s&&t.program.customUniforms.forEach(((n,r)=>{const a=t.customUniformLocations[r],o=s[r];if("float"===n.type)e.gl.uniform1fv(a,o);else if("vec2"===n.type)e.gl.uniform2fv(a,o);else if("vec3"===n.type)e.gl.uniform3fv(a,o);else if("vec4"===n.type)e.gl.uniform4fv(a,o);else if("int"===n.type)e.gl.uniform1iv(a,o);else if("ivec2"===n.type)e.gl.uniform2iv(a,o);else if("ivec3"===n.type)e.gl.uniform3iv(a,o);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(a,o)}})),e.executeProgram()}function dH(e,t,n){let r="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:o,uniformShape:i,keptDims:u}=oH(e.packedInputs,t.shape,a);let l="",c="",h="";if(1===i.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==i.length||e.packedInputs){if(i.length>2&&!e.packedInputs){const e=Fe(i);h=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else c=`${i[0]>1}_${i[1]>1}`;const p=t.shape.length,d=2===i.length&&he(t.shape,a),f=1===le(t.shape),m=_u(t.shape,n.shape),g=!e.packedInputs&&p===n.shape.length&&he(a,n.texData.texShape),y=e.packedInputs||i.length>2?"":`${a[0]>1}_${a[1]>1}`;r+=`${p}_${g}_${o?u:""}_${i.length}_${f}_${m}_${d}_${l}_${c}_${h}_${y}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+s+`${Je().getNumber("WEBGL_VERSION")}`,a}function fH(e){return Je().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class mH{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=sG.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=lj();this.outputShape=e,this.enableShapeUniforms=fH(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?hj(["r","c","d"],e):cj(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class gH{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=sG.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=lj();this.outputShape=e,this.enableShapeUniforms=fH(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?hj(["r","c","d"],e):cj(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class yH{constructor(e){this.variableNames=["A"],this.outTexUsage=aG.DOWNLOAD;const t=lj();this.outputShape=e,this.userCode=`\n      ${gj}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class bH{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=aG.DOWNLOAD;const t=lj();this.outputShape=e,this.userCode=`\n      ${gj}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const xH={R:0,G:1,B:2,A:3};class vH{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=lj();this.outputShape=e,this.enableShapeUniforms=fH(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)");let a="";for(let o=0;o<n.length;o++){const e=n[o];a+=`\n          if(offset == ${o}) {\n            result = values[${xH[e]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?mj():fj(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${a}\n        }\n        ${r.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class wH{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=lj();this.outputShape=e,this.enableShapeUniforms=fH(this.outputShape.length);let r="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let t=0;t<=1;t++){const s=2*a+t;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${t};\n          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${a};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?mj():fj(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kH(e){const t=lj(),n=`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`;return vG(e,n)}function IH(e){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return CG(e,t)}function NH(e){const t=new Uint16Array([0,1,2,2,1,3]);return $G(e,t)}function SH(e,t,n,r,s,a){AG(t,n);const o=EG(e),i=e.TEXTURE_2D;return dG(e,(()=>e.bindTexture(i,o))),dG(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),dG(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),dG(e,(()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST))),dG(e,(()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Je().getNumber("WEBGL_VERSION")?dG(e,(()=>e.texImage2D(i,0,r,t,n,0,s,a,null))):dG(e,(()=>e.texStorage2D(i,1,r,t,n))),dG(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:o,texShape:[n,t]}}function TH(e){return e.internalFormatFloat}function CH(e,t,n,r){const[s,a]=iG(t,n);return SH(e,s,a,TH(r),r.textureFormatFloat,e.FLOAT)}function $H(e){return e.internalFormatHalfFloat}function EH(e,t,n,r){const[s,a]=iG(t,n);return SH(e,s,a,$H(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function AH(e){return e.downloadTextureFormat}function RH(e,t,n,r){const[s,a]=iG(t,n);return SH(e,s,a,AH(r),e.RGBA,e.UNSIGNED_BYTE)}function _H(e){return e.internalFormatPackedFloat}function OH(e,t,n,r){const[s,a]=cG(t,n);return SH(e,s,a,_H(r),e.RGBA,e.FLOAT)}function FH(e){return e.internalFormatPackedHalfFloat}function DH(e,t,n,r){const[s,a]=cG(t,n);return SH(e,s,a,FH(r),e.RGBA,r.textureTypeHalfFloat)}function MH(e,t,n){const r=0,s=12,a=20;dG(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n)));const o=_G(e,t,"clipSpacePos",n,3,a,r);return o&&_G(e,t,"uv",n,2,a,s)}function LH(e,t,n,r,s,a){let o,i,u;dG(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(o=new Uint8Array(n*r*4),i=e.UNSIGNED_BYTE,u=e.RGBA):(o=new Float32Array(n*r*4),i=e.FLOAT,u=a.internalFormatPackedFloat),o.set(s),2===Je().getNumber("WEBGL_VERSION")?dG(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,i,o))):dG(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,i,o))),dG(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function zH(e,t,n){dG(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Je().getNumber("WEBGL_VERSION")?dG(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):dG(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Je().getNumber("WEBGL_VERSION")?dG(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):dG(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),dG(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function PH(e,t,n,r){const s=e.createBuffer();dG(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const a=4,o=4,i=a*o*t*n;return dG(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ))),dG(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),dG(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}function BH(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function WH(e,t,n,r){const[s,a]=iG(t,n),o=4,i=new Uint8Array(uG(t*n,o));return dG(e,(()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}function VH(e,t,n,r,s,a,o,i){const u=e,l=new Float32Array(hG(a,o));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function UH(e,t,n){const r=new Float32Array(t*n*4);return dG(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class GH{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=Je().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,eG(t,e)):this.gl=tG(t),e=this.gl,2===Je().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>dG(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>dG(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>dG(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>dG(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>dG(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>dG(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>dG(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>dG(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Je().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=xG(this.gl,e),ej(this.gl,t))this.textureHalfFloatExtension=xG(this.gl,t);else if(Je().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),ej(this.gl,r))this.colorBufferHalfFloatExtension=xG(this.gl,r);else if(Je().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",ej(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!ej(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=IH(this.gl),this.indexBuffer=NH(this.gl),this.framebuffer=RG(this.gl),this.textureConfig=pG(this.gl,this.textureHalfFloatExtension)}get debug(){return Je().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;dG(e,(()=>e.finish())),dG(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),dG(e,(()=>e.deleteFramebuffer(this.framebuffer))),dG(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),dG(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),dG(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),CH(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),EH(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),RH(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),zH(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),LH(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),DH(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),OH(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(zG(this.gl,this.framebuffer),this.outputTexture=null),dG(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>WH(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return VH(this.gl,e,t,n,r,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return BH(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=PH(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Je().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>UH(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=kH(t));const n=NG(t);let r;return dG(t,(()=>t.attachShader(n,this.vertexShader))),dG(t,(()=>t.attachShader(n,e))),SG(t,n),r=Object.assign(n,{vao:this.createVertexArray()}),this.bindVertexArray(r.vao),dG(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),console.assert(MH(t,r,this.vertexBuffer),"gpgpu_util.bindVertexProgramAttributeStreams not fully successful."),this.debug&&TG(t,r),this.setProgram(r),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(dG(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&(this.bindVertexArray(this.program.vao),this.debug&&TG(this.gl,this.program)),dG(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?FG(this.gl,e,t):DG(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),dG(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),MG(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=cG(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&TG(this.gl,this.program),PG(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}dG(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),dG(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=xG(this.gl,2===Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await ye((()=>this.disposed||this.isQueryAvailable(e,Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl,n=t.getQueryParameter(e,t.QUERY_RESULT);return n/1e6}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT);return n/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=jH(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in Je().platform&&(n=Je().platform.setTimeoutCustom.bind(Je().platform)),ye((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),LG(this.gl,e,this.framebuffer),this.debug&&PG(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(LG(this.gl,this.outputTexture,this.framebuffer),this.debug&&PG(this.gl)):zG(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;LG(r,e,this.framebuffer),this.debug&&PG(r),this.outputTexture=e,dG(r,(()=>r.viewport(0,0,t,n))),dG(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),dG(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function jH(e){let t=0;for(;t<e.length;++t){const n=e[t]();if(!n)break}return t-1}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const{addImpl:HH,bincountImpl:qH,bincountReduceImpl:KH,castImpl:XH,ceilImpl:JH,concatImpl:YH,equalImpl:ZH,expImpl:QH,expm1Impl:eq,floorImpl:tq,gatherNdImpl:nq,gatherV2Impl:rq,greaterImpl:sq,greaterEqualImpl:aq,lessImpl:oq,lessEqualImpl:iq,linSpaceImpl:uq,logImpl:lq,maxImpl:cq,maximumImpl:hq,minimumImpl:pq,multiplyImpl:dq,negImpl:fq,notEqualImpl:mq,prodImpl:gq,raggedGatherImpl:yq,raggedRangeImpl:bq,raggedTensorToTensorImpl:xq,rangeImpl:vq,rsqrtImpl:wq,scatterImpl:kq,sigmoidImpl:Iq,simpleAbsImpl:Nq,sliceImpl:Sq,sparseFillEmptyRowsImpl:Tq,sparseReshapeImpl:Cq,sparseSegmentReductionImpl:$q,sqrtImpl:Eq,stridedSliceImpl:Aq,stringNGramsImpl:Rq,stringSplitImpl:_q,stringToHashBucketFastImpl:Oq,subImpl:Fq,tileImpl:Dq,topKImpl:Mq,transposeImpl:Lq,uniqueImpl:zq}=H;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Pq(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function Bq(e,t){return 1===t?[e]:Pq(e,t)}function Wq(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Vq{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=fH(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=Bq("rc",this.rank),t=aH(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),s=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){const e=this.enableShapeUniforms?"outShape":this.outputShape[0];return`getA(rc), (rc + 1 >= ${e} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Uq{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=fH(this.outputShape.length);let n="";for(let r=0;r<4;r++){let e="thisRC = rc;";r%2===1&&(e+="thisRC.z += 1;"),r>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${r}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${r>0?"}":""}\n      `}this.userCode=`\n      ${Gq(t,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?mj():fj(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}function Gq(e,t){const n=t?dj(["r","c","d"],"inputShape"):cj(["r","c","d"],e);return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class jq{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=Jq(t,n),s=Yq(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=qq(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].shift();return this.usedTextures[s].push(e),e}let o;return r===oG.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===oG.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===oG.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===oG.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===oG.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(o),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),o}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=Jq(n,r),a=Yq(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const o=qq(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),i=Je().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==i&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const u=this.usedTextures[a],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Hq(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function qq(e,t,n,r,s){const a=Kq(t,r);let o;if(s){const[t,n]=cG(e[0],e[1]);o=t*n}else{const[t,n]=iG(e[0],e[1]);o=t*n}const i=Hq(n,a);return o*i}function Kq(e,t){switch(e){case oG.PACKED_2X2_FLOAT32:return _H(t);case oG.PACKED_2X2_FLOAT16:return FH(t);case oG.UNPACKED_FLOAT32:return TH(t);case oG.UNPACKED_FLOAT16:return $H(t);case oG.PACKED_4X1_UNSIGNED_BYTE:return AH(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function Xq(e){return Je().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?oG.PACKED_2X2_FLOAT32:oG.UNPACKED_FLOAT32:e?oG.PACKED_2X2_FLOAT16:oG.UNPACKED_FLOAT16}function Jq(e,t){if(e===aG.UPLOAD)return oG.PACKED_2X2_FLOAT32;if(e===aG.RENDER||null==e)return Xq(t);if(e===aG.DOWNLOAD||e===aG.PIXELS)return oG.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function Yq(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Zq{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=fH(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Qq="if (isnan(x)) return x;",eK="return x;",tK="return abs(x);";const nK="return (x >= 0.0) ? x : (exp(x) - 1.0);",rK=Qq+"\n  return (x < 0.0) ? 0.0 : x;\n",sK=Qq+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",aK="return x;",oK="return 1.0 / (1.0 + exp(-1.0 * x));",iK="return x;",uK="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",lK="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cK="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",hK="return 1.0 / (1.0 + exp(-1.0 * x));";class pK{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=fH(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class dK{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=fH(this.outputShape.length);const t=e.length,n=Bq("rc",t),r=aH(t),s=Wq(t,n),a=n.slice(-2),o=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${o}));\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const fK=hy,mK=1e-7,gK=1e-4,yK={};function bK(e){return e in yK||(yK[e]={}),yK[e]}const xK=Je().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),vK=600;function wK(){return null==Je().global.screen?1024:Je().global.screen.height*Je().global.screen.width*window.devicePixelRatio*vK/1024/1024}class kK extends J{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Je().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof GH)t=e;else{const n=tG(Je().getNumber("WEBGL_VERSION"),e);t=new GH(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=tG(Je().getNumber("WEBGL_VERSION"));t=new GH(e),this.binaryCache=bK(Je().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new jq(this.gpgpu),this.numMBBeforeWarning=wK(),this.texData=new X(this,Fi())}nextDataId(){return kK.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,s,a){const o=this.makeTensorInfo(t,n),i=this.texData.get(o.dataId);i.isPacked=!1,i.texture={texture:e,texShape:[r,s]},i.texShape=[r,s];const u=jG(t),l=new vH(u,!1,a),c=this.runWebGLProgram(l,[o],n,[[r,s]]);return c.shape=t,i.texture=null,this.disposeIntermediateTensorInfo(o),c.dataId}write(e,t,n){if((Je().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Je().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:aG.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){const t=this.texData.get(e);return t.refCount}return 0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,n,r,s){if(Je().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:aG.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:o,isPacked:i}=t;if(null!=a){let t;t=i?new pK(o,aK):new Zq(o,aK);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;if(u&&(l=Zs()),"complex64"===r){const e=this.readSync(s.real.dataId),t=this.readSync(s.imag.dataId);c=cv(e,t)}else c=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=Zs()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:o,isPacked:i}=t;if(null!=s){let t;t=i?new pK(r,aK):new Zq(r,aK);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(Je().getBool("DEBUG")&&!Je().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Je().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==a&&Je().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...lG(r))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),t=e[0],n=e[1];l=cv(t,n)}else if(null==c)l=this.getValuesFromTexture(e);else{const e=le(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const e=this.gpgpu.gl;dG(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,l),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Fi().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:s,slice:a,dtype:o,isPacked:i,texture:u}=n;if("complex64"===o)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=i?new pK(s,aK):new Zq(s,aK);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:o}],o),a=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),a}if(null==u)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),c=Fi().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>ta(e)));return ki(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return ki(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!yG(n)){if(Je().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=le(t);if(Je().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...lG(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=Je().getBool("WEBGL_PACK")&&!0===r,o=a?jG(t):t,i=a?new bH(o):new yH(o),u=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=ra(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=ra(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);o["kernelMs"]=re(e),o["getExtraProfileInfo"]=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else o["kernelMs"]={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Zs(),endMs:null}}endTimer(e){return Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Zs(),e)}async getQueryTime(e){if(Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,u=this.dataRefCount.get(i);u>1?this.dataRefCount.set(i,u-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=xK){return Je().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&le(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){ys("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return fK(e.shape,t)}packedUnaryOp(e,t,n){const r=new pK(e.shape,t),s=this.compileAndRun(r,[e],n);return Fi().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=Nq(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Je().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,tK,e.dtype);const t=new Zq(e.shape,tK),n=this.compileAndRun(t,[e]);return Fi().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&$e(n[0])){const s=n.map((e=>ea(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return Fi().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new dK(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new Vq(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){const n=[UG(e.shape),...GG(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[UG(t),...GG(t)],a=new Uq(s,n),o=!0,i=[n],u=this.runWebGLProgram(a,[r],e.dtype,i,o);return{dataId:u.dataId,shape:t,dtype:u.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:s,dtype:a}=n;if(null!=t){const e=le(s),n=t[0]*t[1]*4;oe(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const o=jG(s);let i;i=r?new gH(o):new mH(o);const u=!0,l=[null!=t?t:lG(o)],c=this.runWebGLProgram(i,[{shape:o,dtype:a,dataId:e}],a,l,u,t);return{dtype:a,shape:s,dataId:c.dataId}}runWebGLProgram(e,t,n,r,s=!1,a){const o=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(o.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===sG.DENSE){const t=null!=a?a:lG(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===le(o.shape))return i.values=we(o.dtype,0),o;const u=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&le(t.shape)<=Je().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!KG(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(o.dataId);const c={shape:o.shape,texData:i,isUniform:!1},h=dH(e,l,c),p=this.getAndSaveBinary(h,(()=>lH(this.gpgpu,e,l,c))),d=null!=this.activeTimers;let f;d&&(f=this.startTimer()),Je().get("ENGINE_COMPILE_ONLY")||pH(this.gpgpu,p,l,c,r),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),d&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=Je().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=Zs();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Je().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===s){const e=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),e}return o}compileAndRun(e,t,n,r,s=!1){n=n||t[0].dtype;const a=this.runWebGLProgram(e,t,n,r,s);return a}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Je().getBool("IS_TEST")){const e=Object.keys(this.binaryCache);e.forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Li((()=>{if(!Je().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Je().getBool("DEBUG");Je().set("DEBUG",!1);const t=this.abs(yu(1e-8)).dataSync()[0];if(Je().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?mK:gK}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:o,isPacked:i}=t;if(null!=a)return;const u=null!=this.activeTimers;let l;u&&(l=Zs());let c=t.texShape;if(null==c&&(c=HG(n,i),t.texShape=c),null!=s){const e=jG(n);let a,o=c[1],h=c[0];const p=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!i&&p||([o,h]=cG(c[0],c[1])),a=i?new wH(e,p):new vH(e,p);const d=p?[h,o]:c,f=this.makeTensorInfo(d,r),m=this.texData.get(f.dataId);m.usage=p?aG.PIXELS:aG.UPLOAD,m.texShape=d,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),o,h,s);const g=[[h,o]],y=!0,b=this.runWebGLProgram(a,[f],r,g,y),x=this.texData.get(b.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,Je().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=Zs()-l)}else{const e=this.acquireTexture(c,o,r,i);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=IK(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Te(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Bx(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw IG(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:t,customUniformLocations:n,infLoc:r,nanLoc:s,inShapesLocations:a,inTexShapesLocations:o,outShapeLocation:i,outShapeStridesLocation:u,outTexShapeLocation:l}=cH(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=s,e.inShapesLocations=a,e.inTexShapesLocations=o,e.outShapeLocation=i,e.outShapeStridesLocation=u,e.outTexShapeLocation=l}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:r,height:s,width:a,channels:o}=e,i=Fi().backend;if(!i.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=i.writeTexture(r,t,n,s,a,o);return Fi().makeTensorFromDataId(u,t,n,i)}}function IK(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}kK.nextDataId=0;
/** @license See the LICENSE file. */
const NK="4.2.0";
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Qa()&&qi("webgl",(()=>new kK),2);const SK="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class TK{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Fu(t,n),this.enableShapeUniforms=fH(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const CK="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class $K{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Fu(t,n);const s=this.outputShape.length;this.enableShapeUniforms=fH(s);let a="";if(r)if(0===s||1===le(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const e=aH(s);if(a=`\n          ${e} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=Bq("coords",s);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function EK(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const AK={kernelName:bn,backendName:"webgl",kernelFunc:EK};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function RK(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),o=n.texData.get(a.dataId),i=EK({inputs:{x:r},backend:n}),u=EK({inputs:{x:s},backend:n});return o.complexTensorInfos={real:i,imag:u},a}const _K={kernelName:Et,backendName:"webgl",kernelFunc:RK},OK="return (a < 0.) ? b * a : a;",FK="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";function DK(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,o=n.makeTensorInfo([],"float32",Xs(a,"float32")),i=Je().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $K(FK,s.shape,o.shape):new TK(OK,s.shape,o.shape),u=n.runWebGLProgram(i,[s,o],"float32");return n.disposeIntermediateTensorInfo(o),u}const MK={kernelName:Nn,backendName:"webgl",kernelFunc:DK},LK="return (a < 0.) ? b * a : a;",zK="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";function PK(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=Je().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $K(zK,r.shape,s.shape):new TK(LK,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],"float32")}const BK={kernelName:lr,backendName:"webgl",kernelFunc:PK},WK="if (isnan(x)) return x;";function VK({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:o}=s,i=a,u=r||o.dtype;if(i.shouldExecuteOnCPU([o])&&null!=n){const e=i.texData.get(o.dataId),t=n(e.values,u);return i.makeTensorInfo(o.shape,u,t)}const l=Je().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t;let c;return c=l?new pK(o.shape,t):new Zq(o.shape,e),i.runWebGLProgram(c,[o],u)}}function UK({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:o,backend:i})=>{const{a:u,b:l}=o,c=i;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},a={dataId:r.dataId,dtype:r.dtype,shape:l.shape},o=new TK(e,u.shape,l.shape);return c.runWebGLProgram(o,[s,a],Fa(n.dtype,r.dtype))})),a=RK({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const h=a||Fa(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=s){const e=c.texData.get(u.dataId).values,t=c.texData.get(l.dataId).values,n="string"===u.dtype?Gv(e):e,r="string"===u.dtype?Gv(t):t,[a,o]=s(u.shape,l.shape,n,r,h),i=c.makeTensorInfo(o,h),p=c.texData.get(i.dataId);return p.values=a,i}const p=Je().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t;let d;return d=p?new $K(t,u.shape,l.shape,n):new TK(e,u.shape,l.shape),c.runWebGLProgram(d,[u,l],h)}}function GK(e,t=!1){if("linear"===e)return t?iK:eK;if("relu"===e)return t?lK:rK;if("elu"===e)return t?uK:nK;if("relu6"===e)return t?cK:sK;if("prelu"===e)return t?zK:LK;if("leakyrelu"===e)return t?FK:OK;if("sigmoid"===e)return t?hK:oK;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class jK{constructor(e,t,n,r=!1,s=!1,a=!1,o=null,i=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=fH(this.outputShape.length);const l=r?e[1]:e[2],c=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",p=s?"rc.z, i * 2":"i * 2, rc.z",d=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";o&&(m=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${o}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${o}\n        }`:`vec4 activation(vec4 x) {\n          ${o}\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${b};\n        int batchB = ${x};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const HK={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class qK{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Fu(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const KK="return a * b;";function XK(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=Fa(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new qK(HK.REAL,r.shape,s.shape),o=new qK(HK.IMAG,r.shape,s.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(a,i,"float32"),l=n.runWebGLProgram(o,i,"float32"),c=RK({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[o,i]=dq(r.shape,s.shape,e.values,t.values,a),u=n.makeTensorInfo(i,a),l=n.texData.get(u.dataId);return l.values=o,u}let o;return o=Je().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $K(KK,r.shape,s.shape):new TK(KK,r.shape,s.shape),n.runWebGLProgram(o,[r,s],a)}const JK={kernelName:Yn,backendName:"webgl",kernelFunc:XK};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function YK(e,t,n){const r=[UG(e.shape),...GG(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[UG(t),...GG(t)],o=new Uq(a,r),i=!0,u=[r],l=n.runWebGLProgram(o,[s],e.dtype,u,i);return{dataId:l.dataId,shape:t,dtype:l.dtype}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ZK(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,o=n,i=le(s.shape),u=be(a,i),l=le(u);oe(i===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`));const c=o.texData.get(s.dataId);return!c.isPacked||KG(s.shape,u)||null!==c.texture&&KG(c.shape,u)?(o.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype}):YK(s,u,o)}const QK={kernelName:br,backendName:"webgl",kernelFunc:ZK};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class eX{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];const o=4*Math.floor(n/4),i=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${pe(e)?e.toPrecision(2):e}, ones);`}let l="";s%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===i}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===i}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===i}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class tX{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${i}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${i}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(o="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(o="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";s%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${o});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nX(e){const t=[];while(0===t.length||1!==t[t.length-1].outSize){const n=t.length?t[t.length-1].outSize:e[1],r=Xx(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}function rX(e,t,n,r){const s=nX(e.shape);let a=e;for(let o=0;o<s.length;o++){const{inSize:i,windowSize:u,outSize:l}=s[o];let c,h;c="mean"===n?0===o?new eX({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l},i):new eX({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l}):new tX({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l},n),h=a,a=r.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return a}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class sX{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;const r=aH(this.rank),s=aX(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}function aX(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let s=0;s<e.length;s++)r[e[s]]=n[s];return r.join()}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class oX{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=aH(this.rank),s=Pq("rc",this.rank),a=new Array(this.rank);for(let l=0;l<t.length;l++)a[t[l]]=s[l];const o=`vec2(${a.slice(-2).join()})`,i=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${o})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${i}) {\n        result[1] = ${u};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${i}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function iX(e,t,n){const r=Je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new oX(e.shape,t):new sX(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uX(e,t,n,r){const s=t,a=e.shape.length,o=xe(s,e.shape);let i=o;const u=sd(i,a),l=null!=u;let c=e;l&&(c=iX(e,u,r),i=od(i.length,a)),rd("sum",i,a);const[h,p]=td(c.shape,i);let d=h;n&&(d=nd(h,o));const f=le(p),m=le(e.shape),g=m/f,y=ZK({inputs:{x:c},attrs:{shape:[g,f]},backend:r}),b=Da(e.dtype),x=rX(y,b,"sum",r),v=ZK({inputs:{x:x},attrs:{shape:d},backend:r});return r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(x),l&&r.disposeIntermediateTensorInfo(c),v}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lX(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;return uX(s,a,o,n)}const cX={kernelName:zr,backendName:"webgl",kernelFunc:lX};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hX(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,o=n,i=s.shape.length,u=new Array(i);for(let c=0;c<u.length;c++)u[c]=s.shape[a[c]];let l;if(o.shouldExecuteOnCPU([s])){const e=o.texData.get(s.dataId),t=e.values,n=Lq(t,s.shape,s.dtype,a,u);l=o.makeTensorInfo(u,s.dtype);const r=o.texData.get(l.dataId);r.values=n}else l=iX(s,a,o);return l}const pX={kernelName:as,backendName:"webgl",kernelFunc:hX},dX=1e3;function fX({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],p=r?t.shape[c-1]:t.shape[c-2],d=n?e.shape[l-1]:e.shape[l-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=le(m),b=le(g),x=Fu(e.shape.slice(0,-2),t.shape.slice(0,-2)),v=x.concat([d,f]);oe(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const w=n?[y,h,d]:[y,d,h],k=r?[b,f,p]:[b,p,f],I=ZK({inputs:{x:e},backend:s,attrs:{shape:w}}),N=ZK({inputs:{x:t},backend:s,attrs:{shape:k}}),S=[I,N],T=Math.max(y,b),C=n?I.shape[1]:I.shape[2],$=null!=a,E=null!=o,A="leakyrelu"===u,R=null!=u?GK(u,!0):null,_=$||E||A||null!=R;let O;if((1===d||1===f)&&C>dX&&!1===_){let e=I,t=N;n&&(e=hX({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),S.push(e)),r&&(t=hX({inputs:{x:N},backend:s,attrs:{perm:[0,2,1]}}),S.push(t));const a=1!==f,o=1===f;let i=e;a&&(i=ZK({inputs:{x:e},backend:s,attrs:{shape:[T,C,1]}}),S.push(i));const u=1===f?2:1;let l=t;o&&(l=ZK({inputs:{x:t},backend:s,attrs:{shape:[T,1,C]}}),S.push(l));const c=XK({inputs:{a:i,b:l},backend:s});O=lX({inputs:{x:c},backend:s,attrs:{axis:u,keepDims:!0}}),S.push(c)}else{const u=Fa(e.dtype,t.dtype),l=new jK(w,k,[T,d,f],n,r,$,R,E,A),c=[I,N];if(null!=a&&c.push(a),E&&c.push(o),A){const e=s.makeTensorInfo([],"float32",Xs(i,"float32"));c.push(e),S.push(e)}O=s.runWebGLProgram(l,c,u)}const F=ZK({inputs:{x:O},backend:s,attrs:{shape:v}});S.push(O);for(const D of S)s.disposeIntermediateTensorInfo(D);return F}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mX(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return fX({a:s,b:a,transposeA:u,transposeB:l,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:h,activation:c})}const gX={kernelName:fs,backendName:"webgl",kernelFunc:mX},yX="return abs(x);";function bX(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=Nq(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=Je().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new pK(r.shape,yX):new Zq(r.shape,yX),n.runWebGLProgram(s,[r],r.dtype)}const xX={kernelName:rt,backendName:"webgl",kernelFunc:bX},vX=Qq+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n",wX=VK({opSnippet:vX}),kX={kernelName:st,backendName:"webgl",kernelFunc:wX},IX=Qq+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));",NX=VK({opSnippet:IX}),SX={kernelName:at,backendName:"webgl",kernelFunc:NX},TX="return a + b;",CX=UK({opSnippet:TX,packedOpSnippet:TX,supportsComplex:!0,cpuKernelImpl:HH}),$X={kernelName:ot,backendName:"webgl",kernelFunc:CX};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class EX{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class AX{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function RX(e){const{inputs:t,backend:n}=e,r=t;if(1===r.length)return EK({inputs:{x:r[0]},backend:n});if(r.length>Je().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(r.length/2),t=RX({inputs:r.slice(0,e),backend:n}),s=RX({inputs:r.slice(e),backend:n});return RX({inputs:[t,s],backend:n})}const s=r.map((e=>e.dtype)).reduce(((e,t)=>Fa(e,t))),a=r.map((e=>e.shape)),o=Je().getBool("WEBGL_PACK"),i=o?new AX(r[0].shape,a):new EX(r[0].shape,a);return n.runWebGLProgram(i,r,s)}const _X={kernelName:it,backendName:"webgl",kernelFunc:RX};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function OX(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,u=xe(a,s.shape);let l=u;const c=sd(l,i);let h=s;null!=c&&(h=hX({inputs:{x:s},backend:n,attrs:{perm:c}}),l=od(l.length,i)),rd("all",l,i);const[p,d]=td(h.shape,l),f=le(d),m=ZK({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),g=rX(m,m.dtype,"all",n);let y;if(o){const e=nd(p,u);y=ZK({inputs:{x:g},backend:n,attrs:{shape:e}})}else y=ZK({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),y}const FX={kernelName:ut,backendName:"webgl",kernelFunc:OX};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function DX(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,u=xe(a,s.shape);let l=u;const c=sd(l,i);let h=s;null!=c&&(h=hX({inputs:{x:s},backend:n,attrs:{perm:c}}),l=od(l.length,i)),rd("any",l,i);const[p,d]=td(h.shape,l),f=le(d),m=ZK({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),g=rX(m,m.dtype,"any",n);let y;if(o){const e=nd(p,u);y=ZK({inputs:{x:g},backend:n,attrs:{shape:e}})}else y=ZK({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),y}const MX={kernelName:lt,backendName:"webgl",kernelFunc:DX};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class LX{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const o="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${i};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${o} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class zX{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,oe(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const o=this.outputShape,i=o.length,u=aH(i),l=Bq("coords",i);let c,h;if(1===a){h=i+1;const e=aH(h);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[i-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[i-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[i-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[i-2]};`}else h=i,c=`\n        ${u} sourceLocR = coords;\n        ++${l[i-1]};\n        ${u} sourceLocG = coords;\n        ++${l[i-2]};\n        ${u} sourceLocA = coords;\n        --${l[i-1]};\n        ${u} sourceLocB = coords;\n        --${l[i-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),d="."+p[h-1],f=p.map((e=>"int "+e)),m=Bq("sourceLocR",h-1).concat("inIdx.r"),g=Bq("sourceLocG",h-1).concat("inIdx.g"),y=Bq("sourceLocB",h-1).concat("inIdx.b"),b=Bq("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[i-1]} < ${o[i-1]-1};\n        bool hasNextRow = ${l[i-2]} < ${o[i-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},\n          sourceLocB${d}, sourceLocA${d}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function PX(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const o=Xx(a),i={windowSize:o,inSize:a,batchSize:s,outSize:Math.ceil(a/o)},u=new LX(i,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const h=PX(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function BX(e,t,n,r=null){const s=null!=r?r.shape:t.shape,a=s[s.length-1],o=Xx(a),i=new zX(s,o,n,null==r),u=null==r?[t]:[t,r],l=e.runWebGLProgram(i,u,"int32");if(l.shape.length===t.shape.length){const r=BX(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function WX(e,t,n,r){const s=[n];if(rd("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!Je().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId),o=null!==a&&a.isPacked;let i=t;o&&(i=e.unpackTensor(t),n.push(i));const[u,l]=td(i.shape,s),c=le(l),h=ZK({inputs:{x:i},backend:e,attrs:{shape:[-1,c]}});n.push(h);const p=PX(e,h,r);n.push(p);const d=ZK({inputs:{x:p},backend:e,attrs:{shape:u}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return BX(e,t,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function VX(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let o=xe(a,s.shape);const i=sd(o,s.shape.length);let u=s;const l=[];null!=i&&(u=hX({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(u),o=od(o.length,u.shape.length)),rd("argMax",[o[0]],u.shape.length);const c=WX(n,u,o[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const UX={kernelName:ct,backendName:"webgl",kernelFunc:VX};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function GX(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let o=xe(a,s.shape);const i=sd(o,s.shape.length);let u=s;const l=[];null!=i&&(u=hX({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(u),o=od(o.length,u.shape.length)),rd("argMin",[o[0]],u.shape.length);const c=WX(n,u,o[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const jX={kernelName:ht,backendName:"webgl",kernelFunc:GX},HX=Qq+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n",qX=VK({opSnippet:HX}),KX={kernelName:pt,backendName:"webgl",kernelFunc:qX},XX=Qq+"return log(x + sqrt(x * x + 1.0));",JX=VK({opSnippet:XX}),YX={kernelName:dt,backendName:"webgl",kernelFunc:JX},ZX=Qq+"\n  return atan(x);\n",QX=VK({opSnippet:ZX}),eJ={kernelName:ft,backendName:"webgl",kernelFunc:QX},tJ=SK+"\n  return atan(a, b);\n",nJ="\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+CK+"\n  return result;\n",rJ=UK({opSnippet:tJ,packedOpSnippet:nJ}),sJ={kernelName:gt,backendName:"webgl",kernelFunc:rJ},aJ=Qq+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;",oJ=VK({opSnippet:aJ}),iJ={kernelName:mt,backendName:"webgl",kernelFunc:oJ};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class uJ{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,o=e.strideHeight,i=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${o}, ${i});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}const b="max";let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / max(count, 1.0)");const v=4*Math.floor(a/4),w=a%4,k=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${b}(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${i});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${v}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${k}\n          }\n\n          int xC = xCCorner + ${v};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${k}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class lJ{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,o=e.strideDepth,i=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${o}, ${i}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}const v="max";let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / max(count, 1.0)");const k=4*Math.floor(a/4),I=a%4,N=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${v}(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${o}, ${i}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${k}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${N}\n            }\n\n            int xC = xCCorner + ${k};\n            if (${1===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${N}\n            } else if (${2===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${N}\n            } else if (${3===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${N}\n            }\n          }\n        }\n        setOutput(${w});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cJ(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;ij(s,"avgPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=r,l=1;oe(ph(o,l),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`));const c=Zc(s.shape,a,o,l,i,u);if(1===c.filterWidth&&1===c.filterHeight&&he(c.inShape,c.outShape))return EK({inputs:{x:s},backend:n});const h=new uJ(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}const hJ={kernelName:yt,backendName:"webgl",kernelFunc:cJ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pJ(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:u,dataFormat:l}=r,c=[1,1,1],h=Qc(s.shape,a,o,c,i,u,l),p=new lJ(h,"avg",!1);return n.runWebGLProgram(p,[s],"float32")}const dJ={kernelName:xt,backendName:"webgl",kernelFunc:pJ};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class fJ{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=i-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${i};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${o}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class mJ{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${i}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gJ(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a,{filterSize:i,strides:u,pad:l,dimRoundingMode:c}=r,h=[1,1,1],p=Qc(o.shape,i,u,h,l,c),d=new mJ(p);return n.runWebGLProgram(d,[s],o.dtype)}const yJ={kernelName:vt,backendName:"webgl",kernelFunc:gJ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bJ(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a;ij([s,a],"avgPoolGrad");const{filterSize:i,strides:u,pad:l}=r,c=Zc(o.shape,i,u,1,l),h=new fJ(c);return n.runWebGLProgram(h,[s],o.dtype)}const xJ={kernelName:bt,backendName:"webgl",kernelFunc:bJ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vJ(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:o,transposeB:i}=r;return fX({a:s,b:a,transposeA:o,transposeB:i,backend:n})}const wJ={kernelName:wt,backendName:"webgl",kernelFunc:vJ};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class kJ{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Fu(e,t),Fu(e,n);let o="0.0";null!=r&&(Fu(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";null!=s&&(Fu(e,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${i};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class IJ{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Fu(e,t),Fu(e,n);let o="vec4(0.0)";null!=r&&(Fu(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";null!=s&&(Fu(e,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${i};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const NJ=({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:a,offset:o,scale:i}=e;oe(s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),oe(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),oe(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,s,a];let c=null;null!=o&&(c=o.shape,l.push(o));let h=null;null!=i&&(h=i.shape,l.push(i));const p=Je().getBool("WEBGL_PACK_NORMALIZATION")?new IJ(r.shape,s.shape,a.shape,c,h,u):new kJ(r.shape,s.shape,a.shape,c,h,u),d=t.runWebGLProgram(p,l,l[0].dtype);return d},SJ={kernelName:dn,backendName:"webgl",kernelFunc:NJ};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class TJ{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=aH(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=$J(this.rank);let r;const s=e.map(((e,t)=>`sourceLoc.${CJ[t]} = start[${t}] + coords.${CJ[t]};`));r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${s.join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const CJ=["x","y","z","w","u","v"];function $J(e){if(1===e)return"sourceLoc";if(e<=6)return CJ.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class EJ{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=aH(this.rank),n=Bq("coords",this.rank),r=Bq("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,o=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,i=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${o}\n        ${i}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function AJ(e,t,n,r){const s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),o=r.texData.get(a.dataId);Object.assign(o,s),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=oc(t,Fe(e.shape));s.slice&&(i+=s.slice.flatOffset),o.slice={flatOffset:i,origDataId:s.slice&&s.slice.origDataId||e.dataId};const u=r.dataRefCount.get(o.slice.origDataId)||1;return r.dataRefCount.set(o.slice.origDataId,u+1),a}function RJ(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:o}=r,[i,u]=ic(s,a,o);if(ql(s,i,u),0===le(u))return n.makeTensorInfo(u,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=Sq(e.values,i,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,t)}const{isPacked:l}=n.texData.get(s.dataId),c=ac(s.shape,i,u);if(l||!c){const e=Je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new EJ(u):new TJ(u),t=[i];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),AJ(s,i,u,n)}const _J={kernelName:Rr,backendName:"webgl",kernelFunc:RJ},OJ=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:o}=r;oe(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const i=a.reduce(((e,t)=>e*t)),u=Yx(s.shape,a,i),l=Zx(u.length,a.length),c=Qx(s.shape,a,i),h=ev(o,a.length),p=tv(c,o,a.length),d=[],f=ZK({inputs:{x:s},backend:n,attrs:{shape:u}}),m=hX({inputs:{x:f},backend:n,attrs:{perm:l}}),g=ZK({inputs:{x:m},backend:n,attrs:{shape:c}}),y=RJ({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return d.push(f),d.push(m),d.push(g),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),y},FJ={kernelName:kt,backendName:"webgl",kernelFunc:OJ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function DJ(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o}=r,i=n.readSync(s.dataId),u=n.readSync(a.dataId),l=qH(i,u,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,l)}const MJ={kernelName:It,backendName:"webgl",kernelFunc:DJ};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function LJ(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.readSync(r.dataId),o=n.readSync(s.dataId),i=Fu(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const zJ={kernelName:St,backendName:"webgl",kernelFunc:LJ},PJ="return float(a != b);",BJ=UK({opSnippet:PJ,cpuKernelImpl:mq,dtype:"bool"}),WJ={kernelName:Qn,backendName:"webgl",kernelFunc:BJ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function VJ(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.texData.get(r.dataId);return EK({inputs:{x:s.complexTensorInfos.real},backend:n})}const UJ={kernelName:mr,backendName:"webgl",kernelFunc:VJ},GJ="return float(int(x));";function jJ(e,t){const n=new Zq(e.shape,GJ),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function HJ(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return EK({inputs:{x:s},backend:n});const e=Af(s.shape),t=HJ({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=RK({inputs:{real:t,imag:e},backend:n});return e.dispose(),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=VJ({inputs:{input:s},backend:n}),t=HJ({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!Se(s.dtype,a)){const e=EK({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}if(n.shouldExecuteOnCPU([s])){const e=n.texData.get(s.dataId).values,[t,r,o]=XH(e,s.shape,s.dtype,a);return n.makeTensorInfo(t,r,o)}if("int32"===a)return jJ(s,n);if("bool"===a){const e=n.makeTensorInfo([],"bool",we("bool",1)),t={a:s,b:e},r=BJ({inputs:t,backend:n});return n.disposeIntermediateTensorInfo(e),r}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}const qJ={kernelName:Tt,backendName:"webgl",kernelFunc:HJ},KJ="return ceil(x);",XJ=VK({opSnippet:KJ,packedOpSnippet:KJ,cpuKernelImpl:JH}),JJ={kernelName:Ct,backendName:"webgl",kernelFunc:XJ};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class YJ{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ZJ{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function QJ(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:o}=r;let i;i=Je().getBool("WEBGL_PACK_CLIP")?new ZJ(s.shape):new YJ(s.shape);const u=[[a],[o]];return n.runWebGLProgram(i,[s],s.dtype,u)}const eY={kernelName:$t,backendName:"webgl",kernelFunc:QJ};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class tY{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nY(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function rY(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new tY(r.shape),o=[nY(r,s.complexTensorInfos.real),nY(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,o,o[0].dtype)}const sY={kernelName:At,backendName:"webgl",kernelFunc:rY};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class aY{constructor(e){this.outputShape=[],this.outputShape=Vx(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){const e=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${e}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class oY{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Vx(e,t);const n=this.outputShape,r=n.length,s=aH(r),a=Bq("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const i=new Array(e.length-1);i[0]=e[0][t];for(let f=1;f<i.length;f++)i[f]=i[f-1]+e[f][t];const u=o[t],l=o.slice(-2),c=o.join();let h=`if (${u} < ${i[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let f=1;f<i.length;f++){const e=i[f-1];h+=`\n        if (${u} < ${i[f]}  && ${u} >= ${i[f-1]}) {\n          return getChannel(\n            getT${f}(${iY(o,u,e)}),\n            vec2(${iY(l,u,e)}));\n        }`}const p=i.length,d=i[i.length-1];h+=`\n        return getChannel(\n          getT${p}(${iY(o,u,d)}),\n          vec2(${iY(l,u,d)}));`,this.userCode=`\n      float getValue(${o.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function iY(e,t,n){const r=e.indexOf(t),s=e.map(((e,t)=>t===r?`${e} - ${n}`:e));return s.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uY(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.texData.get(r.dataId);return EK({inputs:{x:s.complexTensorInfos.imag},backend:n})}const lY={kernelName:vn,backendName:"webgl",kernelFunc:uY};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cY(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>VJ({inputs:{input:e},backend:n}))),s=e.map((e=>uY({inputs:{input:e},backend:n}))),a=cY(r,t,n),o=cY(s,t,n),i=RK({inputs:{real:a,imag:o},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),i}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=le(e.shape.slice(t)),s=[-1,r];return ZK({inputs:{x:e},backend:n,attrs:{shape:s}})})),a=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=Vx(s.map((e=>e.shape)),1),i=1===s[0].shape[0],u=YH(a,o,r,i),l=Vx(e.map((e=>e.shape)),t),c=n.makeTensorInfo(l,r,u);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const a=e.filter((e=>le(e.shape)>0)),o=Je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&a[0].shape.length>1;if(1===a.length){const t=o?new Zq(e[0].shape,aK):new pK(e[0].shape,aK);return n.runWebGLProgram(t,e,r)}const i=Je().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(a.length>i){const e=[];for(let s=0;s<a.length;s+=i){const r=a.slice(s,s+i);e.push(cY(r,t,n))}const r=cY(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return r}if(o){const e=new oY(a.map((e=>e.shape)),t);return n.runWebGLProgram(e,a,r)}const{tensors2D:u,outShape:l}=hY(a,t,n),c=new aY(u.map((e=>e.shape))),h=n.runWebGLProgram(c,u,r);u.forEach((e=>n.disposeIntermediateTensorInfo(e)));const p=ZK({inputs:{x:h},attrs:{shape:l},backend:n});return n.disposeIntermediateTensorInfo(h),p}function hY(e,t,n){const r=Vx(e.map((e=>e.shape)),t),s=e.map((e=>ZK({inputs:{x:e},attrs:{shape:[-1,le(e.shape.slice(t))]},backend:n})));return{tensors2D:s,outShape:r}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pY(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=xe(s,t[0].shape)[0],o=t.map((e=>e.shape));Wx(o,a);const i=Vx(t.map((e=>e.shape)),a);if(0===le(i))return n.makeTensorInfo(i,t[0].dtype,[]);const u=t.filter((e=>le(e.shape)>0));return 1===u.length?EK({inputs:{x:u[0]},backend:n}):cY(u,a,n)}const dY={kernelName:Rt,backendName:"webgl",kernelFunc:pY};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class fY{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${i}, ${u});\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class mY{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${o});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${i};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class gY{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=fH(this.outputShape.length);const a=e.padInfo.left,o=e.strideWidth,i=e.dilationWidth,u=e.filterHeight,l=e.filterWidth,c=l;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let m=0;m<l;m++)h+=`\n           vec4 xTexelC${2*m};\n           int xTexelC${2*m}Ready;\n           vec4 xTexelC${2*m+1};\n           int xTexelC${2*m+1}Ready;\n           vec4 xC${m};`;h+=`\n     for (int r = 0; r < ${u}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let m=0;m<l;m++)h+=`\n           xTexelC${2*m} = vec4(0.0);\n           xTexelC${2*m}Ready = 0;\n           xTexelC${2*m+1} = vec4(0.0);\n           xTexelC${2*m+1}Ready = 0;\n           xC${m} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(c+1)/2;m++){const t=2*m;if(h+=`\n           xC = xCCorner + ${t*i};\n           `,1===o){if(t<l&&(a%2===1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n               `,h+=1===i&&t>0?`\n                 xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                   } else {\n                     xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xC${t} = xTexelC${t};\n                 `,t+1<l)){const e=a%2===0?te(i):i;i%2===0&&a%2===1||i%2!==0&&a%2!==1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                     xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${t+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${t+1}Ready = 1;\n                   }\n                   `,h+=i>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                     } else {\n                      xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                     }\n                     `:`\n                     xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                     `):h+=1===e?`\n                     xC${t+1} = xTexelC${t};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                       xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${t+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${t+1}Ready = 1;\n                     }\n\n                     xC${t+1} = xTexelC${t+1};\n                     `}}else t<l&&(a%2===1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n               `,t+1<l&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(\n                   xTexelC${t}.xy, xTexelC${t+1}.xy);\n               `,t+1<l&&(h+=`\n                   xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                 `)));t<l&&(h+=`\n             wTexel = getW(r, ${t}, d1, d2);\n             dotProd += xC${t}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${t}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,t+1<l&&(h+=`\n               wTexel = getW(r, ${t+1}, d1, d2);\n               dotProd += xC${t+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${t+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let p="",d="";n&&(p=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:s?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,d="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${p}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${d}\n         setOutput(result);\n       }\n     `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class yY{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=fH(this.outputShape.length);const{dataFormat:n}=t,r=lj(),s="channelsLast"===n,a=s?1:2,o=s?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let l=0;l<=1;l++)for(let e=0;e<=1;e++)u+=`\n          blockIndex = rc.z + ${e};\n          pos = rc.y + ${l};\n\n          ${i}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${o}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*l+e}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*l+e}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bY(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function xY({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){const u=e.shape,l=r.texData.get(e.dataId),c=n.inChannels,h=u[0]*u[1]*u[2],p=n.outChannels,d="channelsLast"===n.dataFormat,f=!1,m=!1;let g;const y=[];if(null!=a){const e=bY(a.shape,d);null!=e&&(a=ZK({inputs:{x:a},backend:r,attrs:{shape:e}}),y.push(a))}if(null!=s){const e=bY(s.shape,d);null!=e&&(s=ZK({inputs:{x:s},backend:r,attrs:{shape:e}}),y.push(s))}const b=(1===h||1===p)&&c>dX,x=!b&&l.isPacked&&d&&null!=l.texture&&u[2]%2!==0&&he(l.shape.slice(-3),u.slice(-3));if(x){const c=u[0]*u[1]*(u[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},p=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,oe(KG(l.shape,h.shape),(()=>`packed reshape ${l.shape} to ${h.shape} isn't free`));const d=ZK({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(d);const b=fX({a:h,b:d,backend:r,transposeA:f,transposeB:m,bias:s,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),x=r.texData.get(b.dataId);oe(x.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=p,x.shape=n.outShape,g=EK({inputs:{x:b},backend:r}),g.shape=n.outShape,y.push(b)}else{const u=n.outHeight*n.outWidth,l=ZK({inputs:{x:e},backend:r,attrs:{shape:d?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),c=ZK({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=fX({a:d?l:c,b:d?c:l,transposeA:!d,transposeB:m,backend:r,bias:s,activation:i,preluActivationWeights:a,leakyreluAlpha:o});g=ZK({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),y.push(l),y.push(c),y.push(h)}for(const v of y)r.disposeIntermediateTensorInfo(v);return g}function vY({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:p,dataFormat:d}=n,f="channelsLast"===d,m=u*l*c,g=p*h,y=[n.batchSize,m,g],b=!0,x=!1,v=[];if(null!=a){const e=bY(a.shape,f);null!=e&&(a=ZK({inputs:{x:a},backend:r,attrs:{shape:e}}),v.push(a))}if(null!=s){const e=bY(s.shape,f);null!=e&&(s=ZK({inputs:{x:s},backend:r,attrs:{shape:e}}),v.push(s))}const w=ZK({inputs:{x:t},backend:r,attrs:{shape:[1,m,le(t.shape)/m]}});v.push(w);const k=new yY(y,n),I=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],N=r.runWebGLProgram(k,[e],"float32",I),S=ZK({inputs:{x:N},backend:r,attrs:{shape:y}});v.push(N),v.push(S);const T=null!=s,C=null!=a,$="leakyrelu"===i,E=i?GK(i,!0):null,A=new jK(f?S.shape:w.shape,f?w.shape:S.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],b,x,T,E,C,$),R=f?[S,w]:[w,S];if(s&&R.push(s),C&&R.push(a),$){const e=r.makeTensorInfo([],"float32",Xs(o,"float32"));R.push(e),v.push(e)}const _=r.runWebGLProgram(A,R,"float32"),O=ZK({inputs:{x:_},backend:r,attrs:{shape:n.outShape}});v.push(_);for(const F of v)r.disposeIntermediateTensorInfo(F);return O}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wY(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dataFormat:u,dilations:l,dimRoundingMode:c}=r,h=fh(u),p=eh(s.shape,a.shape,o,l,i,c,!1,h);let d;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(p.strideWidth<=2&&"channelsLast"===h&&Je().getBool("WEBGL_EXP_CONV")){const e=new gY(p),t=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];d=n.runWebGLProgram(e,[s,a],"float32",t)}else if(Je().getBool("WEBGL_CONV_IM2COL"))d=vY({x:s,filter:a,convInfo:p,backend:n});else{const e=new fY(p);d=n.runWebGLProgram(e,[s,a],"float32")}else d=xY({x:s,filter:a,convInfo:p,backend:n});const f=ZK({inputs:{x:d},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(d),f}const kY={kernelName:_t,backendName:"webgl",kernelFunc:wY};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class IY{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class NY{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,u=a?1:2,l=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class SY{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,o=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${o};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class TY{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${i}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function CY(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,h=fh(u),p=eh(s.shape,c,o,1,i,l,!1,h),d=new IY(p);return n.runWebGLProgram(d,[s,a],"float32")}const $Y={kernelName:Ot,backendName:"webgl",kernelFunc:CY};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function EY(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:o,strides:i,pad:u,dataFormat:l,dimRoundingMode:c}=r,h=fh(l),p=eh(o,a.shape,i,1,u,c,!1,h),d=new NY(p);return n.runWebGLProgram(d,[s,a],"float32")}const AY={kernelName:Ft,backendName:"webgl",kernelFunc:EY};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function RY(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:u}=r,l=th(s.shape,a.shape,o,u,i),c=new mY(l);return n.runWebGLProgram(c,[s,a],"float32")}const _Y={kernelName:Dt,backendName:"webgl",kernelFunc:RY};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function OY(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,filterShape:u}=r,l=th(s.shape,u,o,1,i),c=new SY(l);return n.runWebGLProgram(c,[s,a],"float32")}const FY={kernelName:Mt,backendName:"webgl",kernelFunc:OY};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function DY(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:o,strides:i,inputShape:u}=r,l=th(u,a.shape,i,1,o),c=new TY(l);return n.runWebGLProgram(c,[s,a],"float32")}const MY={kernelName:Lt,backendName:"webgl",kernelFunc:DY},LY=WK+"\n  return cos(x);\n",zY=VK({opSnippet:LY}),PY={kernelName:zt,backendName:"webgl",kernelFunc:zY},BY="\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n",WY=VK({opSnippet:BY}),VY={kernelName:Pt,backendName:"webgl",kernelFunc:WY};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class UY{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,o,i,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const p="bilinear"===r?1:0,[d,f]=[o-1+".0",i-1+".0"],[m,g,y]=c>1?[""+(o-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,x,v]=h>1?[""+(i-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const GY=e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:o}=t,{cropSize:i,method:u,extrapolationValue:l}=r,c=new UY(s.shape,a.shape,i,u,l);return n.runWebGLProgram(c,[s,a,o],"float32")},jY={kernelName:Vt,backendName:"webgl",kernelFunc:GY};var HY;(function(e){e["Prod"]="*",e["Sum"]="+"})(HY||(HY={}));class qY{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,a=this.op===HY.Prod?"1.0":"0.0",o=n?a:`getX(${KY(s,"coords",this.op)})`,i=this.outputShape[this.outputShape.length-1];let u="",l="";n?(u=r?"end != "+(i-1):"end != 0",l=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${i}`:"end >= pow2",l=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${aH(s)} coords = getOutputCoords();\n        int end = ${XY(s,"coords",this.op)};\n        float val = ${o};\n        int pow2 = int(pow(2.0, index));\n        if (${u}) {\n          int idx = ${l};\n          ${XY(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${KY(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function KY(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function XY(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function JY(e,t,n,r,s,a){const o=t.shape.length,i=sd([r],o);let u=t;null!=i&&(u=hX({inputs:{x:t},backend:n,attrs:{perm:i}}));const l=od(1,o)[0];if(l!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const c=u.shape[l];let h=EK({inputs:{x:u},backend:n});for(let p=0;p<=Math.ceil(Math.log2(c))-1;p++){const t=new qY(e,u.shape,!1,a),r=[[p]],s=h;h=n.runWebGLProgram(t,[h],h.dtype,r),n.disposeIntermediateTensorInfo(s)}if(s){const t=new qY(e,u.shape,s,a),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=i){const e=ad(i),t=hX({inputs:{x:h},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),t}return h}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function YY(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r;return JY(HY.Prod,s,n,a,o,i)}const ZY={kernelName:Bt,backendName:"webgl",kernelFunc:YY};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function QY(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r;return JY(HY.Sum,s,n,a,o,i)}const eZ={kernelName:Wt,backendName:"webgl",kernelFunc:QY};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tZ(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o,binaryOutput:i}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=qH(e,t,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=KH(e,t,o,i);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}const nZ={kernelName:Ut,backendName:"webgl",kernelFunc:tZ};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class rZ{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sZ(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:o}=r,i=s.shape[0],u="NHWC"===o?s.shape[1]:s.shape[2],l="NHWC"===o?s.shape[2]:s.shape[3],c="NHWC"===o?s.shape[3]:s.shape[1],h=u*a,p=l*a,d=c/(a*a),f="NHWC"===o?[i,h,p,d]:[i,d,h,p],m=new rZ(f,a,o);return n.runWebGLProgram(m,[s],s.dtype)}const aZ={kernelName:Gt,backendName:"webgl",kernelFunc:sZ};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class oZ{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=fH(this.outputShape.length);const a=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${o}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class iZ{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=fH(this.outputShape.length);const a=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,h=c;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<c;g++)p+=`\n          vec4 xTexelC${2*g};\n          int xTexelC${2*g}Ready;\n          vec4 xTexelC${2*g+1};\n          int xTexelC${2*g+1}Ready;\n          vec4 xC${g};`;p+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let g=0;g<c;g++)p+=`\n          xTexelC${2*g} = vec4(0.0);\n          xTexelC${2*g}Ready = 0;\n          xTexelC${2*g+1} = vec4(0.0);\n          xTexelC${2*g+1}Ready = 0;\n          xC${g} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let g=0;g<(h+1)/2;g++){const e=2*g;if(p+=`\n          xC = xCCorner + ${e*u};\n          `,1===i){if(e<c&&(o%2===1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,p+=1===u&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<c)){const t=o%2===0?te(u):u;u%2===0&&o%2===1||u%2!==0&&o%2!==1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,p+=u>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${e+1} = vec4(previous.zw, xTexelC${e+1}.xy);\n                    } else {\n                     xC${e+1} = vec4(0.0, 0.0, xTexelC${e+1}.xy);\n                    }\n                    `:`\n                    xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                    `):p+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<c&&(o%2===1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<c&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<c&&(p+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<c&&(p+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<c&&(p+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let d="",f="";n&&(d=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${d}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uZ(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),oe(ph(o,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`));const h=eh(s.shape,a.shape,o,c,i,l,!0);let p;p=Je().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new iZ(h):new oZ(h);const d=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[s,a],"float32",d)}const lZ={kernelName:jt,backendName:"webgl",kernelFunc:uZ};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class cZ{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class hZ{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${i}; dm++) {\n              int d2 = d1 * ${i} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pZ(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:l,filterShape:c}=r,h=eh(s.shape,c,o,i,u,l,!0),p=new cZ(h);return n.runWebGLProgram(p,[s,a],"float32")}const dZ={kernelName:Ht,backendName:"webgl",kernelFunc:pZ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fZ(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:l,inputShape:c}=r,h=eh(c,a.shape,o,i,u,l,!0),p=new hZ(h);return n.runWebGLProgram(p,[s,a],"float32")}const mZ={kernelName:qt,backendName:"webgl",kernelFunc:fZ};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class gZ{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yZ(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=le(r.shape),o=ZK({inputs:{x:r},backend:n,attrs:{shape:[a]}}),i=new gZ(a),u=n.runWebGLProgram(i,[o],o.dtype),l=ZK({inputs:{x:u},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),l}const bZ={kernelName:Kt,backendName:"webgl",kernelFunc:yZ};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class xZ{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:o,filterWidth:i,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${o}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${i}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vZ(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:u}=r,l=Yc(s.shape,a.shape,o,i,"NHWC",u);let c;const h=new xZ(l);c=n.runWebGLProgram(h,[s,a],"float32");const p=ZK({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),p}const wZ={kernelName:Xt,backendName:"webgl",kernelFunc:vZ};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kZ(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:o,summedDims:i,idDims:u}=kv(s,a.length);Nv(o.length,u,a);const{path:l,steps:c}=Sv(i,u),h=c.length;let p=null,d=o.length;const f=[];for(let m=0;m<h;++m){for(const e of c[m]){const{permutationIndices:t,expandDims:r}=Iv(d,u[e]);let s;Tv(t)?s=a[e]:(s=hX({inputs:{x:a[e]},backend:n,attrs:{perm:t}}),f.push(s));const o=s.shape.slice();for(let e=0;e<r.length;++e)o.splice(r[e],0,1);he(s.shape,o)||(s=ZK({inputs:{x:s},backend:n,attrs:{shape:o}}),f.push(s)),null===p?p=s:(p=XK({inputs:{a:s,b:p},backend:n}),f.push(p))}m<h-1&&(l[m]>=0&&(p=lX({inputs:{x:p},backend:n,attrs:{axis:l[m]-(o.length-d),keepDims:!1}}),f.push(p)),d--)}for(const m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}const IZ={kernelName:Qt,backendName:"webgl",kernelFunc:kZ},NZ="return (x >= 0.0) ? x : (exp(x) - 1.0);",SZ="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",TZ=VK({opSnippet:NZ,packedOpSnippet:SZ}),CZ={kernelName:en,backendName:"webgl",kernelFunc:TZ},$Z="return (b >= 1.0) ? a : a * (b + 1.0);",EZ="\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",AZ=e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=Je().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new $K(EZ,r.shape,s.shape):new TK($Z,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)},RZ={kernelName:tn,backendName:"webgl",kernelFunc:AZ},_Z="\n  return vec4(equal(a, b));\n",OZ="return float(a == b);",FZ=UK({opSnippet:OZ,packedOpSnippet:_Z,dtype:"bool",cpuKernelImpl:ZH}),DZ={kernelName:rn,backendName:"webgl",kernelFunc:FZ},MZ=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${sv};\n  float a1 = ${av};\n  float a2 = ${ov};\n  float a3 = ${iv};\n  float a4 = ${uv};\n  float a5 = ${lv};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,LZ=VK({opSnippet:MZ}),zZ={kernelName:nn,backendName:"webgl",kernelFunc:LZ},PZ=WK+"\n  return exp(x);\n",BZ="\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",WZ=VK({opSnippet:PZ,packedOpSnippet:BZ,cpuKernelImpl:QH,dtype:"float32"}),VZ={kernelName:sn,backendName:"webgl",kernelFunc:WZ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function UZ(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice();let u=s;return s<0&&(oe(-(o+1)<=s,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),u=o+s+1),i.splice(u,0,1),ZK({inputs:{x:a},backend:r,attrs:{shape:i}})}const GZ={kernelName:an,backendName:"webgl",kernelFunc:UZ},jZ="return exp(x) - 1.0;",HZ=VK({opSnippet:jZ,packedOpSnippet:jZ,cpuKernelImpl:eq}),qZ={kernelName:on,backendName:"webgl",kernelFunc:HZ};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class KZ{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let o;if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);o="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${o}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function XZ(e,t,n){const r=n.texData.get(e.dataId),s=le(e.shape),a=e.shape[e.shape.length-1],o=s/a,i=ZK({inputs:{x:e},backend:n,attrs:{shape:[o,a]}}),u=i.shape,l=new KZ("real",u,t),c=new KZ("imag",u,t),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:u},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:u}],p=n.runWebGLProgram(l,h,"float32"),d=n.runWebGLProgram(c,h,"float32"),f=RK({inputs:{real:p,imag:d},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d);const m=ZK({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function JZ(e){const{inputs:t,backend:n}=e,{input:r}=t;return XZ(r,!1,n)}const YZ={kernelName:un,backendName:"webgl",kernelFunc:JZ};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ZZ{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function QZ(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||Re(s),"string"===a){const e=ke(a,le(r));return e.fill(s),t.makeTensorInfo(r,a,e)}{const e=new ZZ(r,s),n=[[s]];return t.runWebGLProgram(e,[],a,n)}}const eQ={kernelName:ln,backendName:"webgl",kernelFunc:QZ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class tQ{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const nQ={kernelName:cn,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new tQ(n.shape),a=r.runWebGLProgram(s,[n],n.dtype);return a}},rQ="return floor(x);",sQ=VK({opSnippet:rQ,packedOpSnippet:rQ,cpuKernelImpl:tq}),aQ={kernelName:hn,backendName:"webgl",kernelFunc:sQ},oQ="\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",iQ="\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",uQ=UK({opSnippet:oQ,packedOpSnippet:iQ,dtype:"int32"}),lQ={kernelName:pn,backendName:"webgl",kernelFunc:uQ};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class cQ{constructor(e){this.variableNames=["A"];const t=lj(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class hQ{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=lj(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const pQ={kernelName:ps,backendName:"webgl",kernelFunc:mQ};let dQ,fQ=Je().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function mQ(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,o="undefined"!==typeof HTMLVideoElement&&s instanceof HTMLVideoElement,i="undefined"!==typeof HTMLImageElement&&s instanceof HTMLImageElement,[u,l]=o?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[l,u],h=[l,u,a];if(i||o){const e=Je().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=dQ&&e===fQ||(fQ=e,dQ=document.createElement("canvas").getContext("2d",{willReadFrequently:fQ})),dQ.canvas.width=u,dQ.canvas.height=l,dQ.drawImage(s,0,0,u,l),s=dQ.canvas}const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=aG.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);const d=Je().getBool("WEBGL_PACK")?new hQ(h):new cQ(h),f=n.runWebGLProgram(d,[p],"int32");return n.disposeData(p.dataId),f}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gQ(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r,m=fh(c),g=eh(s.shape,a.shape,u,h,l,p,!1,m);let y;const b=[],x=null!=o,v=null!=i,w="leakyrelu"===d,k=()=>{const e=[s,a],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=ZK({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(x&&e.push(t(o,c)),v&&e.push(t(i,c)),w){const t=n.makeTensorInfo([],"float32",Xs(f,"float32"));e.push(t),b.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&Je().getBool("WEBGL_EXP_CONV")){const e=d?GK(d,!0):null,t=new gY(g,x,e,v,w),r=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],s=k();y=n.runWebGLProgram(t,s,"float32",r)}else if(Je().getBool("WEBGL_CONV_IM2COL"))y=vY({x:s,filter:a,convInfo:g,backend:n,bias:o,activation:d,preluActivationWeights:i,leakyreluAlpha:f});else{const e=d?GK(d,!1):null,t=new fY(g,x,e,v,w),r=k();y=n.runWebGLProgram(t,r,"float32")}else y=xY({x:s,filter:a,convInfo:g,backend:n,bias:o,activation:d,preluActivationWeights:i,leakyreluAlpha:f});const I=ZK({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}const yQ={kernelName:ms,backendName:"webgl",kernelFunc:gQ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bQ(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:p,leakyreluAlpha:d}=r,f=[];let m=c;null==m&&(m=[1,1]),oe(ph(u,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`));const g=eh(s.shape,a.shape,u,m,l,h,!0),y=Je().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=p?GK(p,y):null,x=[s,a],v=null!=o,w=null!=i,k="leakyrelu"===p;if(v&&x.push(o),w&&x.push(i),k){const e=n.makeTensorInfo([],"float32",Xs(d,"float32"));x.push(e),f.push(e)}let I;I=y?new iZ(g,v,b,w,k):new oZ(g,v,b,w,k);const N=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],S=n.runWebGLProgram(I,x,"float32",N);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}const xQ={kernelName:gs,backendName:"webgl",kernelFunc:bQ};class vQ{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const s=aH(n.length);let a="\n    int index;";for(let o=0;o<this.sliceDim;o++)a+=`\n          index = round(getIndices(coords[0], ${o}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[o]};\n          flattenIndex += index * ${this.strides[o]};`;this.userCode=`\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${a}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wQ(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,o=a[a.length-1],i=le(r.shape),[u,l,c,h]=Wl(r,s),p=ZK({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),d=ZK({inputs:{x:r},backend:n,attrs:{shape:[le(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),a=nq(e,t,r.dtype,l,o,c,h,r.shape,i);return n.makeTensorInfo(u,r.dtype,a.values)}const f=new vQ(o,h,[l,c],r.shape),m=n.runWebGLProgram(f,[d,p],d.dtype),g=ZK({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),g}const kQ={kernelName:mn,backendName:"webgl",kernelFunc:wQ};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class IQ{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=aH(this.rank),r=NQ(e,2);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function NQ(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<e.length;s++)2===s?r.push("index"):r.push(`${n[s]}`);return r.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function SQ(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:o,batchDims:i}=r,u=xe(o,s.shape)[0];if(Je().get("DEBUG")){const e=n.readSync(a.dataId),t=s.shape[u];for(let n=0;n<e.length;++n){const r=e[n];oe(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const l=Uv(s,a,u,i),c=le(a.shape),h=[],p=ZK({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=ZK({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});h.push(p),h.push(d);const f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.bufferSync(d),t=n.bufferSync(p),r=rq(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const m=new IQ(p.shape,f),g=n.runWebGLProgram(m,[p,d],p.dtype);h.push(g);const y=ZK({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const TQ={kernelName:fn,backendName:"webgl",kernelFunc:SQ},CQ="return float(a > b);",$Q="\n  return vec4(greaterThan(a, b));\n",EQ=UK({opSnippet:CQ,packedOpSnippet:$Q,cpuKernelImpl:sq,dtype:"bool"}),AQ={kernelName:gn,backendName:"webgl",kernelFunc:EQ},RQ="return float(a >= b);",_Q="\n  return vec4(greaterThanEqual(a, b));\n",OQ=UK({opSnippet:RQ,packedOpSnippet:_Q,dtype:"bool",cpuKernelImpl:aq}),FQ={kernelName:yn,backendName:"webgl",kernelFunc:OQ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function DQ(e){const{inputs:t,backend:n}=e,{input:r}=t;return XZ(r,!0,n)}const MQ={kernelName:xn,backendName:"webgl",kernelFunc:DQ},LQ="return float(!isnan(x) && !isinf(x));",zQ=VK({opSnippet:LQ,dtype:"bool"}),PQ={kernelName:wn,backendName:"webgl",kernelFunc:zQ},BQ="return float(isinf(x));",WQ=VK({opSnippet:BQ,dtype:"bool"}),VQ={kernelName:kn,backendName:"webgl",kernelFunc:WQ},UQ="return float(isnan(x));",GQ=VK({opSnippet:UQ,dtype:"bool"}),jQ={kernelName:In,backendName:"webgl",kernelFunc:GQ},HQ="return float(a < b);",qQ="\n  return vec4(lessThan(a, b));\n",KQ=UK({opSnippet:HQ,packedOpSnippet:qQ,cpuKernelImpl:oq,dtype:"bool"}),XQ={kernelName:Sn,backendName:"webgl",kernelFunc:KQ},JQ="return float(a <= b);",YQ="\n  return vec4(lessThanEqual(a, b));\n",ZQ=UK({opSnippet:JQ,packedOpSnippet:YQ,cpuKernelImpl:iq,dtype:"bool"}),QQ={kernelName:Tn,backendName:"webgl",kernelFunc:ZQ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function e0(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,o=uq(r,s,a);return t.makeTensorInfo([o.length],"float32",o)}const t0={kernelName:Cn,backendName:"webgl",kernelFunc:e0},n0=WK+"\n  return x < 0.0 ? 0./0. : log(x);\n",r0="\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",s0=VK({opSnippet:n0,packedOpSnippet:r0,cpuKernelImpl:lq}),a0={kernelName:$n,backendName:"webgl",kernelFunc:s0},o0=WK+"\n  return log(1.0 + x);\n",i0=VK({opSnippet:o0}),u0={kernelName:En,backendName:"webgl",kernelFunc:i0},l0="return float(a >= 1.0 && b >= 1.0);",c0="\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",h0=UK({opSnippet:l0,packedOpSnippet:c0,dtype:"bool"}),p0={kernelName:An,backendName:"webgl",kernelFunc:h0},d0="return float(!(x >= 1.0));",f0=VK({opSnippet:d0}),m0={kernelName:Rn,backendName:"webgl",kernelFunc:f0},g0="return float(a >= 1.0 || b >= 1.0);",y0="\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",b0=UK({opSnippet:g0,packedOpSnippet:y0,dtype:"bool"}),x0={kernelName:_n,backendName:"webgl",kernelFunc:b0};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class v0{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,o=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${o}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${i};\n        setOutput(val);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class w0{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,o=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${i};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const k0=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:o,alpha:i,beta:u}=r,l=Je().getBool("WEBGL_PACK_NORMALIZATION")?new w0(s.shape,a,o,i,u):new v0(s.shape,a,o,i,u);return n.runWebGLProgram(l,[s],s.dtype)},I0={kernelName:Mn,backendName:"webgl",kernelFunc:k0};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class N0{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const S0=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:o}=t,{depthRadius:i,bias:u,alpha:l,beta:c}=r,h=new N0(s.shape,i,u,l,c);return n.runWebGLProgram(h,[s,a,o],s.dtype)},T0={kernelName:Ln,backendName:"webgl",kernelFunc:S0};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function C0(e,t,n,r){const s=le(t),a=le(e.shape),o=a/s,i=ZK({inputs:{x:e},attrs:{shape:[o,s]},backend:r}),u=rX(i,e.dtype,"max",r),l=ZK({inputs:{x:u},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(u),l}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $0(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:o}=r,i=s.shape.length,u=xe(a,s.shape);let l=u;const c=sd(l,i),h=null!=c,p=n.shouldExecuteOnCPU([s]);let d=s;if(h){if(p){const e=n.texData.get(d.dataId),t=e.values,r=new Array(i);for(let n=0;n<r.length;n++)r[n]=s.shape[c[n]];const a=Lq(t,s.shape,s.dtype,c,r);d=n.makeTensorInfo(r,s.dtype);const o=n.texData.get(d.dataId);o.values=a}else d=iX(s,c,n);l=od(l.length,i)}rd("max",l,i);const[f,m]=td(d.shape,l);let g,y=f;if(o&&(y=nd(f,u)),p){const e=n.texData.get(d.dataId),t=e.values,r=cq(t,le(m),y,s.dtype);g=n.makeTensorInfo(y,s.dtype);const a=n.texData.get(g.dataId);a.values=r}else g=C0(d,m,y,n);return h&&n.disposeIntermediateTensorInfo(d),g}const E0={kernelName:zn,backendName:"webgl",kernelFunc:$0},A0=SK+"\n  return max(a, b);\n",R0="\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+CK+"\n  return result;\n",_0=UK({opSnippet:A0,packedOpSnippet:R0,cpuKernelImpl:hq}),O0={kernelName:Pn,backendName:"webgl",kernelFunc:_0};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function F0(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;ij(s,"maxPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=r,l=1;oe(ph(o,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`));const c=Zc(s.shape,a,o,l,i,u);if(1===c.filterWidth&&1===c.filterHeight&&he(c.inShape,c.outShape))return EK({inputs:{x:s},backend:n});const h=new uJ(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}const D0={kernelName:Bn,backendName:"webgl",kernelFunc:F0};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function M0(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dataFormat:u,dimRoundingMode:l}=r,c=[1,1,1],h=Qc(s.shape,a,o,c,i,l,u),p=new lJ(h,"max",!1);return n.runWebGLProgram(p,[s],s.dtype)}const L0={kernelName:Vn,backendName:"webgl",kernelFunc:M0};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class z0{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,o=s-1-e.padInfo.top,i=a-1-e.padInfo.left,u=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class P0{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=i-1-e.padInfo.front,h=u-1-e.padInfo.top,p=l-1-e.padInfo.left,d=i*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${i};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${o}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function B0(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a,{filterSize:i,strides:u,pad:l,dimRoundingMode:c}=r,h=[1,1,1],p=Qc(o.shape,i,u,h,l,c),d=new lJ(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new P0(p),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}const W0={kernelName:Un,backendName:"webgl",kernelFunc:B0};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function V0(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:o}=t,i=a;ij([a,o],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,p=Zc(i.shape,u,l,1,c,h),d=!0,f=new uJ(p,"max",d),m=n.runWebGLProgram(f,[i],i.dtype),g=new z0(p),y=n.runWebGLProgram(g,[s,m],i.dtype);return n.disposeIntermediateTensorInfo(m),y}const U0={kernelName:Wn,backendName:"webgl",kernelFunc:V0};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function G0(e,t,n,r){let s=new uJ(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");s=new uJ(n,"max",!0,!0,t);const o=r.runWebGLProgram(s,[e],"float32");return[a,o]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const j0={kernelName:Gn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:o,includeBatchInIndex:i}=t,u=n;oe(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];oe(ph(a,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`));const c=Zc(r.shape,s,a,l,o),[h,p]=G0(r,i,c,u);return[h,p]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function H0(e,t,n,r){const s=le(t),a=le(e.shape),o=a/s,i=ZK({inputs:{x:e},attrs:{shape:[o,s]},backend:r}),u=rX(i,"float32","mean",r),l=ZK({inputs:{x:u},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(u),l}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const q0={kernelName:jn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:a}=t,o=n,i=r.shape.length,u=xe(a,r.shape);let l=u;const c=sd(l,i),h=null!=c,p=o.shouldExecuteOnCPU([r]),d=[];let f=r;if(h){if(p){const e=o.texData.get(f.dataId),t=e.values,n=new Array(i);for(let o=0;o<n.length;o++)n[o]=r.shape[c[o]];const s=Lq(t,r.shape,r.dtype,c,n);f=o.makeTensorInfo(n,r.dtype);const a=o.texData.get(f.dataId);a.values=s}else f=iX(r,c,o);d.push(f),l=od(l.length,i)}rd("sum",l,i);const[m,g]=td(f.shape,l);let y=m;s&&(y=nd(m,u));const b=H0(f,g,y,o);for(const x of d)o.disposeIntermediateTensorInfo(x);return b}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function K0(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,u=xe(a,s.shape);let l=u;const c=sd(l,i);let h=s;null!=c&&(h=hX({inputs:{x:s},backend:n,attrs:{perm:c}}),l=od(l.length,s.shape.length)),rd("min",l,i);const[p,d]=td(h.shape,l),f=le(d),m=ZK({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),g=rX(m,m.dtype,"min",n);let y;if(o){const e=nd(p,u);y=ZK({inputs:{x:g},backend:n,attrs:{shape:e}})}else y=ZK({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),y}const X0={kernelName:Hn,backendName:"webgl",kernelFunc:K0},J0=SK+"\n  return min(a, b);\n",Y0="\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+CK+"\n  return result;\n",Z0=UK({opSnippet:J0,packedOpSnippet:Y0,cpuKernelImpl:pq}),Q0={kernelName:qn,backendName:"webgl",kernelFunc:Z0};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class e1{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=aH(r),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${i}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class t1{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=aH(r),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=Bq("rc",r),u=Bq("source",r),l=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${i[r-2]} += 1;\n        if(${i[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${i[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const n1=({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,o=Je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new t1(r.shape,s,a):new e1(r.shape,s,a),i=t.runWebGLProgram(o,[r],r.dtype);return i},r1={kernelName:Kn,backendName:"webgl",kernelFunc:n1},s1="if (b == 0.0) return NAN;\n  return mod(a, b);",a1="\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+CK+"\n  return result;\n",o1=UK({opSnippet:s1,packedOpSnippet:a1}),i1={kernelName:Xn,backendName:"webgl",kernelFunc:o1};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class u1{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const l1="\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",c1="\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",h1=UK({opSnippet:l1,packedOpSnippet:c1,checkOutOfBounds:!0}),p1={kernelName:Zt,backendName:"webgl",kernelFunc:h1},d1="return a - b;",f1=UK({opSnippet:d1,packedOpSnippet:d1,supportsComplex:!0,cpuKernelImpl:Fq}),m1={kernelName:Qr,backendName:"webgl",kernelFunc:f1};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function g1(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,o=xe([a],s.shape),i=$0({inputs:{x:s},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),u=nd(i.shape,o),l=ZK({inputs:{x:i},backend:n,attrs:{shape:u}}),c=f1({inputs:{a:s,b:l},backend:n}),h=WZ({inputs:{x:c},backend:n}),p=lX({inputs:{x:h},backend:n,attrs:{axis:o,keepDims:!1}}),d=ZK({inputs:{x:p},backend:n,attrs:{shape:u}}),f=h1({inputs:{a:h,b:d},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),f}const y1={kernelName:Wr,backendName:"webgl",kernelFunc:g1};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function b1(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:o,normalized:i}=r,u=i?s:g1({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new u1(l,c,a),p=[[o]],d=n.runWebGLProgram(h,[u],"int32",p);return i||n.disposeIntermediateTensorInfo(u),d}const x1={kernelName:Jn,backendName:"webgl",kernelFunc:b1},v1=Qq+"\n  return -x;\n",w1="\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n";function k1(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=fq(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=Je().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new pK(r.shape,w1):new Zq(r.shape,v1),n.runWebGLProgram(s,[r],r.dtype)}const I1={kernelName:Zn,backendName:"webgl",kernelFunc:k1},N1=yb;function S1(e){ys("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=r,l=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=N1(l,c,o,i,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}const T1={kernelName:er,backendName:"webgl",kernelFunc:S1},C1=bb;function $1(e){ys("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),{selectedIndices:p,validOutputs:d}=C1(c,h,o,i,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}const E1={kernelName:tr,backendName:"webgl",kernelFunc:$1},A1=xb;function R1(e){ys("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),p=o,d=i,f=u,m=l,{selectedIndices:g,selectedScores:y}=A1(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const _1={kernelName:nr,backendName:"webgl",kernelFunc:R1};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class O1{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const F1=e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:o,onValue:i,offValue:u}=r,l=le(s.shape),c=new O1(l,o,i,u),h=ZK({inputs:{x:s},backend:n,attrs:{shape:[l]}}),p=n.runWebGLProgram(c,[h],a);n.disposeIntermediateTensorInfo(h);const d=[...s.shape,o],f=ZK({inputs:{x:p},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(p),f},D1={kernelName:sr,backendName:"webgl",kernelFunc:F1};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function M1(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=VJ({inputs:{input:r},backend:n}),t=M1({inputs:{x:e},backend:n}),s=uY({inputs:{input:r},backend:n}),a=M1({inputs:{x:s},backend:n}),o=RK({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),o}return QZ({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const L1={kernelName:cs,backendName:"webgl",kernelFunc:M1};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function z1(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const e=VJ({inputs:{input:r},backend:n}),t=z1({inputs:{x:e},backend:n}),s=uY({inputs:{input:r},backend:n}),a=M1({inputs:{x:s},backend:n}),o=RK({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),o}return QZ({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n})}const P1={kernelName:rr,backendName:"webgl",kernelFunc:z1};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function B1(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return UZ({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,o=t[0].dtype;t.forEach((e=>{ie(a,e.shape,"All tensors passed to stack must have matching shapes"),oe(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],u=t.map((e=>{const t=UZ({inputs:{input:e},backend:n,attrs:{dim:s}});return i.push(t),t})),l=pY({inputs:u,backend:n,attrs:{axis:s}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const W1={kernelName:ar,backendName:"webgl",kernelFunc:B1};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class V1{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=aH(r),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${i}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class U1{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=aH(r),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=Bq("rc",r),u=Bq("source",r),l=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${i[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${i[r-2]} += 1;\n       if(${i[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${i[r-1]} += 1;\n         if(${l}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let f=0,m=1===r?2:4;f<m;f++)d+=`\n        ${h[f]}\n        if (${p}) {\n          result[${f}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${f}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;d+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const G1=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:o}=r;if(0===le(s.shape)){const e=a.map(((e,t)=>e[0]+s.shape[t]+e[1]));return QZ({backend:n,attrs:{shape:e,value:o,dtype:s.dtype}})}const i=Je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new U1(s.shape,a,o):new V1(s.shape,a,o),u=[[o]];return n.runWebGLProgram(i,[s],s.dtype,u)},j1={kernelName:or,backendName:"webgl",kernelFunc:G1},H1="\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",q1="\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+CK+"\n  return result;\n",K1=UK({opSnippet:H1,packedOpSnippet:q1}),X1={kernelName:ur,backendName:"webgl",kernelFunc:K1};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function J1(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,u=[],l=xe(a,s.shape);let c=l;const h=sd(c,i);let p,d=s;if(null!=h&&(d=hX({inputs:{x:s},backend:n,attrs:{perm:h}}),c=od(c.length,i),u.push(d)),rd("prod",c,i),n.shouldExecuteOnCPU([d])){const e=n.texData.get(d.dataId).values,{outVals:t,outShape:r,outDtype:s}=gq(d.shape,d.dtype,e,c);p=n.makeTensorInfo(r,s,t)}else{const[e,t]=td(d.shape,c),r=le(t),a=ZK({inputs:{x:d},backend:n,attrs:{shape:[-1,r]}}),o=Da(s.dtype),i=rX(a,o,"prod",n);p=ZK({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(a),u.push(i)}if(o){u.push(p);const e=nd(p.shape,l);p=ZK({inputs:{x:p},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const Y1={kernelName:cr,backendName:"webgl",kernelFunc:J1};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Z1(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:o}=t,{outputRaggedRank:i}=r,u=s.map((e=>n.readSync(e.dataId))),l=s.map((e=>e.shape)),c=n.readSync(a.dataId),h=n.readSync(o.dataId),[p,d,f]=yq(u,l,c,a.shape,a.dtype,h,o.shape,i),m=p.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,a.dtype,d);return m.concat([g])}const Q1={kernelName:hr,backendName:"webgl",kernelFunc:Z1};
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function e2(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,o=n.readSync(r.dataId),i=n.readSync(s.dataId),u=n.readSync(a.dataId),[l,c]=bq(o,r.shape,r.dtype,i,s.shape,u,a.shape),h=n.makeTensorInfo([l.length],"int32",l),p=n.makeTensorInfo([c.length],r.dtype,c);return[h,p]}const t2={kernelName:pr,backendName:"webgl",kernelFunc:e2};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function n2(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:u}=r,l=n.readSync(s.dataId),c=n.readSync(a.dataId),h=n.readSync(o.dataId),p=i.map((e=>n.readSync(e.dataId))),d=i.map((e=>e.shape)),[f,m]=xq(l,s.shape,c,a.shape,a.dtype,h,o.shape,p,d,u);return n.makeTensorInfo(f,a.dtype,m)}const r2={kernelName:dr,backendName:"webgl",kernelFunc:n2},s2=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:o}=n,i=vq(r,s,a,o);return t.makeTensorInfo([i.length],o,i)},a2={kernelName:fr,backendName:"webgl",kernelFunc:s2},o2="return 1.0 / x;",i2=VK({opSnippet:o2}),u2={kernelName:gr,backendName:"webgl",kernelFunc:i2},l2=Qq+"\n  return (x < 0.0) ? 0.0 : x;\n",c2="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",h2=VK({opSnippet:l2,packedOpSnippet:c2}),p2={kernelName:yr,backendName:"webgl",kernelFunc:h2},d2=Qq+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",f2="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",m2=VK({opSnippet:d2,packedOpSnippet:f2}),g2={kernelName:Ir,backendName:"webgl",kernelFunc:m2};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class y2{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,o,i,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class b2{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,o,i,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function x2(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r,[u,l]=i,c=Je().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new b2(s.shape,u,l,a,o):new y2(s.shape,u,l,a,o);return n.runWebGLProgram(c,[s],"float32")}const v2={kernelName:wr,backendName:"webgl",kernelFunc:x2};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class w2{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,o]=e,i=[n&&a>1?r-1:r,n&&o>1?s-1:s],u=[n&&a>1?a-1:a,n&&o>1?o-1:o],l=i[0]/u[0],c=i[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function k2(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r,i=new w2(a.shape,s.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}const I2={kernelName:kr,backendName:"webgl",kernelFunc:k2};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class N2{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,o,i,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class S2{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,o,i,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function T2(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r,[u,l]=i,c=Je().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new S2(s.shape,u,l,a,o):new N2(s.shape,u,l,a,o);return n.runWebGLProgram(c,[s],s.dtype)}const C2={kernelName:xr,backendName:"webgl",kernelFunc:T2};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class $2{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,o]=e,i=[n&&a>1?r-1:r,n&&o>1?s-1:s],u=[n&&a>1?a-1:a,n&&o>1?o-1:o],l=i[0]/u[0],c=i[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${i[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${i[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function E2(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r,i=new $2(a.shape,s.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}const A2={kernelName:vr,backendName:"webgl",kernelFunc:E2};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class R2{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`,s=e.map(((e,t)=>r(t))).join(","),a=aH(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class _2{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=Bq("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,o=aH(n);function i(e){return h(e)}function u(e){return e[n-1]="("+e[n-1]+" + 1)",h(e)}function l(e){return e[n-2]="("+e[n-2]+" + 1)",h(e)}function c(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",h(e)}function h(t){const n=e.map(((e,n)=>p(n,t))),r=n.join(","),s=n.slice(-2).join(",");return`getChannel(getX(${r}), vec2(${s}))`}function p(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${o} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${i(r.slice())};\n          if(${s}){\n            result.g = ${u(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${l(r.slice())};\n            if(${s}) {\n              result.a = ${c(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function O2(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,o=s.shape.length,i=xe(a,s.shape);if(0===o)return EK({inputs:{x:s},backend:n});const u=Je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _2(s.shape,i):new R2(s.shape,i);return n.runWebGLProgram(u,[s],s.dtype)}const F2={kernelName:Nr,backendName:"webgl",kernelFunc:O2};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class D2{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"===typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const M2={kernelName:ds,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:o}=t,i=n,u=new D2(r.shape,a),[l,c]=Jx(o,r.shape[1],r.shape[2]),h=[[l,c,Math.sin(s),Math.cos(s)]],p=i.runWebGLProgram(u,[r],r.dtype,h);return p}},L2="\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n",z2=VK({opSnippet:L2}),P2={kernelName:Sr,backendName:"webgl",kernelFunc:z2},B2="return inversesqrt(x);",W2=VK({opSnippet:B2,cpuKernelImpl:wq}),V2={kernelName:Tr,backendName:"webgl",kernelFunc:W2};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class U2{constructor(e,t,n,r,s,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const i=aH(s.length),u=aH(a.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=t>1?"strides[j]":"strides";this.userCode=`\n        ${i} strides = ${i}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function G2(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:o}=r,{sliceRank:i,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Gl(a,s,o),p=[h/l,l];if(0===h)return n.makeTensorInfo(o,s.dtype);const d=ZK({inputs:{x:s},backend:n,attrs:{shape:[u,i]}}),f=ZK({inputs:{x:a},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new U2(u,i,d.shape.length,f.shape.length,c,p),y=n.runWebGLProgram(g,[f,d,m],f.dtype),b=ZK({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}const j2={kernelName:Cr,backendName:"webgl",kernelFunc:G2};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class H2{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,o=2===Je().getNumber("WEBGL_VERSION")?s:a,i="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${o}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function q2(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:o}=r,i=new H2(s.shape[0],s.shape[1],a.shape[1],o),u=[[s.shape[1]]];return n.runWebGLProgram(i,[s,a],"int32",u)}const K2={kernelName:$r,backendName:"webgl",kernelFunc:q2};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class X2{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],o=[];for(let r=0;r<t.length;r++)o.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=o.join()}const a=aH(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function J2(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,o=new X2(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(o,[r,s,a],Fa(s.dtype,a.dtype))}const Y2={kernelName:Er,backendName:"webgl",kernelFunc:J2},Z2=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${nv};\n  float scale = ${rv};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,Q2=VK({opSnippet:Z2}),e3={kernelName:Ar,backendName:"webgl",kernelFunc:Q2},t3=WK+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",n3="\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",r3=VK({opSnippet:t3,packedOpSnippet:n3,cpuKernelImpl:Iq}),s3={kernelName:Dr,backendName:"webgl",kernelFunc:r3},a3="\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n",o3=VK({opSnippet:a3}),i3={kernelName:Fr,backendName:"webgl",kernelFunc:o3},u3=WK+"\n  return sin(x);\n",l3=VK({opSnippet:u3}),c3={kernelName:_r,backendName:"webgl",kernelFunc:l3},h3="\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n",p3=VK({opSnippet:h3}),d3={kernelName:Or,backendName:"webgl",kernelFunc:p3},f3="\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n",m3=VK({opSnippet:f3}),g3={kernelName:Mr,backendName:"webgl",kernelFunc:m3},y3=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:o}=r;oe(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const i=a.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...o);for(let y=1+a.length;y<s.shape.length;++y)u.push([0,0]);const l=[],c=G1({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),h=Yx(c.shape,a,i,!1),p=Zx(h.length,a.length,!1),d=Qx(c.shape,a,i,!1),f=ZK({inputs:{x:c},backend:n,attrs:{shape:h}}),m=hX({inputs:{x:f},backend:n,attrs:{perm:p}}),g=ZK({inputs:{x:m},backend:n,attrs:{shape:d}});return l.push(c),l.push(f),l.push(m),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),g},b3={kernelName:Pr,backendName:"webgl",kernelFunc:y3};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function x3(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:o}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const i=n.readSync(r.dataId),u=n.readSync(s.dataId),l=n.readSync(a.dataId),c=n.readSync(o.dataId)[0],[h,p,d,f,m]=Tq(i,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],s.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}const v3={kernelName:Vr,backendName:"webgl",kernelFunc:x3};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function w3(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const o=Array.from(n.readSync(s.dataId)),i=n.readSync(r.dataId),u=Array.from(n.readSync(a.dataId)),[l,c,h]=Cq(i,r.shape,r.dtype,o,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}const k3={kernelName:Ur,backendName:"webgl",kernelFunc:w3};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function I3(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const o=n.readSync(r.dataId),i=n.readSync(s.dataId),u=n.readSync(a.dataId),[l,c]=$q(o,r.shape,r.dtype,i,u,!0);return n.makeTensorInfo(c,r.dtype,l)}const N3={kernelName:Gr,backendName:"webgl",kernelFunc:I3};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function S3(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const o=n.readSync(r.dataId),i=n.readSync(s.dataId),u=n.readSync(a.dataId),[l,c]=$q(o,r.shape,r.dtype,i,u);return n.makeTensorInfo(c,r.dtype,l)}const T3={kernelName:jr,backendName:"webgl",kernelFunc:S3};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function C3(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:o}=t,{outputShape:i}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:p}=Gl(a,s,i),d=!1;if("string"===a.dtype){const e=n.bufferSync(s),t=n.bufferSync(a),r=ta(n.readSync(o.dataId)[0]),f=kq(e,t,i,p,c,l,u,h,r,d);return n.makeTensorInfo(i,f.dtype,f.values)}const f=new U2(l,u,s.shape.length,a.shape.length,h,[p,1],d),m=n.runWebGLProgram(f,[a,s,o],a.dtype),g=ZK({inputs:{x:m},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(m),g}const $3={kernelName:Hr,backendName:"webgl",kernelFunc:C3};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function E3(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:o}=r,i=xe(o,s.shape)[0],u=$v(s,a,i),l=s.shape.length,c=new Array(l).fill(0),h=s.shape.slice();return u.map((e=>{const t=[...h];t[i]=e;const r=RJ({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[i]+=e,r}))}const A3={kernelName:Br,backendName:"webgl",kernelFunc:E3},R3="return sqrt(x);",_3=VK({opSnippet:R3,packedOpSnippet:R3,cpuKernelImpl:Eq}),O3={kernelName:Lr,backendName:"webgl",kernelFunc:_3},F3="return x * x;",D3=VK({opSnippet:F3}),M3={kernelName:Kr,backendName:"webgl",kernelFunc:D3},L3="return (a - b) * (a - b);",z3=UK({opSnippet:L3,packedOpSnippet:L3}),P3={kernelName:qr,backendName:"webgl",kernelFunc:z3};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function B3({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=Qq+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new Zq(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}const W3={kernelName:hs,backendName:"webgl",kernelFunc:B3};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class V3{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=aH(n.length),a=aH(n.length);let o="";if(1===r)o="coords * strides + begin";else{let e=0;o=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${o}));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function U3(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:o,strides:i,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r,{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=uc(s.shape,a,o,i,u,l,c,h,p);let w;if(m)w=ZK({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){oe(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=Xl(b,x,v),t=RJ({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});w=ZK({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=n.shouldExecuteOnCPU([s]);if(e){const e=n.readSync(s.dataId),t=ki(s.shape,s.dtype,e),r=Aq(d,t,v,b);w=n.makeTensorInfo(f,s.dtype,r.values)}else{const e=new V3(b,v,d);w=n.runWebGLProgram(e,[s],s.dtype)}}const k=ZK({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),k}const G3={kernelName:Xr,backendName:"webgl",kernelFunc:U3};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function j3(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:o,rightPad:i,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,p=n.readSync(c.dataId),d=n.readSync(h.dataId),[f,m]=Rq(p,d,s,a,o,i,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}const H3={kernelName:Jr,backendName:"webgl",kernelFunc:j3};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function q3(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:o}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const i=n.readSync(a.dataId),u=n.readSync(o.dataId)[0],[l,c,h]=_q(i,u,s),p=c.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}const K3={kernelName:Yr,backendName:"webgl",kernelFunc:q3};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function X3(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(a.dataId),i=Oq(o,s);return n.makeTensorInfo(a.shape,"int32",i)}const J3={kernelName:Zr,backendName:"webgl",kernelFunc:X3},Y3="return tan(x);",Z3=VK({opSnippet:Y3}),Q3={kernelName:es,backendName:"webgl",kernelFunc:Z3},e4="\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n",t4=VK({opSnippet:e4}),n4={kernelName:ts,backendName:"webgl",kernelFunc:t4};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class r4{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;const r=aH(this.rank),s=s4(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function s4(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<e.length;s++)r.push(`imod(${n[s]}, ${e[s]})`);return r.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function a4(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>ta(e))):e,r=ki(s.shape,s.dtype,t),o=Dq(r,a);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new r4(s.shape,a),i=n.runWebGLProgram(o,[s],s.dtype);return i}const o4={kernelName:ns,backendName:"webgl",kernelFunc:a4};class i4{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class u4{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function l4(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function c4(e){let t=1;while(t<e)t*=2;return t}function h4(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:o}=r,i=Je().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=Je().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=s.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([s])||c<i||a>u){const e=n.readSync(s.dataId),[t,r]=Mq(e,l,s.dtype,a,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===a)return l[l.length-1]=0,[n.makeTensorInfo(l,s.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[s,QZ({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),p=null!==h&&h.isPacked,d=p?n.unpackTensor(s):s,f=le(l),m=f/c,g=ZK({inputs:{x:d},attrs:{shape:[m,c]},backend:n});p&&l4(n,d);const y=c4(a),b=c4(c);let x=null;const v=()=>null===x?[g,g]:[g,x],w=(e,t,r)=>{const s=v(),a=new i4(r),o=null===x?1:0,i=[[c],[o],[Number.NEGATIVE_INFINITY],[e],[t]],u=x;x=n.runWebGLProgram(a,s,"int32",i),l4(n,u)};for(let T=1;T<y;T*=2){const e=2*T;for(let t=T;t>=1;t/=2)w(e,t,[m,b])}for(let T=b;T>y;T/=2){const e=v(),t=new u4([m,T/2]),r=null===x?1:0,s=[[c],[r],[y]],a=x;x=n.runWebGLProgram(t,e,"int32",s),l4(n,a);const o=y/2,i=2*o;for(let n=o;n>=1;n/=2)w(i,n,x.shape)}let k=x;x=RJ({inputs:{x:x},backend:n,attrs:{begin:0,size:[m,a]}}),l4(n,k);let I=SQ({inputs:{x:g,indices:x},backend:n,attrs:{axis:1,batchDims:1}});l4(n,g);const N=l.slice(0,-1);N.push(a),k=x,x=ZK({inputs:{x:x},attrs:{shape:N},backend:n}),l4(n,k);const S=I;return I=ZK({inputs:{x:I},attrs:{shape:N},backend:n}),l4(n,S),[I,x]}const p4={kernelName:rs,backendName:"webgl",kernelFunc:h4};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class d4{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const o="nearest"===n?1:2;let i;switch(r){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1;break}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function f4(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:u,outputShape:l}=r,[c,h,p,d]=s.shape,[f,m]=null!=l?l:[h,p],g=[c,f,m,d],y=new d4(h,p,o,i,u,g);return n.runWebGLProgram(y,[s,a],"float32")}const m4={kernelName:ss,backendName:"webgl",kernelFunc:f4};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function g4(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;ij(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=r.readSync(a.dataId),{outputValues:i,outputShape:u,indices:l}=zq(o,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,i),r.makeTensorInfo([l.length],"int32",l)]}const y4={kernelName:os,backendName:"webgl",kernelFunc:g4};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function b4(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const o=s,i=o.shape.length,u=s.shape[a],l=new Array(i-1);let c=0;for(let m=0;m<i;m++)m!==a&&(l[c++]=o.shape[m]);const h=[],p=new Array(i).fill(0),d=o.shape.slice();d[a]=1;const f=new Array(u);for(let m=0;m<f.length;m++){p[a]=m;const e=RJ({inputs:{x:o},backend:n,attrs:{begin:p,size:d}}),t=ZK({inputs:{x:e},backend:n,attrs:{shape:l}});f[m]=t,h.push(e)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const x4={kernelName:is,backendName:"webgl",kernelFunc:b4};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class v4{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,o=a*Math.ceil(s/n);this.outputShape=[r,o];const i="0.0",u="sumValue",l=4*Math.floor(n/4),c=n%4,h="\n        sumValue += dot(values, segFilter);\n    ";let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let d="";s%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function w4(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:o}=r,i=s.shape.length,u=[];let l=0;const c=sd([l],i);let h=s;null!=c&&(h=hX({inputs:{x:s},backend:n,attrs:{perm:c}}),u.push(h),l=od(1,i)[0]);const p=Vv(h.shape,l,o),d=le([h.shape[l]]),f=ZK({inputs:{x:h},backend:n,attrs:{shape:[-1,d]}});u.push(f);const m=Da(s.dtype),g=(e,t,r,s,a)=>{const o=e.shape[0],i=e.shape[1],l=Wv(i,a),c={windowSize:l,inSize:i,batchSize:o,numSegments:a},h=new v4(c,t),p=n.compileAndRun(h,[e,r],s);if(u.push(p),p.shape[1]===a)return p;const d=s2({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),f=a4({inputs:{x:d},backend:n,attrs:{reps:[i/l]}});u.push(d),u.push(f);const m=g(p,t,f,s,a);return m},y=g(f,"unsortedSegmentSum",a,m,o),b=ZK({inputs:{x:y},backend:n,attrs:{shape:p}});let x=b;if(null!=c){u.push(b);const e=ad(c);x=hX({inputs:{x:x},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}const k4={kernelName:us,backendName:"webgl",kernelFunc:w4},I4=[gX,xX,kX,SX,$X,_X,FX,MX,UX,jX,KX,YX,eJ,sJ,iJ,hJ,dJ,yJ,xJ,wJ,SJ,FJ,MJ,zJ,qJ,JJ,eY,_K,sY,dY,kY,$Y,AY,_Y,FY,MY,PY,VY,jY,ZY,eZ,nZ,aZ,lZ,dZ,mZ,bZ,wZ,IZ,CZ,RZ,DZ,zZ,VZ,GZ,qZ,YZ,eQ,nQ,aQ,lQ,pQ,yQ,xQ,kQ,TQ,AQ,FQ,AK,MQ,lY,PQ,VQ,jQ,MK,XQ,QQ,t0,a0,u0,p0,m0,x0,I0,T0,E0,O0,D0,L0,W0,U0,j0,q0,X0,Q0,r1,i1,x1,JK,I1,T1,E1,_1,WJ,D1,P1,W1,j1,X1,BK,Y1,Q1,t2,r2,a2,UJ,p1,u2,p2,g2,QK,v2,I2,C2,A2,F2,M2,P2,V2,j2,K2,Y2,e3,s3,i3,c3,d3,_J,y1,g3,b3,v3,k3,N3,T3,$3,A3,O3,M3,P3,W3,G3,H3,K3,J3,m1,cX,Q3,n4,o4,p4,m4,pX,y4,x4,k4,L1];for(const C4 of I4)Ns(C4);
/** @license See the LICENSE file. */
const N4="4.2.0",S4={"tfjs-core":Sc,"tfjs-backend-cpu":DD,"tfjs-backend-webgl":NK,"tfjs-data":RD,"tfjs-layers":xC,"tfjs-converter":mF,tfjs:N4}},5278:function(e){e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(C){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e["__isLong__"])}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},a={};function o(e,t){var n,r,o;return t?(e>>>=0,(o=0<=e&&e<256)&&(r=a[e],r)?r:(n=u(e,(0|e)<0?-1:0,!0),o&&(a[e]=n),n)):(e|=0,(o=-128<=e&&e<128)&&(r=s[e],r)?r:(n=u(e,e<0?-1:0,!1),o&&(s[e]=n),n))}function i(e,t){if(isNaN(e))return t?x:b;if(t){if(e<0)return x;if(e>=m)return N}else{if(e<=-g)return S;if(e+1>=g)return I}return e<0?i(-e,t).neg():u(e%f|0,e/f|0,t)}function u(e,t,r){return new n(e,t,r)}n.fromInt=o,n.fromNumber=i,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return b;if("number"===typeof t?(n=t,t=!1):t=!!t,n=n||10,n<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var s=i(l(n,8)),a=b,o=0;o<e.length;o+=8){var u=Math.min(8,e.length-o),h=parseInt(e.substring(o,o+u),n);if(u<8){var p=i(l(n,u));a=a.mul(p).add(i(h))}else a=a.mul(s),a=a.add(i(h))}return a.unsigned=t,a}function h(e,t){return"number"===typeof e?i(e,t):"string"===typeof e?c(e,t):u(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var p=65536,d=1<<24,f=p*p,m=f*f,g=m/2,y=o(d),b=o(0);n.ZERO=b;var x=o(0,!0);n.UZERO=x;var v=o(1);n.ONE=v;var w=o(1,!0);n.UONE=w;var k=o(-1);n.NEG_ONE=k;var I=u(-1,2147483647,!1);n.MAX_VALUE=I;var N=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=N;var S=u(0,-2147483648,!1);n.MIN_VALUE=S;var T=n.prototype;T.toInt=function(){return this.unsigned?this.low>>>0:this.low},T.toNumber=function(){return this.unsigned?(this.high>>>0)*f+(this.low>>>0):this.high*f+(this.low>>>0)},T.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=i(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}var s=i(l(e,6),this.unsigned),a=this,o="";while(1){var u=a.div(s),c=a.sub(u.mul(s)).toInt()>>>0,h=c.toString(e);if(a=u,a.isZero())return h+o;while(h.length<6)h="0"+h;o=""+h+o}},T.getHighBits=function(){return this.high},T.getHighBitsUnsigned=function(){return this.high>>>0},T.getLowBits=function(){return this.low},T.getLowBitsUnsigned=function(){return this.low>>>0},T.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0;t--)if(0!=(e&1<<t))break;return 0!=this.high?t+33:t+1},T.isZero=function(){return 0===this.high&&0===this.low},T.eqz=T.isZero,T.isNegative=function(){return!this.unsigned&&this.high<0},T.isPositive=function(){return this.unsigned||this.high>=0},T.isOdd=function(){return 1===(1&this.low)},T.isEven=function(){return 0===(1&this.low)},T.equals=function(e){return r(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},T.eq=T.equals,T.notEquals=function(e){return!this.eq(e)},T.neq=T.notEquals,T.ne=T.notEquals,T.lessThan=function(e){return this.comp(e)<0},T.lt=T.lessThan,T.lessThanOrEqual=function(e){return this.comp(e)<=0},T.lte=T.lessThanOrEqual,T.le=T.lessThanOrEqual,T.greaterThan=function(e){return this.comp(e)>0},T.gt=T.greaterThan,T.greaterThanOrEqual=function(e){return this.comp(e)>=0},T.gte=T.greaterThanOrEqual,T.ge=T.greaterThanOrEqual,T.compare=function(e){if(r(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},T.comp=T.compare,T.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(v)},T.neg=T.negate,T.add=function(e){r(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,a=65535&this.low,o=e.high>>>16,i=65535&e.high,l=e.low>>>16,c=65535&e.low,p=0,d=0,f=0,m=0;return m+=a+c,f+=m>>>16,m&=65535,f+=s+l,d+=f>>>16,f&=65535,d+=n+i,p+=d>>>16,d&=65535,p+=t+o,p&=65535,u(f<<16|m,p<<16|d,this.unsigned)},T.subtract=function(e){return r(e)||(e=h(e)),this.add(e.neg())},T.sub=T.subtract,T.multiply=function(e){if(this.isZero())return b;if(r(e)||(e=h(e)),t){var n=t.mul(this.low,this.high,e.low,e.high);return u(n,t.get_high(),this.unsigned)}if(e.isZero())return b;if(this.eq(S))return e.isOdd()?S:b;if(e.eq(S))return this.isOdd()?S:b;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(y)&&e.lt(y))return i(this.toNumber()*e.toNumber(),this.unsigned);var s=this.high>>>16,a=65535&this.high,o=this.low>>>16,l=65535&this.low,c=e.high>>>16,p=65535&e.high,d=e.low>>>16,f=65535&e.low,m=0,g=0,x=0,v=0;return v+=l*f,x+=v>>>16,v&=65535,x+=o*f,g+=x>>>16,x&=65535,x+=l*d,g+=x>>>16,x&=65535,g+=a*f,m+=g>>>16,g&=65535,g+=o*d,m+=g>>>16,g&=65535,g+=l*p,m+=g>>>16,g&=65535,m+=s*f+a*d+o*p+l*c,m&=65535,u(x<<16|v,m<<16|g,this.unsigned)},T.mul=T.multiply,T.divide=function(e){if(r(e)||(e=h(e)),e.isZero())throw Error("division by zero");if(t){if(!this.unsigned&&-2147483648===this.high&&-1===e.low&&-1===e.high)return this;var n=(this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high);return u(n,t.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?x:b;var s,a,o;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return x;if(e.gt(this.shru(1)))return w;o=x}else{if(this.eq(S)){if(e.eq(v)||e.eq(k))return S;if(e.eq(S))return v;var c=this.shr(1);return s=c.div(e).shl(1),s.eq(b)?e.isNegative()?v:k:(a=this.sub(e.mul(s)),o=s.add(a.div(e)),o)}if(e.eq(S))return this.unsigned?x:b;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();o=b}a=this;while(a.gte(e)){s=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));var p=Math.ceil(Math.log(s)/Math.LN2),d=p<=48?1:l(2,p-48),f=i(s),m=f.mul(e);while(m.isNegative()||m.gt(a))s-=d,f=i(s,this.unsigned),m=f.mul(e);f.isZero()&&(f=v),o=o.add(f),a=a.sub(m)}return o},T.div=T.divide,T.modulo=function(e){if(r(e)||(e=h(e)),t){var n=(this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high);return u(n,t.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))},T.mod=T.modulo,T.rem=T.modulo,T.not=function(){return u(~this.low,~this.high,this.unsigned)},T.and=function(e){return r(e)||(e=h(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},T.or=function(e){return r(e)||(e=h(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},T.xor=function(e){return r(e)||(e=h(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},T.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},T.shl=T.shiftLeft,T.shiftRight=function(e){return r(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},T.shr=T.shiftRight,T.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),e&=63,0===e)return this;var t=this.high;if(e<32){var n=this.low;return u(n>>>e|t<<32-e,t>>>e,this.unsigned)}return u(32===e?t:t>>>e-32,0,this.unsigned)},T.shru=T.shiftRightUnsigned,T.shr_u=T.shiftRightUnsigned,T.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},T.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},T.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},T.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},T.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},2468:function(e,t,n){var r=n(660),s=n(4313),a=n(5079),o=n(2962),i=n(2408),u=n(7959),l=n(3896);l.alea=r,l.xor128=s,l.xorwow=a,l.xorshift7=o,l.xor4096=i,l.tychei=u,e.exports=l},660:function(e,t,n){var r;e=n.nmd(e),function(e,s,a){function o(e){var t=this,n=l();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new o(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}function l(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){e+=t.charCodeAt(n);var r=.02519603282416938*e;e=r>>>0,r-=e,r*=e,e=r>>>0,r-=e,e+=4294967296*r}return 2.3283064365386963e-10*(e>>>0)};return t}s&&s.exports?s.exports=u:n.amdD&&n.amdO?(r=function(){return u}.call(t,n,t,s),void 0===r||(s.exports=r)):this.alea=u}(0,e,n.amdD)},7959:function(e,t,n){var r;e=n.nmd(e),function(e,s,a){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?(r=function(){return u}.call(t,n,t,s),void 0===r||(s.exports=r)):this.tychei=u}(0,e,n.amdD)},4313:function(e,t,n){var r;e=n.nmd(e),function(e,s,a){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?(r=function(){return u}.call(t,n,t,s),void 0===r||(s.exports=r)):this.xor128=u}(0,e,n.amdD)},2408:function(e,t,n){var r;e=n.nmd(e),function(e,s,a){function o(e){var t=this;function n(e,t){var n,r,s,a,o,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),s=0,a=-32;a<u;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(o=o+1640531527|0,n=i[127&a]^=r+o,s=0==n?s+1:0);for(s>=128&&(i[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=i[s+34&127],n=i[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[s]=r^n;e.w=o,e.X=i,e.i=s}t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},n(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},s.int32=n.next,s.quick=s,r&&(r.X&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?(r=function(){return u}.call(t,n,t,s),void 0===r||(s.exports=r)):this.xor4096=u}(0,e,n.amdD)},2962:function(e,t,n){var r;e=n.nmd(e),n(6728),function(e,s,a){function o(e){var t=this;function n(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;while(r.length<8)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],e^=e>>>7,n=e^e<<24,e=r[s+1&7],n^=e^e>>>10,e=r[s+3&7],n^=e^e>>>3,e=r[s+4&7],n^=e^e<<7,e=r[s+7&7],e^=e<<13,n^=e^e<<9,r[s]=n,t.i=s+1&7,n},n(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},s.int32=n.next,s.quick=s,r&&(r.x&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?(r=function(){return u}.call(t,n,t,s),void 0===r||(s.exports=r)):this.xorshift7=u}(0,e,n.amdD)},5079:function(e,t,n){var r;e=n.nmd(e),function(e,s,a){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?(r=function(){return u}.call(t,n,t,s),void 0===r||(s.exports=r)):this.xorwow=u}(0,e,n.amdD)},3896:function(e,t,n){var r;n(6728),function(s,a,o){var i,u=256,l=6,c=52,h="random",p=o.pow(u,l),d=o.pow(2,c),f=2*d,m=u-1;function g(e,t,n){var r=[];t=1==t?{entropy:!0}:t||{};var s=v(x(t.entropy?[e,k(a)]:null==e?w():e,3),r),i=new y(r),c=function(){var e=i.g(l),t=p,n=0;while(e<d)e=(e+n)*u,t*=u,n=i.g(1);while(e>=f)e/=2,t/=2,n>>>=1;return(e+n)/t};return c.int32=function(){return 0|i.g(4)},c.quick=function(){return i.g(4)/4294967296},c.double=c,v(k(i.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&b(r,i),e.state=function(){return b(i,{})}),n?(o[h]=e,t):e})(c,s,"global"in t?t.global:this==o,t.state)}function y(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,o=r.S=[];n||(e=[n++]);while(s<u)o[s]=s++;for(s=0;s<u;s++)o[s]=o[a=m&a+e[s%n]+(t=o[s])],o[a]=t;(r.g=function(e){var t,n=0,s=r.i,a=r.j,o=r.S;while(e--)t=o[s=m&s+1],n=n*u+o[m&(o[s]=o[a=m&a+t])+(o[a]=t)];return r.i=s,r.j=a,n})(u)}function b(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function x(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(x(e[n],t-1))}catch(a){}return r.length?r:"string"==s?e:e+"\0"}function v(e,t){var n,r=e+"",s=0;while(s<r.length)t[m&s]=m&(n^=19*t[m&s])+r.charCodeAt(s++);return k(t)}function w(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(s.crypto||s.msCrypto).getRandomValues(e)),k(e)}catch(r){var t=s.navigator,n=t&&t.plugins;return[+new Date,s,n,s.screen,k(a)]}}function k(e){return String.fromCharCode.apply(0,e)}if(v(o.random(),a),e.exports){e.exports=g;try{i=n(3110)}catch(I){}}else r=function(){return g}.call(t,n,t,e),void 0===r||(e.exports=r)}("undefined"!==typeof self?self:this,[],Math)},4870:function(e,t,n){"use strict";n.d(t,{B:function(){return o},Bj:function(){return a},Fl:function(){return qe},IU:function(){return Re},Jd:function(){return S},PG:function(){return Ce},SU:function(){return Ve},Um:function(){return Ne},WL:function(){return Ge},X$:function(){return E},X3:function(){return Ae},XI:function(){return Pe},Xl:function(){return _e},dq:function(){return Le},iH:function(){return ze},j:function(){return C},lk:function(){return T},nZ:function(){return u},qj:function(){return Ie},qq:function(){return w},yT:function(){return Ee}});n(7658);var r=n(7139);let s;class a{constructor(e=!1){this.detached=e,this._active=!0,this.effects=[],this.cleanups=[],this.parent=s,!e&&s&&(this.index=(s.scopes||(s.scopes=[])).push(this)-1)}get active(){return this._active}run(e){if(this._active){const t=s;try{return s=this,e()}finally{s=t}}else 0}on(){s=this}off(){s=this.parent}stop(e){if(this._active){let t,n;for(t=0,n=this.effects.length;t<n;t++)this.effects[t].stop();for(t=0,n=this.cleanups.length;t<n;t++)this.cleanups[t]();if(this.scopes)for(t=0,n=this.scopes.length;t<n;t++)this.scopes[t].stop(!0);if(!this.detached&&this.parent&&!e){const e=this.parent.scopes.pop();e&&e!==this&&(this.parent.scopes[this.index]=e,e.index=this.index)}this.parent=void 0,this._active=!1}}}function o(e){return new a(e)}function i(e,t=s){t&&t.active&&t.effects.push(e)}function u(){return s}const l=e=>{const t=new Set(e);return t.w=0,t.n=0,t},c=e=>(e.w&g)>0,h=e=>(e.n&g)>0,p=({deps:e})=>{if(e.length)for(let t=0;t<e.length;t++)e[t].w|=g},d=e=>{const{deps:t}=e;if(t.length){let n=0;for(let r=0;r<t.length;r++){const s=t[r];c(s)&&!h(s)?s.delete(e):t[n++]=s,s.w&=~g,s.n&=~g}t.length=n}},f=new WeakMap;let m=0,g=1;const y=30;let b;const x=Symbol(""),v=Symbol("");class w{constructor(e,t=null,n){this.fn=e,this.scheduler=t,this.active=!0,this.deps=[],this.parent=void 0,i(this,n)}run(){if(!this.active)return this.fn();let e=b,t=I;while(e){if(e===this)return;e=e.parent}try{return this.parent=b,b=this,I=!0,g=1<<++m,m<=y?p(this):k(this),this.fn()}finally{m<=y&&d(this),g=1<<--m,b=this.parent,I=t,this.parent=void 0,this.deferStop&&this.stop()}}stop(){b===this?this.deferStop=!0:this.active&&(k(this),this.onStop&&this.onStop(),this.active=!1)}}function k(e){const{deps:t}=e;if(t.length){for(let n=0;n<t.length;n++)t[n].delete(e);t.length=0}}let I=!0;const N=[];function S(){N.push(I),I=!1}function T(){const e=N.pop();I=void 0===e||e}function C(e,t,n){if(I&&b){let t=f.get(e);t||f.set(e,t=new Map);let r=t.get(n);r||t.set(n,r=l());const s=void 0;$(r,s)}}function $(e,t){let n=!1;m<=y?h(e)||(e.n|=g,n=!c(e)):n=!e.has(b),n&&(e.add(b),b.deps.push(e))}function E(e,t,n,s,a,o){const i=f.get(e);if(!i)return;let u=[];if("clear"===t)u=[...i.values()];else if("length"===n&&(0,r.kJ)(e)){const e=Number(s);i.forEach(((t,n)=>{("length"===n||n>=e)&&u.push(t)}))}else switch(void 0!==n&&u.push(i.get(n)),t){case"add":(0,r.kJ)(e)?(0,r.S0)(n)&&u.push(i.get("length")):(u.push(i.get(x)),(0,r._N)(e)&&u.push(i.get(v)));break;case"delete":(0,r.kJ)(e)||(u.push(i.get(x)),(0,r._N)(e)&&u.push(i.get(v)));break;case"set":(0,r._N)(e)&&u.push(i.get(x));break}if(1===u.length)u[0]&&A(u[0]);else{const e=[];for(const t of u)t&&e.push(...t);A(l(e))}}function A(e,t){const n=(0,r.kJ)(e)?e:[...e];for(const r of n)r.computed&&R(r,t);for(const r of n)r.computed||R(r,t)}function R(e,t){(e!==b||e.allowRecurse)&&(e.scheduler?e.scheduler():e.run())}const _=(0,r.fY)("__proto__,__v_isRef,__isVue"),O=new Set(Object.getOwnPropertyNames(Symbol).filter((e=>"arguments"!==e&&"caller"!==e)).map((e=>Symbol[e])).filter(r.yk)),F=B(),D=B(!1,!0),M=B(!0),L=z();function z(){const e={};return["includes","indexOf","lastIndexOf"].forEach((t=>{e[t]=function(...e){const n=Re(this);for(let t=0,s=this.length;t<s;t++)C(n,"get",t+"");const r=n[t](...e);return-1===r||!1===r?n[t](...e.map(Re)):r}})),["push","pop","shift","unshift","splice"].forEach((t=>{e[t]=function(...e){S();const n=Re(this)[t].apply(this,e);return T(),n}})),e}function P(e){const t=Re(this);return C(t,"has",e),t.hasOwnProperty(e)}function B(e=!1,t=!1){return function(n,s,a){if("__v_isReactive"===s)return!e;if("__v_isReadonly"===s)return e;if("__v_isShallow"===s)return t;if("__v_raw"===s&&a===(e?t?ve:xe:t?be:ye).get(n))return n;const o=(0,r.kJ)(n);if(!e){if(o&&(0,r.RI)(L,s))return Reflect.get(L,s,a);if("hasOwnProperty"===s)return P}const i=Reflect.get(n,s,a);return((0,r.yk)(s)?O.has(s):_(s))?i:(e||C(n,"get",s),t?i:Le(i)?o&&(0,r.S0)(s)?i:i.value:(0,r.Kn)(i)?e?Se(i):Ie(i):i)}}const W=U(),V=U(!0);function U(e=!1){return function(t,n,s,a){let o=t[n];if($e(o)&&Le(o)&&!Le(s))return!1;if(!e&&(Ee(s)||$e(s)||(o=Re(o),s=Re(s)),!(0,r.kJ)(t)&&Le(o)&&!Le(s)))return o.value=s,!0;const i=(0,r.kJ)(t)&&(0,r.S0)(n)?Number(n)<t.length:(0,r.RI)(t,n),u=Reflect.set(t,n,s,a);return t===Re(a)&&(i?(0,r.aU)(s,o)&&E(t,"set",n,s,o):E(t,"add",n,s)),u}}function G(e,t){const n=(0,r.RI)(e,t),s=e[t],a=Reflect.deleteProperty(e,t);return a&&n&&E(e,"delete",t,void 0,s),a}function j(e,t){const n=Reflect.has(e,t);return(0,r.yk)(t)&&O.has(t)||C(e,"has",t),n}function H(e){return C(e,"iterate",(0,r.kJ)(e)?"length":x),Reflect.ownKeys(e)}const q={get:F,set:W,deleteProperty:G,has:j,ownKeys:H},K={get:M,set(e,t){return!0},deleteProperty(e,t){return!0}},X=(0,r.l7)({},q,{get:D,set:V}),J=e=>e,Y=e=>Reflect.getPrototypeOf(e);function Z(e,t,n=!1,r=!1){e=e["__v_raw"];const s=Re(e),a=Re(t);n||(t!==a&&C(s,"get",t),C(s,"get",a));const{has:o}=Y(s),i=r?J:n?Fe:Oe;return o.call(s,t)?i(e.get(t)):o.call(s,a)?i(e.get(a)):void(e!==s&&e.get(t))}function Q(e,t=!1){const n=this["__v_raw"],r=Re(n),s=Re(e);return t||(e!==s&&C(r,"has",e),C(r,"has",s)),e===s?n.has(e):n.has(e)||n.has(s)}function ee(e,t=!1){return e=e["__v_raw"],!t&&C(Re(e),"iterate",x),Reflect.get(e,"size",e)}function te(e){e=Re(e);const t=Re(this),n=Y(t),r=n.has.call(t,e);return r||(t.add(e),E(t,"add",e,e)),this}function ne(e,t){t=Re(t);const n=Re(this),{has:s,get:a}=Y(n);let o=s.call(n,e);o||(e=Re(e),o=s.call(n,e));const i=a.call(n,e);return n.set(e,t),o?(0,r.aU)(t,i)&&E(n,"set",e,t,i):E(n,"add",e,t),this}function re(e){const t=Re(this),{has:n,get:r}=Y(t);let s=n.call(t,e);s||(e=Re(e),s=n.call(t,e));const a=r?r.call(t,e):void 0,o=t.delete(e);return s&&E(t,"delete",e,void 0,a),o}function se(){const e=Re(this),t=0!==e.size,n=void 0,r=e.clear();return t&&E(e,"clear",void 0,void 0,n),r}function ae(e,t){return function(n,r){const s=this,a=s["__v_raw"],o=Re(a),i=t?J:e?Fe:Oe;return!e&&C(o,"iterate",x),a.forEach(((e,t)=>n.call(r,i(e),i(t),s)))}}function oe(e,t,n){return function(...s){const a=this["__v_raw"],o=Re(a),i=(0,r._N)(o),u="entries"===e||e===Symbol.iterator&&i,l="keys"===e&&i,c=a[e](...s),h=n?J:t?Fe:Oe;return!t&&C(o,"iterate",l?v:x),{next(){const{value:e,done:t}=c.next();return t?{value:e,done:t}:{value:u?[h(e[0]),h(e[1])]:h(e),done:t}},[Symbol.iterator](){return this}}}}function ie(e){return function(...t){return"delete"!==e&&this}}function ue(){const e={get(e){return Z(this,e)},get size(){return ee(this)},has:Q,add:te,set:ne,delete:re,clear:se,forEach:ae(!1,!1)},t={get(e){return Z(this,e,!1,!0)},get size(){return ee(this)},has:Q,add:te,set:ne,delete:re,clear:se,forEach:ae(!1,!0)},n={get(e){return Z(this,e,!0)},get size(){return ee(this,!0)},has(e){return Q.call(this,e,!0)},add:ie("add"),set:ie("set"),delete:ie("delete"),clear:ie("clear"),forEach:ae(!0,!1)},r={get(e){return Z(this,e,!0,!0)},get size(){return ee(this,!0)},has(e){return Q.call(this,e,!0)},add:ie("add"),set:ie("set"),delete:ie("delete"),clear:ie("clear"),forEach:ae(!0,!0)},s=["keys","values","entries",Symbol.iterator];return s.forEach((s=>{e[s]=oe(s,!1,!1),n[s]=oe(s,!0,!1),t[s]=oe(s,!1,!0),r[s]=oe(s,!0,!0)})),[e,n,t,r]}const[le,ce,he,pe]=ue();function de(e,t){const n=t?e?pe:he:e?ce:le;return(t,s,a)=>"__v_isReactive"===s?!e:"__v_isReadonly"===s?e:"__v_raw"===s?t:Reflect.get((0,r.RI)(n,s)&&s in t?n:t,s,a)}const fe={get:de(!1,!1)},me={get:de(!1,!0)},ge={get:de(!0,!1)};const ye=new WeakMap,be=new WeakMap,xe=new WeakMap,ve=new WeakMap;function we(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function ke(e){return e["__v_skip"]||!Object.isExtensible(e)?0:we((0,r.W7)(e))}function Ie(e){return $e(e)?e:Te(e,!1,q,fe,ye)}function Ne(e){return Te(e,!1,X,me,be)}function Se(e){return Te(e,!0,K,ge,xe)}function Te(e,t,n,s,a){if(!(0,r.Kn)(e))return e;if(e["__v_raw"]&&(!t||!e["__v_isReactive"]))return e;const o=a.get(e);if(o)return o;const i=ke(e);if(0===i)return e;const u=new Proxy(e,2===i?s:n);return a.set(e,u),u}function Ce(e){return $e(e)?Ce(e["__v_raw"]):!(!e||!e["__v_isReactive"])}function $e(e){return!(!e||!e["__v_isReadonly"])}function Ee(e){return!(!e||!e["__v_isShallow"])}function Ae(e){return Ce(e)||$e(e)}function Re(e){const t=e&&e["__v_raw"];return t?Re(t):e}function _e(e){return(0,r.Nj)(e,"__v_skip",!0),e}const Oe=e=>(0,r.Kn)(e)?Ie(e):e,Fe=e=>(0,r.Kn)(e)?Se(e):e;function De(e){I&&b&&(e=Re(e),$(e.dep||(e.dep=l())))}function Me(e,t){e=Re(e);const n=e.dep;n&&A(n)}function Le(e){return!(!e||!0!==e.__v_isRef)}function ze(e){return Be(e,!1)}function Pe(e){return Be(e,!0)}function Be(e,t){return Le(e)?e:new We(e,t)}class We{constructor(e,t){this.__v_isShallow=t,this.dep=void 0,this.__v_isRef=!0,this._rawValue=t?e:Re(e),this._value=t?e:Oe(e)}get value(){return De(this),this._value}set value(e){const t=this.__v_isShallow||Ee(e)||$e(e);e=t?e:Re(e),(0,r.aU)(e,this._rawValue)&&(this._rawValue=e,this._value=t?e:Oe(e),Me(this,e))}}function Ve(e){return Le(e)?e.value:e}const Ue={get:(e,t,n)=>Ve(Reflect.get(e,t,n)),set:(e,t,n,r)=>{const s=e[t];return Le(s)&&!Le(n)?(s.value=n,!0):Reflect.set(e,t,n,r)}};function Ge(e){return Ce(e)?e:new Proxy(e,Ue)}var je;class He{constructor(e,t,n,r){this._setter=t,this.dep=void 0,this.__v_isRef=!0,this[je]=!1,this._dirty=!0,this.effect=new w(e,(()=>{this._dirty||(this._dirty=!0,Me(this))})),this.effect.computed=this,this.effect.active=this._cacheable=!r,this["__v_isReadonly"]=n}get value(){const e=Re(this);return De(e),!e._dirty&&e._cacheable||(e._dirty=!1,e._value=e.effect.run()),e._value}set value(e){this._setter(e)}}function qe(e,t,n=!1){let s,a;const o=(0,r.mf)(e);o?(s=e,a=r.dG):(s=e.get,a=e.set);const i=new He(s,a,o||!a,n);return i}je="__v_isReadonly"},3396:function(e,t,n){"use strict";n.d(t,{$d:function(){return o},Cn:function(){return M},FN:function(){return mn},Fl:function(){return Rn},HY:function(){return Ft},JJ:function(){return H},LL:function(){return Pe},Ob:function(){return fe},P$:function(){return re},Q6:function(){return le},U2:function(){return ae},Uk:function(){return rn},Us:function(){return $t},Wm:function(){return Qt},Y3:function(){return b},Y8:function(){return ee},YP:function(){return X},_:function(){return Zt},aZ:function(){return ce},dD:function(){return D},f3:function(){return q},h:function(){return _n},iD:function(){return jt},ic:function(){return Ce},j4:function(){return Ht},nK:function(){return ue},uE:function(){return sn},up:function(){return Le},w5:function(){return L},wg:function(){return Bt},wy:function(){return Fe}});n(7658),n(541);var r=n(4870),s=n(7139);function a(e,t,n,r){let s;try{s=r?e(...r):e()}catch(a){i(a,t,n)}return s}function o(e,t,n,r){if((0,s.mf)(e)){const o=a(e,t,n,r);return o&&(0,s.tI)(o)&&o.catch((e=>{i(e,t,n)})),o}const u=[];for(let s=0;s<e.length;s++)u.push(o(e[s],t,n,r));return u}function i(e,t,n,r=!0){const s=t?t.vnode:null;if(t){let r=t.parent;const s=t.proxy,o=n;while(r){const t=r.ec;if(t)for(let n=0;n<t.length;n++)if(!1===t[n](e,s,o))return;r=r.parent}const i=t.appContext.config.errorHandler;if(i)return void a(i,null,10,[e,s,o])}u(e,n,s,r)}function u(e,t,n,r=!0){console.error(e)}let l=!1,c=!1;const h=[];let p=0;const d=[];let f=null,m=0;const g=Promise.resolve();let y=null;function b(e){const t=y||g;return e?t.then(this?e.bind(this):e):t}function x(e){let t=p+1,n=h.length;while(t<n){const r=t+n>>>1,s=T(h[r]);s<e?t=r+1:n=r}return t}function v(e){h.length&&h.includes(e,l&&e.allowRecurse?p+1:p)||(null==e.id?h.push(e):h.splice(x(e.id),0,e),w())}function w(){l||c||(c=!0,y=g.then($))}function k(e){const t=h.indexOf(e);t>p&&h.splice(t,1)}function I(e){(0,s.kJ)(e)?d.push(...e):f&&f.includes(e,e.allowRecurse?m+1:m)||d.push(e),w()}function N(e,t=(l?p+1:0)){for(0;t<h.length;t++){const e=h[t];e&&e.pre&&(h.splice(t,1),t--,e())}}function S(e){if(d.length){const e=[...new Set(d)];if(d.length=0,f)return void f.push(...e);for(f=e,f.sort(((e,t)=>T(e)-T(t))),m=0;m<f.length;m++)f[m]();f=null,m=0}}const T=e=>null==e.id?1/0:e.id,C=(e,t)=>{const n=T(e)-T(t);if(0===n){if(e.pre&&!t.pre)return-1;if(t.pre&&!e.pre)return 1}return n};function $(e){c=!1,l=!0,h.sort(C);s.dG;try{for(p=0;p<h.length;p++){const e=h[p];e&&!1!==e.active&&a(e,null,14)}}finally{p=0,h.length=0,S(e),l=!1,y=null,(h.length||d.length)&&$(e)}}new Set;new Map;function E(e,t,...n){if(e.isUnmounted)return;const r=e.vnode.props||s.kT;let a=n;const i=t.startsWith("update:"),u=i&&t.slice(7);if(u&&u in r){const e=`${"modelValue"===u?"model":u}Modifiers`,{number:t,trim:o}=r[e]||s.kT;o&&(a=n.map((e=>(0,s.HD)(e)?e.trim():e))),t&&(a=n.map(s.h5))}let l;let c=r[l=(0,s.hR)(t)]||r[l=(0,s.hR)((0,s._A)(t))];!c&&i&&(c=r[l=(0,s.hR)((0,s.rs)(t))]),c&&o(c,e,6,a);const h=r[l+"Once"];if(h){if(e.emitted){if(e.emitted[l])return}else e.emitted={};e.emitted[l]=!0,o(h,e,6,a)}}function A(e,t,n=!1){const r=t.emitsCache,a=r.get(e);if(void 0!==a)return a;const o=e.emits;let i={},u=!1;if(!(0,s.mf)(e)){const r=e=>{const n=A(e,t,!0);n&&(u=!0,(0,s.l7)(i,n))};!n&&t.mixins.length&&t.mixins.forEach(r),e.extends&&r(e.extends),e.mixins&&e.mixins.forEach(r)}return o||u?((0,s.kJ)(o)?o.forEach((e=>i[e]=null)):(0,s.l7)(i,o),(0,s.Kn)(e)&&r.set(e,i),i):((0,s.Kn)(e)&&r.set(e,null),null)}function R(e,t){return!(!e||!(0,s.F7)(t))&&(t=t.slice(2).replace(/Once$/,""),(0,s.RI)(e,t[0].toLowerCase()+t.slice(1))||(0,s.RI)(e,(0,s.rs)(t))||(0,s.RI)(e,t))}let _=null,O=null;function F(e){const t=_;return _=e,O=e&&e.type.__scopeId||null,t}function D(e){O=e}function M(){O=null}function L(e,t=_,n){if(!t)return e;if(e._n)return e;const r=(...n)=>{r._d&&Ut(-1);const s=F(t);let a;try{a=e(...n)}finally{F(s),r._d&&Ut(1)}return a};return r._n=!0,r._c=!0,r._d=!0,r}function z(e){const{type:t,vnode:n,proxy:r,withProxy:a,props:o,propsOptions:[u],slots:l,attrs:c,emit:h,render:p,renderCache:d,data:f,setupState:m,ctx:g,inheritAttrs:y}=e;let b,x;const v=F(e);try{if(4&n.shapeFlag){const e=a||r;b=an(p.call(e,e,d,o,m,f,g)),x=c}else{const e=t;0,b=an(e.length>1?e(o,{attrs:c,slots:l,emit:h}):e(o,null)),x=t.props?c:P(c)}}catch(k){zt.length=0,i(k,e,1),b=Qt(Mt)}let w=b;if(x&&!1!==y){const e=Object.keys(x),{shapeFlag:t}=w;e.length&&7&t&&(u&&e.some(s.tR)&&(x=B(x,u)),w=nn(w,x))}return n.dirs&&(w=nn(w),w.dirs=w.dirs?w.dirs.concat(n.dirs):n.dirs),n.transition&&(w.transition=n.transition),b=w,F(v),b}const P=e=>{let t;for(const n in e)("class"===n||"style"===n||(0,s.F7)(n))&&((t||(t={}))[n]=e[n]);return t},B=(e,t)=>{const n={};for(const r in e)(0,s.tR)(r)&&r.slice(9)in t||(n[r]=e[r]);return n};function W(e,t,n){const{props:r,children:s,component:a}=e,{props:o,children:i,patchFlag:u}=t,l=a.emitsOptions;if(t.dirs||t.transition)return!0;if(!(n&&u>=0))return!(!s&&!i||i&&i.$stable)||r!==o&&(r?!o||V(r,o,l):!!o);if(1024&u)return!0;if(16&u)return r?V(r,o,l):!!o;if(8&u){const e=t.dynamicProps;for(let t=0;t<e.length;t++){const n=e[t];if(o[n]!==r[n]&&!R(l,n))return!0}}return!1}function V(e,t,n){const r=Object.keys(t);if(r.length!==Object.keys(e).length)return!0;for(let s=0;s<r.length;s++){const a=r[s];if(t[a]!==e[a]&&!R(n,a))return!0}return!1}function U({vnode:e,parent:t},n){while(t&&t.subTree===e)(e=t.vnode).el=n,t=t.parent}const G=e=>e.__isSuspense;function j(e,t){t&&t.pendingBranch?(0,s.kJ)(e)?t.effects.push(...e):t.effects.push(e):I(e)}function H(e,t){if(fn){let n=fn.provides;const r=fn.parent&&fn.parent.provides;r===n&&(n=fn.provides=Object.create(r)),n[e]=t}else 0}function q(e,t,n=!1){const r=fn||_;if(r){const a=null==r.parent?r.vnode.appContext&&r.vnode.appContext.provides:r.parent.provides;if(a&&e in a)return a[e];if(arguments.length>1)return n&&(0,s.mf)(t)?t.call(r.proxy):t}else 0}const K={};function X(e,t,n){return J(e,t,n)}function J(e,t,{immediate:n,deep:i,flush:u,onTrack:l,onTrigger:c}=s.kT){const h=(0,r.nZ)()===(null===fn||void 0===fn?void 0:fn.scope)?fn:null;let p,d,f=!1,m=!1;if((0,r.dq)(e)?(p=()=>e.value,f=(0,r.yT)(e)):(0,r.PG)(e)?(p=()=>e,i=!0):(0,s.kJ)(e)?(m=!0,f=e.some((e=>(0,r.PG)(e)||(0,r.yT)(e))),p=()=>e.map((e=>(0,r.dq)(e)?e.value:(0,r.PG)(e)?Q(e):(0,s.mf)(e)?a(e,h,2):void 0))):p=(0,s.mf)(e)?t?()=>a(e,h,2):()=>{if(!h||!h.isUnmounted)return d&&d(),o(e,h,3,[y])}:s.dG,t&&i){const e=p;p=()=>Q(e())}let g,y=e=>{d=k.onStop=()=>{a(e,h,4)}};if(wn){if(y=s.dG,t?n&&o(t,h,3,[p(),m?[]:void 0,y]):p(),"sync"!==u)return s.dG;{const e=Fn();g=e.__watcherHandles||(e.__watcherHandles=[])}}let b=m?new Array(e.length).fill(K):K;const x=()=>{if(k.active)if(t){const e=k.run();(i||f||(m?e.some(((e,t)=>(0,s.aU)(e,b[t]))):(0,s.aU)(e,b)))&&(d&&d(),o(t,h,3,[e,b===K?void 0:m&&b[0]===K?[]:b,y]),b=e)}else k.run()};let w;x.allowRecurse=!!t,"sync"===u?w=x:"post"===u?w=()=>Ct(x,h&&h.suspense):(x.pre=!0,h&&(x.id=h.uid),w=()=>v(x));const k=new r.qq(p,w);t?n?x():b=k.run():"post"===u?Ct(k.run.bind(k),h&&h.suspense):k.run();const I=()=>{k.stop(),h&&h.scope&&(0,s.Od)(h.scope.effects,k)};return g&&g.push(I),I}function Y(e,t,n){const r=this.proxy,a=(0,s.HD)(e)?e.includes(".")?Z(r,e):()=>r[e]:e.bind(r,r);let o;(0,s.mf)(t)?o=t:(o=t.handler,n=t);const i=fn;gn(this);const u=J(a,o.bind(r),n);return i?gn(i):yn(),u}function Z(e,t){const n=t.split(".");return()=>{let t=e;for(let e=0;e<n.length&&t;e++)t=t[n[e]];return t}}function Q(e,t){if(!(0,s.Kn)(e)||e["__v_skip"])return e;if(t=t||new Set,t.has(e))return e;if(t.add(e),(0,r.dq)(e))Q(e.value,t);else if((0,s.kJ)(e))for(let n=0;n<e.length;n++)Q(e[n],t);else if((0,s.DM)(e)||(0,s._N)(e))e.forEach((e=>{Q(e,t)}));else if((0,s.PO)(e))for(const n in e)Q(e[n],t);return e}function ee(){const e={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return Se((()=>{e.isMounted=!0})),$e((()=>{e.isUnmounting=!0})),e}const te=[Function,Array],ne={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:te,onEnter:te,onAfterEnter:te,onEnterCancelled:te,onBeforeLeave:te,onLeave:te,onAfterLeave:te,onLeaveCancelled:te,onBeforeAppear:te,onAppear:te,onAfterAppear:te,onAppearCancelled:te},setup(e,{slots:t}){const n=mn(),s=ee();let a;return()=>{const o=t.default&&le(t.default(),!0);if(!o||!o.length)return;let i=o[0];if(o.length>1){let e=!1;for(const t of o)if(t.type!==Mt){0,i=t,e=!0;break}}const u=(0,r.IU)(e),{mode:l}=u;if(s.isLeaving)return oe(i);const c=ie(i);if(!c)return oe(i);const h=ae(c,u,s,n);ue(c,h);const p=n.subTree,d=p&&ie(p);let f=!1;const{getTransitionKey:m}=c.type;if(m){const e=m();void 0===a?a=e:e!==a&&(a=e,f=!0)}if(d&&d.type!==Mt&&(!Kt(c,d)||f)){const e=ae(d,u,s,n);if(ue(d,e),"out-in"===l)return s.isLeaving=!0,e.afterLeave=()=>{s.isLeaving=!1,!1!==n.update.active&&n.update()},oe(i);"in-out"===l&&c.type!==Mt&&(e.delayLeave=(e,t,n)=>{const r=se(s,d);r[String(d.key)]=d,e._leaveCb=()=>{t(),e._leaveCb=void 0,delete h.delayedLeave},h.delayedLeave=n})}return i}}},re=ne;function se(e,t){const{leavingVNodes:n}=e;let r=n.get(t.type);return r||(r=Object.create(null),n.set(t.type,r)),r}function ae(e,t,n,r){const{appear:a,mode:i,persisted:u=!1,onBeforeEnter:l,onEnter:c,onAfterEnter:h,onEnterCancelled:p,onBeforeLeave:d,onLeave:f,onAfterLeave:m,onLeaveCancelled:g,onBeforeAppear:y,onAppear:b,onAfterAppear:x,onAppearCancelled:v}=t,w=String(e.key),k=se(n,e),I=(e,t)=>{e&&o(e,r,9,t)},N=(e,t)=>{const n=t[1];I(e,t),(0,s.kJ)(e)?e.every((e=>e.length<=1))&&n():e.length<=1&&n()},S={mode:i,persisted:u,beforeEnter(t){let r=l;if(!n.isMounted){if(!a)return;r=y||l}t._leaveCb&&t._leaveCb(!0);const s=k[w];s&&Kt(e,s)&&s.el._leaveCb&&s.el._leaveCb(),I(r,[t])},enter(e){let t=c,r=h,s=p;if(!n.isMounted){if(!a)return;t=b||c,r=x||h,s=v||p}let o=!1;const i=e._enterCb=t=>{o||(o=!0,I(t?s:r,[e]),S.delayedLeave&&S.delayedLeave(),e._enterCb=void 0)};t?N(t,[e,i]):i()},leave(t,r){const s=String(e.key);if(t._enterCb&&t._enterCb(!0),n.isUnmounting)return r();I(d,[t]);let a=!1;const o=t._leaveCb=n=>{a||(a=!0,r(),I(n?g:m,[t]),t._leaveCb=void 0,k[s]===e&&delete k[s])};k[s]=e,f?N(f,[t,o]):o()},clone(e){return ae(e,t,n,r)}};return S}function oe(e){if(pe(e))return e=nn(e),e.children=null,e}function ie(e){return pe(e)?e.children?e.children[0]:void 0:e}function ue(e,t){6&e.shapeFlag&&e.component?ue(e.component.subTree,t):128&e.shapeFlag?(e.ssContent.transition=t.clone(e.ssContent),e.ssFallback.transition=t.clone(e.ssFallback)):e.transition=t}function le(e,t=!1,n){let r=[],s=0;for(let a=0;a<e.length;a++){let o=e[a];const i=null==n?o.key:String(n)+String(null!=o.key?o.key:a);o.type===Ft?(128&o.patchFlag&&s++,r=r.concat(le(o.children,t,i))):(t||o.type!==Mt)&&r.push(null!=i?nn(o,{key:i}):o)}if(s>1)for(let a=0;a<r.length;a++)r[a].patchFlag=-2;return r}function ce(e){return(0,s.mf)(e)?{setup:e,name:e.name}:e}const he=e=>!!e.type.__asyncLoader;const pe=e=>e.type.__isKeepAlive,de={name:"KeepAlive",__isKeepAlive:!0,props:{include:[String,RegExp,Array],exclude:[String,RegExp,Array],max:[String,Number]},setup(e,{slots:t}){const n=mn(),r=n.ctx;if(!r.renderer)return()=>{const e=t.default&&t.default();return e&&1===e.length?e[0]:e};const a=new Map,o=new Set;let i=null;const u=n.suspense,{renderer:{p:l,m:c,um:h,o:{createElement:p}}}=r,d=p("div");function f(e){ve(e),h(e,n,u,!0)}function m(e){a.forEach(((t,n)=>{const r=En(t.type);!r||e&&e(r)||g(n)}))}function g(e){const t=a.get(e);i&&Kt(t,i)?i&&ve(i):f(t),a.delete(e),o.delete(e)}r.activate=(e,t,n,r,a)=>{const o=e.component;c(e,t,n,0,u),l(o.vnode,e,t,n,o,u,r,e.slotScopeIds,a),Ct((()=>{o.isDeactivated=!1,o.a&&(0,s.ir)(o.a);const t=e.props&&e.props.onVnodeMounted;t&&cn(t,o.parent,e)}),u)},r.deactivate=e=>{const t=e.component;c(e,d,null,1,u),Ct((()=>{t.da&&(0,s.ir)(t.da);const n=e.props&&e.props.onVnodeUnmounted;n&&cn(n,t.parent,e),t.isDeactivated=!0}),u)},X((()=>[e.include,e.exclude]),(([e,t])=>{e&&m((t=>me(e,t))),t&&m((e=>!me(t,e)))}),{flush:"post",deep:!0});let y=null;const b=()=>{null!=y&&a.set(y,we(n.subTree))};return Se(b),Ce(b),$e((()=>{a.forEach((e=>{const{subTree:t,suspense:r}=n,s=we(t);if(e.type!==s.type||e.key!==s.key)f(e);else{ve(s);const e=s.component.da;e&&Ct(e,r)}}))})),()=>{if(y=null,!t.default)return null;const n=t.default(),r=n[0];if(n.length>1)return i=null,n;if(!qt(r)||!(4&r.shapeFlag)&&!(128&r.shapeFlag))return i=null,r;let s=we(r);const u=s.type,l=En(he(s)?s.type.__asyncResolved||{}:u),{include:c,exclude:h,max:p}=e;if(c&&(!l||!me(c,l))||h&&l&&me(h,l))return i=s,r;const d=null==s.key?u:s.key,f=a.get(d);return s.el&&(s=nn(s),128&r.shapeFlag&&(r.ssContent=s)),y=d,f?(s.el=f.el,s.component=f.component,s.transition&&ue(s,s.transition),s.shapeFlag|=512,o.delete(d),o.add(d)):(o.add(d),p&&o.size>parseInt(p,10)&&g(o.values().next().value)),s.shapeFlag|=256,i=s,G(r.type)?r:s}}},fe=de;function me(e,t){return(0,s.kJ)(e)?e.some((e=>me(e,t))):(0,s.HD)(e)?e.split(",").includes(t):!!(0,s.Kj)(e)&&e.test(t)}function ge(e,t){be(e,"a",t)}function ye(e,t){be(e,"da",t)}function be(e,t,n=fn){const r=e.__wdc||(e.__wdc=()=>{let t=n;while(t){if(t.isDeactivated)return;t=t.parent}return e()});if(ke(t,r,n),n){let e=n.parent;while(e&&e.parent)pe(e.parent.vnode)&&xe(r,t,n,e),e=e.parent}}function xe(e,t,n,r){const a=ke(t,e,r,!0);Ee((()=>{(0,s.Od)(r[t],a)}),n)}function ve(e){e.shapeFlag&=-257,e.shapeFlag&=-513}function we(e){return 128&e.shapeFlag?e.ssContent:e}function ke(e,t,n=fn,s=!1){if(n){const a=n[e]||(n[e]=[]),i=t.__weh||(t.__weh=(...s)=>{if(n.isUnmounted)return;(0,r.Jd)(),gn(n);const a=o(t,n,e,s);return yn(),(0,r.lk)(),a});return s?a.unshift(i):a.push(i),i}}const Ie=e=>(t,n=fn)=>(!wn||"sp"===e)&&ke(e,((...e)=>t(...e)),n),Ne=Ie("bm"),Se=Ie("m"),Te=Ie("bu"),Ce=Ie("u"),$e=Ie("bum"),Ee=Ie("um"),Ae=Ie("sp"),Re=Ie("rtg"),_e=Ie("rtc");function Oe(e,t=fn){ke("ec",e,t)}function Fe(e,t){const n=_;if(null===n)return e;const r=$n(n)||n.proxy,a=e.dirs||(e.dirs=[]);for(let o=0;o<t.length;o++){let[e,n,i,u=s.kT]=t[o];e&&((0,s.mf)(e)&&(e={mounted:e,updated:e}),e.deep&&Q(n),a.push({dir:e,instance:r,value:n,oldValue:void 0,arg:i,modifiers:u}))}return e}function De(e,t,n,s){const a=e.dirs,i=t&&t.dirs;for(let u=0;u<a.length;u++){const l=a[u];i&&(l.oldValue=i[u].value);let c=l.dir[s];c&&((0,r.Jd)(),o(c,n,8,[e.el,l,e,t]),(0,r.lk)())}}const Me="components";function Le(e,t){return Be(Me,e,!0,t)||e}const ze=Symbol();function Pe(e){return(0,s.HD)(e)?Be(Me,e,!1)||e:e||ze}function Be(e,t,n=!0,r=!1){const a=_||fn;if(a){const n=a.type;if(e===Me){const e=En(n,!1);if(e&&(e===t||e===(0,s._A)(t)||e===(0,s.kC)((0,s._A)(t))))return n}const o=We(a[e]||n[e],t)||We(a.appContext[e],t);return!o&&r?n:o}}function We(e,t){return e&&(e[t]||e[(0,s._A)(t)]||e[(0,s.kC)((0,s._A)(t))])}const Ve=e=>e?bn(e)?$n(e)||e.proxy:Ve(e.parent):null,Ue=(0,s.l7)(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>Ve(e.parent),$root:e=>Ve(e.root),$emit:e=>e.emit,$options:e=>Ye(e),$forceUpdate:e=>e.f||(e.f=()=>v(e.update)),$nextTick:e=>e.n||(e.n=b.bind(e.proxy)),$watch:e=>Y.bind(e)}),Ge=(e,t)=>e!==s.kT&&!e.__isScriptSetup&&(0,s.RI)(e,t),je={get({_:e},t){const{ctx:n,setupState:a,data:o,props:i,accessCache:u,type:l,appContext:c}=e;let h;if("$"!==t[0]){const r=u[t];if(void 0!==r)switch(r){case 1:return a[t];case 2:return o[t];case 4:return n[t];case 3:return i[t]}else{if(Ge(a,t))return u[t]=1,a[t];if(o!==s.kT&&(0,s.RI)(o,t))return u[t]=2,o[t];if((h=e.propsOptions[0])&&(0,s.RI)(h,t))return u[t]=3,i[t];if(n!==s.kT&&(0,s.RI)(n,t))return u[t]=4,n[t];He&&(u[t]=0)}}const p=Ue[t];let d,f;return p?("$attrs"===t&&(0,r.j)(e,"get",t),p(e)):(d=l.__cssModules)&&(d=d[t])?d:n!==s.kT&&(0,s.RI)(n,t)?(u[t]=4,n[t]):(f=c.config.globalProperties,(0,s.RI)(f,t)?f[t]:void 0)},set({_:e},t,n){const{data:r,setupState:a,ctx:o}=e;return Ge(a,t)?(a[t]=n,!0):r!==s.kT&&(0,s.RI)(r,t)?(r[t]=n,!0):!(0,s.RI)(e.props,t)&&(("$"!==t[0]||!(t.slice(1)in e))&&(o[t]=n,!0))},has({_:{data:e,setupState:t,accessCache:n,ctx:r,appContext:a,propsOptions:o}},i){let u;return!!n[i]||e!==s.kT&&(0,s.RI)(e,i)||Ge(t,i)||(u=o[0])&&(0,s.RI)(u,i)||(0,s.RI)(r,i)||(0,s.RI)(Ue,i)||(0,s.RI)(a.config.globalProperties,i)},defineProperty(e,t,n){return null!=n.get?e._.accessCache[t]=0:(0,s.RI)(n,"value")&&this.set(e,t,n.value,null),Reflect.defineProperty(e,t,n)}};let He=!0;function qe(e){const t=Ye(e),n=e.proxy,a=e.ctx;He=!1,t.beforeCreate&&Xe(t.beforeCreate,e,"bc");const{data:o,computed:i,methods:u,watch:l,provide:c,inject:h,created:p,beforeMount:d,mounted:f,beforeUpdate:m,updated:g,activated:y,deactivated:b,beforeDestroy:x,beforeUnmount:v,destroyed:w,unmounted:k,render:I,renderTracked:N,renderTriggered:S,errorCaptured:T,serverPrefetch:C,expose:$,inheritAttrs:E,components:A,directives:R,filters:_}=t,O=null;if(h&&Ke(h,a,O,e.appContext.config.unwrapInjectedRef),u)for(const r in u){const e=u[r];(0,s.mf)(e)&&(a[r]=e.bind(n))}if(o){0;const t=o.call(n,n);0,(0,s.Kn)(t)&&(e.data=(0,r.qj)(t))}if(He=!0,i)for(const r in i){const e=i[r],t=(0,s.mf)(e)?e.bind(n,n):(0,s.mf)(e.get)?e.get.bind(n,n):s.dG;0;const o=!(0,s.mf)(e)&&(0,s.mf)(e.set)?e.set.bind(n):s.dG,u=Rn({get:t,set:o});Object.defineProperty(a,r,{enumerable:!0,configurable:!0,get:()=>u.value,set:e=>u.value=e})}if(l)for(const r in l)Je(l[r],a,n,r);if(c){const e=(0,s.mf)(c)?c.call(n):c;Reflect.ownKeys(e).forEach((t=>{H(t,e[t])}))}function F(e,t){(0,s.kJ)(t)?t.forEach((t=>e(t.bind(n)))):t&&e(t.bind(n))}if(p&&Xe(p,e,"c"),F(Ne,d),F(Se,f),F(Te,m),F(Ce,g),F(ge,y),F(ye,b),F(Oe,T),F(_e,N),F(Re,S),F($e,v),F(Ee,k),F(Ae,C),(0,s.kJ)($))if($.length){const t=e.exposed||(e.exposed={});$.forEach((e=>{Object.defineProperty(t,e,{get:()=>n[e],set:t=>n[e]=t})}))}else e.exposed||(e.exposed={});I&&e.render===s.dG&&(e.render=I),null!=E&&(e.inheritAttrs=E),A&&(e.components=A),R&&(e.directives=R)}function Ke(e,t,n=s.dG,a=!1){(0,s.kJ)(e)&&(e=nt(e));for(const o in e){const n=e[o];let i;i=(0,s.Kn)(n)?"default"in n?q(n.from||o,n.default,!0):q(n.from||o):q(n),(0,r.dq)(i)&&a?Object.defineProperty(t,o,{enumerable:!0,configurable:!0,get:()=>i.value,set:e=>i.value=e}):t[o]=i}}function Xe(e,t,n){o((0,s.kJ)(e)?e.map((e=>e.bind(t.proxy))):e.bind(t.proxy),t,n)}function Je(e,t,n,r){const a=r.includes(".")?Z(n,r):()=>n[r];if((0,s.HD)(e)){const n=t[e];(0,s.mf)(n)&&X(a,n)}else if((0,s.mf)(e))X(a,e.bind(n));else if((0,s.Kn)(e))if((0,s.kJ)(e))e.forEach((e=>Je(e,t,n,r)));else{const r=(0,s.mf)(e.handler)?e.handler.bind(n):t[e.handler];(0,s.mf)(r)&&X(a,r,e)}else 0}function Ye(e){const t=e.type,{mixins:n,extends:r}=t,{mixins:a,optionsCache:o,config:{optionMergeStrategies:i}}=e.appContext,u=o.get(t);let l;return u?l=u:a.length||n||r?(l={},a.length&&a.forEach((e=>Ze(l,e,i,!0))),Ze(l,t,i)):l=t,(0,s.Kn)(t)&&o.set(t,l),l}function Ze(e,t,n,r=!1){const{mixins:s,extends:a}=t;a&&Ze(e,a,n,!0),s&&s.forEach((t=>Ze(e,t,n,!0)));for(const o in t)if(r&&"expose"===o);else{const r=Qe[o]||n&&n[o];e[o]=r?r(e[o],t[o]):t[o]}return e}const Qe={data:et,props:st,emits:st,methods:st,computed:st,beforeCreate:rt,created:rt,beforeMount:rt,mounted:rt,beforeUpdate:rt,updated:rt,beforeDestroy:rt,beforeUnmount:rt,destroyed:rt,unmounted:rt,activated:rt,deactivated:rt,errorCaptured:rt,serverPrefetch:rt,components:st,directives:st,watch:at,provide:et,inject:tt};function et(e,t){return t?e?function(){return(0,s.l7)((0,s.mf)(e)?e.call(this,this):e,(0,s.mf)(t)?t.call(this,this):t)}:t:e}function tt(e,t){return st(nt(e),nt(t))}function nt(e){if((0,s.kJ)(e)){const t={};for(let n=0;n<e.length;n++)t[e[n]]=e[n];return t}return e}function rt(e,t){return e?[...new Set([].concat(e,t))]:t}function st(e,t){return e?(0,s.l7)((0,s.l7)(Object.create(null),e),t):t}function at(e,t){if(!e)return t;if(!t)return e;const n=(0,s.l7)(Object.create(null),e);for(const r in t)n[r]=rt(e[r],t[r]);return n}function ot(e,t,n,a=!1){const o={},i={};(0,s.Nj)(i,Xt,1),e.propsDefaults=Object.create(null),ut(e,t,o,i);for(const r in e.propsOptions[0])r in o||(o[r]=void 0);n?e.props=a?o:(0,r.Um)(o):e.type.props?e.props=o:e.props=i,e.attrs=i}function it(e,t,n,a){const{props:o,attrs:i,vnode:{patchFlag:u}}=e,l=(0,r.IU)(o),[c]=e.propsOptions;let h=!1;if(!(a||u>0)||16&u){let r;ut(e,t,o,i)&&(h=!0);for(const a in l)t&&((0,s.RI)(t,a)||(r=(0,s.rs)(a))!==a&&(0,s.RI)(t,r))||(c?!n||void 0===n[a]&&void 0===n[r]||(o[a]=lt(c,l,a,void 0,e,!0)):delete o[a]);if(i!==l)for(const e in i)t&&(0,s.RI)(t,e)||(delete i[e],h=!0)}else if(8&u){const n=e.vnode.dynamicProps;for(let r=0;r<n.length;r++){let a=n[r];if(R(e.emitsOptions,a))continue;const u=t[a];if(c)if((0,s.RI)(i,a))u!==i[a]&&(i[a]=u,h=!0);else{const t=(0,s._A)(a);o[t]=lt(c,l,t,u,e,!1)}else u!==i[a]&&(i[a]=u,h=!0)}}h&&(0,r.X$)(e,"set","$attrs")}function ut(e,t,n,a){const[o,i]=e.propsOptions;let u,l=!1;if(t)for(let r in t){if((0,s.Gg)(r))continue;const c=t[r];let h;o&&(0,s.RI)(o,h=(0,s._A)(r))?i&&i.includes(h)?(u||(u={}))[h]=c:n[h]=c:R(e.emitsOptions,r)||r in a&&c===a[r]||(a[r]=c,l=!0)}if(i){const t=(0,r.IU)(n),a=u||s.kT;for(let r=0;r<i.length;r++){const u=i[r];n[u]=lt(o,t,u,a[u],e,!(0,s.RI)(a,u))}}return l}function lt(e,t,n,r,a,o){const i=e[n];if(null!=i){const e=(0,s.RI)(i,"default");if(e&&void 0===r){const e=i.default;if(i.type!==Function&&(0,s.mf)(e)){const{propsDefaults:s}=a;n in s?r=s[n]:(gn(a),r=s[n]=e.call(null,t),yn())}else r=e}i[0]&&(o&&!e?r=!1:!i[1]||""!==r&&r!==(0,s.rs)(n)||(r=!0))}return r}function ct(e,t,n=!1){const r=t.propsCache,a=r.get(e);if(a)return a;const o=e.props,i={},u=[];let l=!1;if(!(0,s.mf)(e)){const r=e=>{l=!0;const[n,r]=ct(e,t,!0);(0,s.l7)(i,n),r&&u.push(...r)};!n&&t.mixins.length&&t.mixins.forEach(r),e.extends&&r(e.extends),e.mixins&&e.mixins.forEach(r)}if(!o&&!l)return(0,s.Kn)(e)&&r.set(e,s.Z6),s.Z6;if((0,s.kJ)(o))for(let h=0;h<o.length;h++){0;const e=(0,s._A)(o[h]);ht(e)&&(i[e]=s.kT)}else if(o){0;for(const e in o){const t=(0,s._A)(e);if(ht(t)){const n=o[e],r=i[t]=(0,s.kJ)(n)||(0,s.mf)(n)?{type:n}:Object.assign({},n);if(r){const e=ft(Boolean,r.type),n=ft(String,r.type);r[0]=e>-1,r[1]=n<0||e<n,(e>-1||(0,s.RI)(r,"default"))&&u.push(t)}}}}const c=[i,u];return(0,s.Kn)(e)&&r.set(e,c),c}function ht(e){return"$"!==e[0]}function pt(e){const t=e&&e.toString().match(/^\s*(function|class) (\w+)/);return t?t[2]:null===e?"null":""}function dt(e,t){return pt(e)===pt(t)}function ft(e,t){return(0,s.kJ)(t)?t.findIndex((t=>dt(t,e))):(0,s.mf)(t)&&dt(t,e)?0:-1}const mt=e=>"_"===e[0]||"$stable"===e,gt=e=>(0,s.kJ)(e)?e.map(an):[an(e)],yt=(e,t,n)=>{if(t._n)return t;const r=L(((...e)=>gt(t(...e))),n);return r._c=!1,r},bt=(e,t,n)=>{const r=e._ctx;for(const a in e){if(mt(a))continue;const n=e[a];if((0,s.mf)(n))t[a]=yt(a,n,r);else if(null!=n){0;const e=gt(n);t[a]=()=>e}}},xt=(e,t)=>{const n=gt(t);e.slots.default=()=>n},vt=(e,t)=>{if(32&e.vnode.shapeFlag){const n=t._;n?(e.slots=(0,r.IU)(t),(0,s.Nj)(t,"_",n)):bt(t,e.slots={})}else e.slots={},t&&xt(e,t);(0,s.Nj)(e.slots,Xt,1)},wt=(e,t,n)=>{const{vnode:r,slots:a}=e;let o=!0,i=s.kT;if(32&r.shapeFlag){const e=t._;e?n&&1===e?o=!1:((0,s.l7)(a,t),n||1!==e||delete a._):(o=!t.$stable,bt(t,a)),i=t}else t&&(xt(e,t),i={default:1});if(o)for(const s in a)mt(s)||s in i||delete a[s]};function kt(){return{app:null,config:{isNativeTag:s.NO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let It=0;function Nt(e,t){return function(n,r=null){(0,s.mf)(n)||(n=Object.assign({},n)),null==r||(0,s.Kn)(r)||(r=null);const a=kt(),o=new Set;let i=!1;const u=a.app={_uid:It++,_component:n,_props:r,_container:null,_context:a,_instance:null,version:Dn,get config(){return a.config},set config(e){0},use(e,...t){return o.has(e)||(e&&(0,s.mf)(e.install)?(o.add(e),e.install(u,...t)):(0,s.mf)(e)&&(o.add(e),e(u,...t))),u},mixin(e){return a.mixins.includes(e)||a.mixins.push(e),u},component(e,t){return t?(a.components[e]=t,u):a.components[e]},directive(e,t){return t?(a.directives[e]=t,u):a.directives[e]},mount(s,o,l){if(!i){0;const c=Qt(n,r);return c.appContext=a,o&&t?t(c,s):e(c,s,l),i=!0,u._container=s,s.__vue_app__=u,$n(c.component)||c.component.proxy}},unmount(){i&&(e(null,u._container),delete u._container.__vue_app__)},provide(e,t){return a.provides[e]=t,u}};return u}}function St(e,t,n,o,i=!1){if((0,s.kJ)(e))return void e.forEach(((e,r)=>St(e,t&&((0,s.kJ)(t)?t[r]:t),n,o,i)));if(he(o)&&!i)return;const u=4&o.shapeFlag?$n(o.component)||o.component.proxy:o.el,l=i?null:u,{i:c,r:h}=e;const p=t&&t.r,d=c.refs===s.kT?c.refs={}:c.refs,f=c.setupState;if(null!=p&&p!==h&&((0,s.HD)(p)?(d[p]=null,(0,s.RI)(f,p)&&(f[p]=null)):(0,r.dq)(p)&&(p.value=null)),(0,s.mf)(h))a(h,c,12,[l,d]);else{const t=(0,s.HD)(h),a=(0,r.dq)(h);if(t||a){const r=()=>{if(e.f){const n=t?(0,s.RI)(f,h)?f[h]:d[h]:h.value;i?(0,s.kJ)(n)&&(0,s.Od)(n,u):(0,s.kJ)(n)?n.includes(u)||n.push(u):t?(d[h]=[u],(0,s.RI)(f,h)&&(f[h]=d[h])):(h.value=[u],e.k&&(d[e.k]=h.value))}else t?(d[h]=l,(0,s.RI)(f,h)&&(f[h]=l)):a&&(h.value=l,e.k&&(d[e.k]=l))};l?(r.id=-1,Ct(r,n)):r()}else 0}}function Tt(){}const Ct=j;function $t(e){return Et(e)}function Et(e,t){Tt();const n=(0,s.E9)();n.__VUE__=!0;const{insert:a,remove:o,patchProp:i,createElement:u,createText:l,createComment:c,setText:h,setElementText:p,parentNode:d,nextSibling:f,setScopeId:m=s.dG,insertStaticContent:g}=e,y=(e,t,n,r=null,s=null,a=null,o=!1,i=null,u=!!t.dynamicChildren)=>{if(e===t)return;e&&!Kt(e,t)&&(r=Z(e),q(e,s,a,!0),e=null),-2===t.patchFlag&&(u=!1,t.dynamicChildren=null);const{type:l,ref:c,shapeFlag:h}=t;switch(l){case Dt:b(e,t,n,r);break;case Mt:x(e,t,n,r);break;case Lt:null==e&&w(t,n,r,o);break;case Ft:F(e,t,n,r,s,a,o,i,u);break;default:1&h?C(e,t,n,r,s,a,o,i,u):6&h?D(e,t,n,r,s,a,o,i,u):(64&h||128&h)&&l.process(e,t,n,r,s,a,o,i,u,ee)}null!=c&&s&&St(c,e&&e.ref,a,t||e,!t)},b=(e,t,n,r)=>{if(null==e)a(t.el=l(t.children),n,r);else{const n=t.el=e.el;t.children!==e.children&&h(n,t.children)}},x=(e,t,n,r)=>{null==e?a(t.el=c(t.children||""),n,r):t.el=e.el},w=(e,t,n,r)=>{[e.el,e.anchor]=g(e.children,t,n,r,e.el,e.anchor)},I=({el:e,anchor:t},n,r)=>{let s;while(e&&e!==t)s=f(e),a(e,n,r),e=s;a(t,n,r)},T=({el:e,anchor:t})=>{let n;while(e&&e!==t)n=f(e),o(e),e=n;o(t)},C=(e,t,n,r,s,a,o,i,u)=>{o=o||"svg"===t.type,null==e?$(t,n,r,s,a,o,i,u):R(e,t,s,a,o,i,u)},$=(e,t,n,r,o,l,c,h)=>{let d,f;const{type:m,props:g,shapeFlag:y,transition:b,dirs:x}=e;if(d=e.el=u(e.type,l,g&&g.is,g),8&y?p(d,e.children):16&y&&A(e.children,d,null,r,o,l&&"foreignObject"!==m,c,h),x&&De(e,null,r,"created"),E(d,e,e.scopeId,c,r),g){for(const t in g)"value"===t||(0,s.Gg)(t)||i(d,t,null,g[t],l,e.children,r,o,Y);"value"in g&&i(d,"value",null,g.value),(f=g.onVnodeBeforeMount)&&cn(f,r,e)}x&&De(e,null,r,"beforeMount");const v=(!o||o&&!o.pendingBranch)&&b&&!b.persisted;v&&b.beforeEnter(d),a(d,t,n),((f=g&&g.onVnodeMounted)||v||x)&&Ct((()=>{f&&cn(f,r,e),v&&b.enter(d),x&&De(e,null,r,"mounted")}),o)},E=(e,t,n,r,s)=>{if(n&&m(e,n),r)for(let a=0;a<r.length;a++)m(e,r[a]);if(s){let n=s.subTree;if(t===n){const t=s.vnode;E(e,t,t.scopeId,t.slotScopeIds,s.parent)}}},A=(e,t,n,r,s,a,o,i,u=0)=>{for(let l=u;l<e.length;l++){const u=e[l]=i?on(e[l]):an(e[l]);y(null,u,t,n,r,s,a,o,i)}},R=(e,t,n,r,a,o,u)=>{const l=t.el=e.el;let{patchFlag:c,dynamicChildren:h,dirs:d}=t;c|=16&e.patchFlag;const f=e.props||s.kT,m=t.props||s.kT;let g;n&&At(n,!1),(g=m.onVnodeBeforeUpdate)&&cn(g,n,t,e),d&&De(t,e,n,"beforeUpdate"),n&&At(n,!0);const y=a&&"foreignObject"!==t.type;if(h?_(e.dynamicChildren,h,l,n,r,y,o):u||V(e,t,l,null,n,r,y,o,!1),c>0){if(16&c)O(l,t,f,m,n,r,a);else if(2&c&&f.class!==m.class&&i(l,"class",null,m.class,a),4&c&&i(l,"style",f.style,m.style,a),8&c){const s=t.dynamicProps;for(let t=0;t<s.length;t++){const o=s[t],u=f[o],c=m[o];c===u&&"value"!==o||i(l,o,u,c,a,e.children,n,r,Y)}}1&c&&e.children!==t.children&&p(l,t.children)}else u||null!=h||O(l,t,f,m,n,r,a);((g=m.onVnodeUpdated)||d)&&Ct((()=>{g&&cn(g,n,t,e),d&&De(t,e,n,"updated")}),r)},_=(e,t,n,r,s,a,o)=>{for(let i=0;i<t.length;i++){const u=e[i],l=t[i],c=u.el&&(u.type===Ft||!Kt(u,l)||70&u.shapeFlag)?d(u.el):n;y(u,l,c,null,r,s,a,o,!0)}},O=(e,t,n,r,a,o,u)=>{if(n!==r){if(n!==s.kT)for(const l in n)(0,s.Gg)(l)||l in r||i(e,l,n[l],null,u,t.children,a,o,Y);for(const l in r){if((0,s.Gg)(l))continue;const c=r[l],h=n[l];c!==h&&"value"!==l&&i(e,l,h,c,u,t.children,a,o,Y)}"value"in r&&i(e,"value",n.value,r.value)}},F=(e,t,n,r,s,o,i,u,c)=>{const h=t.el=e?e.el:l(""),p=t.anchor=e?e.anchor:l("");let{patchFlag:d,dynamicChildren:f,slotScopeIds:m}=t;m&&(u=u?u.concat(m):m),null==e?(a(h,n,r),a(p,n,r),A(t.children,n,p,s,o,i,u,c)):d>0&&64&d&&f&&e.dynamicChildren?(_(e.dynamicChildren,f,n,s,o,i,u),(null!=t.key||s&&t===s.subTree)&&Rt(e,t,!0)):V(e,t,n,p,s,o,i,u,c)},D=(e,t,n,r,s,a,o,i,u)=>{t.slotScopeIds=i,null==e?512&t.shapeFlag?s.ctx.activate(t,n,r,o,u):M(t,n,r,s,a,o,u):L(e,t,u)},M=(e,t,n,r,s,a,o)=>{const i=e.component=dn(e,r,s);if(pe(e)&&(i.ctx.renderer=ee),kn(i),i.asyncDep){if(s&&s.registerDep(i,P),!e.el){const e=i.subTree=Qt(Mt);x(null,e,t,n)}}else P(i,e,t,n,s,a,o)},L=(e,t,n)=>{const r=t.component=e.component;if(W(e,t,n)){if(r.asyncDep&&!r.asyncResolved)return void B(r,t,n);r.next=t,k(r.update),r.update()}else t.el=e.el,r.vnode=t},P=(e,t,n,a,o,i,u)=>{const l=()=>{if(e.isMounted){let t,{next:n,bu:r,u:a,parent:l,vnode:c}=e,h=n;0,At(e,!1),n?(n.el=c.el,B(e,n,u)):n=c,r&&(0,s.ir)(r),(t=n.props&&n.props.onVnodeBeforeUpdate)&&cn(t,l,n,c),At(e,!0);const p=z(e);0;const f=e.subTree;e.subTree=p,y(f,p,d(f.el),Z(f),e,o,i),n.el=p.el,null===h&&U(e,p.el),a&&Ct(a,o),(t=n.props&&n.props.onVnodeUpdated)&&Ct((()=>cn(t,l,n,c)),o)}else{let r;const{el:u,props:l}=t,{bm:c,m:h,parent:p}=e,d=he(t);if(At(e,!1),c&&(0,s.ir)(c),!d&&(r=l&&l.onVnodeBeforeMount)&&cn(r,p,t),At(e,!0),u&&ne){const n=()=>{e.subTree=z(e),ne(u,e.subTree,e,o,null)};d?t.type.__asyncLoader().then((()=>!e.isUnmounted&&n())):n()}else{0;const r=e.subTree=z(e);0,y(null,r,n,a,e,o,i),t.el=r.el}if(h&&Ct(h,o),!d&&(r=l&&l.onVnodeMounted)){const e=t;Ct((()=>cn(r,p,e)),o)}(256&t.shapeFlag||p&&he(p.vnode)&&256&p.vnode.shapeFlag)&&e.a&&Ct(e.a,o),e.isMounted=!0,t=n=a=null}},c=e.effect=new r.qq(l,(()=>v(h)),e.scope),h=e.update=()=>c.run();h.id=e.uid,At(e,!0),h()},B=(e,t,n)=>{t.component=e;const s=e.vnode.props;e.vnode=t,e.next=null,it(e,t.props,s,n),wt(e,t.children,n),(0,r.Jd)(),N(),(0,r.lk)()},V=(e,t,n,r,s,a,o,i,u=!1)=>{const l=e&&e.children,c=e?e.shapeFlag:0,h=t.children,{patchFlag:d,shapeFlag:f}=t;if(d>0){if(128&d)return void j(l,h,n,r,s,a,o,i,u);if(256&d)return void G(l,h,n,r,s,a,o,i,u)}8&f?(16&c&&Y(l,s,a),h!==l&&p(n,h)):16&c?16&f?j(l,h,n,r,s,a,o,i,u):Y(l,s,a,!0):(8&c&&p(n,""),16&f&&A(h,n,r,s,a,o,i,u))},G=(e,t,n,r,a,o,i,u,l)=>{e=e||s.Z6,t=t||s.Z6;const c=e.length,h=t.length,p=Math.min(c,h);let d;for(d=0;d<p;d++){const r=t[d]=l?on(t[d]):an(t[d]);y(e[d],r,n,null,a,o,i,u,l)}c>h?Y(e,a,o,!0,!1,p):A(t,n,r,a,o,i,u,l,p)},j=(e,t,n,r,a,o,i,u,l)=>{let c=0;const h=t.length;let p=e.length-1,d=h-1;while(c<=p&&c<=d){const r=e[c],s=t[c]=l?on(t[c]):an(t[c]);if(!Kt(r,s))break;y(r,s,n,null,a,o,i,u,l),c++}while(c<=p&&c<=d){const r=e[p],s=t[d]=l?on(t[d]):an(t[d]);if(!Kt(r,s))break;y(r,s,n,null,a,o,i,u,l),p--,d--}if(c>p){if(c<=d){const e=d+1,s=e<h?t[e].el:r;while(c<=d)y(null,t[c]=l?on(t[c]):an(t[c]),n,s,a,o,i,u,l),c++}}else if(c>d)while(c<=p)q(e[c],a,o,!0),c++;else{const f=c,m=c,g=new Map;for(c=m;c<=d;c++){const e=t[c]=l?on(t[c]):an(t[c]);null!=e.key&&g.set(e.key,c)}let b,x=0;const v=d-m+1;let w=!1,k=0;const I=new Array(v);for(c=0;c<v;c++)I[c]=0;for(c=f;c<=p;c++){const r=e[c];if(x>=v){q(r,a,o,!0);continue}let s;if(null!=r.key)s=g.get(r.key);else for(b=m;b<=d;b++)if(0===I[b-m]&&Kt(r,t[b])){s=b;break}void 0===s?q(r,a,o,!0):(I[s-m]=c+1,s>=k?k=s:w=!0,y(r,t[s],n,null,a,o,i,u,l),x++)}const N=w?_t(I):s.Z6;for(b=N.length-1,c=v-1;c>=0;c--){const e=m+c,s=t[e],p=e+1<h?t[e+1].el:r;0===I[c]?y(null,s,n,p,a,o,i,u,l):w&&(b<0||c!==N[b]?H(s,n,p,2):b--)}}},H=(e,t,n,r,s=null)=>{const{el:o,type:i,transition:u,children:l,shapeFlag:c}=e;if(6&c)return void H(e.component.subTree,t,n,r);if(128&c)return void e.suspense.move(t,n,r);if(64&c)return void i.move(e,t,n,ee);if(i===Ft){a(o,t,n);for(let e=0;e<l.length;e++)H(l[e],t,n,r);return void a(e.anchor,t,n)}if(i===Lt)return void I(e,t,n);const h=2!==r&&1&c&&u;if(h)if(0===r)u.beforeEnter(o),a(o,t,n),Ct((()=>u.enter(o)),s);else{const{leave:e,delayLeave:r,afterLeave:s}=u,i=()=>a(o,t,n),l=()=>{e(o,(()=>{i(),s&&s()}))};r?r(o,i,l):l()}else a(o,t,n)},q=(e,t,n,r=!1,s=!1)=>{const{type:a,props:o,ref:i,children:u,dynamicChildren:l,shapeFlag:c,patchFlag:h,dirs:p}=e;if(null!=i&&St(i,null,n,e,!0),256&c)return void t.ctx.deactivate(e);const d=1&c&&p,f=!he(e);let m;if(f&&(m=o&&o.onVnodeBeforeUnmount)&&cn(m,t,e),6&c)J(e.component,n,r);else{if(128&c)return void e.suspense.unmount(n,r);d&&De(e,null,t,"beforeUnmount"),64&c?e.type.remove(e,t,n,s,ee,r):l&&(a!==Ft||h>0&&64&h)?Y(l,t,n,!1,!0):(a===Ft&&384&h||!s&&16&c)&&Y(u,t,n),r&&K(e)}(f&&(m=o&&o.onVnodeUnmounted)||d)&&Ct((()=>{m&&cn(m,t,e),d&&De(e,null,t,"unmounted")}),n)},K=e=>{const{type:t,el:n,anchor:r,transition:s}=e;if(t===Ft)return void X(n,r);if(t===Lt)return void T(e);const a=()=>{o(n),s&&!s.persisted&&s.afterLeave&&s.afterLeave()};if(1&e.shapeFlag&&s&&!s.persisted){const{leave:t,delayLeave:r}=s,o=()=>t(n,a);r?r(e.el,a,o):o()}else a()},X=(e,t)=>{let n;while(e!==t)n=f(e),o(e),e=n;o(t)},J=(e,t,n)=>{const{bum:r,scope:a,update:o,subTree:i,um:u}=e;r&&(0,s.ir)(r),a.stop(),o&&(o.active=!1,q(i,e,t,n)),u&&Ct(u,t),Ct((()=>{e.isUnmounted=!0}),t),t&&t.pendingBranch&&!t.isUnmounted&&e.asyncDep&&!e.asyncResolved&&e.suspenseId===t.pendingId&&(t.deps--,0===t.deps&&t.resolve())},Y=(e,t,n,r=!1,s=!1,a=0)=>{for(let o=a;o<e.length;o++)q(e[o],t,n,r,s)},Z=e=>6&e.shapeFlag?Z(e.component.subTree):128&e.shapeFlag?e.suspense.next():f(e.anchor||e.el),Q=(e,t,n)=>{null==e?t._vnode&&q(t._vnode,null,null,!0):y(t._vnode||null,e,t,null,null,null,n),N(),S(),t._vnode=e},ee={p:y,um:q,m:H,r:K,mt:M,mc:A,pc:V,pbc:_,n:Z,o:e};let te,ne;return t&&([te,ne]=t(ee)),{render:Q,hydrate:te,createApp:Nt(Q,te)}}function At({effect:e,update:t},n){e.allowRecurse=t.allowRecurse=n}function Rt(e,t,n=!1){const r=e.children,a=t.children;if((0,s.kJ)(r)&&(0,s.kJ)(a))for(let s=0;s<r.length;s++){const e=r[s];let t=a[s];1&t.shapeFlag&&!t.dynamicChildren&&((t.patchFlag<=0||32===t.patchFlag)&&(t=a[s]=on(a[s]),t.el=e.el),n||Rt(e,t)),t.type===Dt&&(t.el=e.el)}}function _t(e){const t=e.slice(),n=[0];let r,s,a,o,i;const u=e.length;for(r=0;r<u;r++){const u=e[r];if(0!==u){if(s=n[n.length-1],e[s]<u){t[r]=s,n.push(r);continue}a=0,o=n.length-1;while(a<o)i=a+o>>1,e[n[i]]<u?a=i+1:o=i;u<e[n[a]]&&(a>0&&(t[r]=n[a-1]),n[a]=r)}}a=n.length,o=n[a-1];while(a-- >0)n[a]=o,o=t[o];return n}const Ot=e=>e.__isTeleport;const Ft=Symbol(void 0),Dt=Symbol(void 0),Mt=Symbol(void 0),Lt=Symbol(void 0),zt=[];let Pt=null;function Bt(e=!1){zt.push(Pt=e?null:[])}function Wt(){zt.pop(),Pt=zt[zt.length-1]||null}let Vt=1;function Ut(e){Vt+=e}function Gt(e){return e.dynamicChildren=Vt>0?Pt||s.Z6:null,Wt(),Vt>0&&Pt&&Pt.push(e),e}function jt(e,t,n,r,s,a){return Gt(Zt(e,t,n,r,s,a,!0))}function Ht(e,t,n,r,s){return Gt(Qt(e,t,n,r,s,!0))}function qt(e){return!!e&&!0===e.__v_isVNode}function Kt(e,t){return e.type===t.type&&e.key===t.key}const Xt="__vInternal",Jt=({key:e})=>null!=e?e:null,Yt=({ref:e,ref_key:t,ref_for:n})=>null!=e?(0,s.HD)(e)||(0,r.dq)(e)||(0,s.mf)(e)?{i:_,r:e,k:t,f:!!n}:e:null;function Zt(e,t=null,n=null,r=0,a=null,o=(e===Ft?0:1),i=!1,u=!1){const l={__v_isVNode:!0,__v_skip:!0,type:e,props:t,key:t&&Jt(t),ref:t&&Yt(t),scopeId:O,slotScopeIds:null,children:n,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:o,patchFlag:r,dynamicProps:a,dynamicChildren:null,appContext:null,ctx:_};return u?(un(l,n),128&o&&e.normalize(l)):n&&(l.shapeFlag|=(0,s.HD)(n)?8:16),Vt>0&&!i&&Pt&&(l.patchFlag>0||6&o)&&32!==l.patchFlag&&Pt.push(l),l}const Qt=en;function en(e,t=null,n=null,a=0,o=null,i=!1){if(e&&e!==ze||(e=Mt),qt(e)){const r=nn(e,t,!0);return n&&un(r,n),Vt>0&&!i&&Pt&&(6&r.shapeFlag?Pt[Pt.indexOf(e)]=r:Pt.push(r)),r.patchFlag|=-2,r}if(An(e)&&(e=e.__vccOpts),t){t=tn(t);let{class:e,style:n}=t;e&&!(0,s.HD)(e)&&(t.class=(0,s.C_)(e)),(0,s.Kn)(n)&&((0,r.X3)(n)&&!(0,s.kJ)(n)&&(n=(0,s.l7)({},n)),t.style=(0,s.j5)(n))}const u=(0,s.HD)(e)?1:G(e)?128:Ot(e)?64:(0,s.Kn)(e)?4:(0,s.mf)(e)?2:0;return Zt(e,t,n,a,o,u,i,!0)}function tn(e){return e?(0,r.X3)(e)||Xt in e?(0,s.l7)({},e):e:null}function nn(e,t,n=!1){const{props:r,ref:a,patchFlag:o,children:i}=e,u=t?ln(r||{},t):r,l={__v_isVNode:!0,__v_skip:!0,type:e.type,props:u,key:u&&Jt(u),ref:t&&t.ref?n&&a?(0,s.kJ)(a)?a.concat(Yt(t)):[a,Yt(t)]:Yt(t):a,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:i,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:t&&e.type!==Ft?-1===o?16:16|o:o,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&nn(e.ssContent),ssFallback:e.ssFallback&&nn(e.ssFallback),el:e.el,anchor:e.anchor,ctx:e.ctx,ce:e.ce};return l}function rn(e=" ",t=0){return Qt(Dt,null,e,t)}function sn(e,t){const n=Qt(Lt,null,e);return n.staticCount=t,n}function an(e){return null==e||"boolean"===typeof e?Qt(Mt):(0,s.kJ)(e)?Qt(Ft,null,e.slice()):"object"===typeof e?on(e):Qt(Dt,null,String(e))}function on(e){return null===e.el&&-1!==e.patchFlag||e.memo?e:nn(e)}function un(e,t){let n=0;const{shapeFlag:r}=e;if(null==t)t=null;else if((0,s.kJ)(t))n=16;else if("object"===typeof t){if(65&r){const n=t.default;return void(n&&(n._c&&(n._d=!1),un(e,n()),n._c&&(n._d=!0)))}{n=32;const r=t._;r||Xt in t?3===r&&_&&(1===_.slots._?t._=1:(t._=2,e.patchFlag|=1024)):t._ctx=_}}else(0,s.mf)(t)?(t={default:t,_ctx:_},n=32):(t=String(t),64&r?(n=16,t=[rn(t)]):n=8);e.children=t,e.shapeFlag|=n}function ln(...e){const t={};for(let n=0;n<e.length;n++){const r=e[n];for(const e in r)if("class"===e)t.class!==r.class&&(t.class=(0,s.C_)([t.class,r.class]));else if("style"===e)t.style=(0,s.j5)([t.style,r.style]);else if((0,s.F7)(e)){const n=t[e],a=r[e];!a||n===a||(0,s.kJ)(n)&&n.includes(a)||(t[e]=n?[].concat(n,a):a)}else""!==e&&(t[e]=r[e])}return t}function cn(e,t,n,r=null){o(e,t,7,[n,r])}const hn=kt();let pn=0;function dn(e,t,n){const a=e.type,o=(t?t.appContext:e.appContext)||hn,i={uid:pn++,vnode:e,type:a,parent:t,appContext:o,root:null,next:null,subTree:null,effect:null,update:null,scope:new r.Bj(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:t?t.provides:Object.create(o.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:ct(a,o),emitsOptions:A(a,o),emit:null,emitted:null,propsDefaults:s.kT,inheritAttrs:a.inheritAttrs,ctx:s.kT,data:s.kT,props:s.kT,attrs:s.kT,slots:s.kT,refs:s.kT,setupState:s.kT,setupContext:null,suspense:n,suspenseId:n?n.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return i.ctx={_:i},i.root=t?t.root:i,i.emit=E.bind(null,i),e.ce&&e.ce(i),i}let fn=null;const mn=()=>fn||_,gn=e=>{fn=e,e.scope.on()},yn=()=>{fn&&fn.scope.off(),fn=null};function bn(e){return 4&e.vnode.shapeFlag}let xn,vn,wn=!1;function kn(e,t=!1){wn=t;const{props:n,children:r}=e.vnode,s=bn(e);ot(e,n,s,t),vt(e,r);const a=s?In(e,t):void 0;return wn=!1,a}function In(e,t){const n=e.type;e.accessCache=Object.create(null),e.proxy=(0,r.Xl)(new Proxy(e.ctx,je));const{setup:o}=n;if(o){const n=e.setupContext=o.length>1?Cn(e):null;gn(e),(0,r.Jd)();const u=a(o,e,0,[e.props,n]);if((0,r.lk)(),yn(),(0,s.tI)(u)){if(u.then(yn,yn),t)return u.then((n=>{Nn(e,n,t)})).catch((t=>{i(t,e,0)}));e.asyncDep=u}else Nn(e,u,t)}else Sn(e,t)}function Nn(e,t,n){(0,s.mf)(t)?e.type.__ssrInlineRender?e.ssrRender=t:e.render=t:(0,s.Kn)(t)&&(e.setupState=(0,r.WL)(t)),Sn(e,n)}function Sn(e,t,n){const a=e.type;if(!e.render){if(!t&&xn&&!a.render){const t=a.template||Ye(e).template;if(t){0;const{isCustomElement:n,compilerOptions:r}=e.appContext.config,{delimiters:o,compilerOptions:i}=a,u=(0,s.l7)((0,s.l7)({isCustomElement:n,delimiters:o},r),i);a.render=xn(t,u)}}e.render=a.render||s.dG,vn&&vn(e)}gn(e),(0,r.Jd)(),qe(e),(0,r.lk)(),yn()}function Tn(e){return new Proxy(e.attrs,{get(t,n){return(0,r.j)(e,"get","$attrs"),t[n]}})}function Cn(e){const t=t=>{e.exposed=t||{}};let n;return{get attrs(){return n||(n=Tn(e))},slots:e.slots,emit:e.emit,expose:t}}function $n(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy((0,r.WL)((0,r.Xl)(e.exposed)),{get(t,n){return n in t?t[n]:n in Ue?Ue[n](e):void 0},has(e,t){return t in e||t in Ue}}))}function En(e,t=!0){return(0,s.mf)(e)?e.displayName||e.name:e.name||t&&e.__name}function An(e){return(0,s.mf)(e)&&"__vccOpts"in e}const Rn=(e,t)=>(0,r.Fl)(e,t,wn);function _n(e,t,n){const r=arguments.length;return 2===r?(0,s.Kn)(t)&&!(0,s.kJ)(t)?qt(t)?Qt(e,null,[t]):Qt(e,t):Qt(e,null,t):(r>3?n=Array.prototype.slice.call(arguments,2):3===r&&qt(n)&&(n=[n]),Qt(e,t,n))}const On=Symbol(""),Fn=()=>{{const e=q(On);return e}};const Dn="3.2.47"},9242:function(e,t,n){"use strict";n.d(t,{bM:function(){return le},nr:function(){return ue},ri:function(){return me}});n(7658);var r=n(7139),s=n(3396),a=n(4870);const o="http://www.w3.org/2000/svg",i="undefined"!==typeof document?document:null,u=i&&i.createElement("template"),l={insert:(e,t,n)=>{t.insertBefore(e,n||null)},remove:e=>{const t=e.parentNode;t&&t.removeChild(e)},createElement:(e,t,n,r)=>{const s=t?i.createElementNS(o,e):i.createElement(e,n?{is:n}:void 0);return"select"===e&&r&&null!=r.multiple&&s.setAttribute("multiple",r.multiple),s},createText:e=>i.createTextNode(e),createComment:e=>i.createComment(e),setText:(e,t)=>{e.nodeValue=t},setElementText:(e,t)=>{e.textContent=t},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>i.querySelector(e),setScopeId(e,t){e.setAttribute(t,"")},insertStaticContent(e,t,n,r,s,a){const o=n?n.previousSibling:t.lastChild;if(s&&(s===a||s.nextSibling)){while(1)if(t.insertBefore(s.cloneNode(!0),n),s===a||!(s=s.nextSibling))break}else{u.innerHTML=r?`<svg>${e}</svg>`:e;const s=u.content;if(r){const e=s.firstChild;while(e.firstChild)s.appendChild(e.firstChild);s.removeChild(e)}t.insertBefore(s,n)}return[o?o.nextSibling:t.firstChild,n?n.previousSibling:t.lastChild]}};function c(e,t,n){const r=e._vtc;r&&(t=(t?[t,...r]:[...r]).join(" ")),null==t?e.removeAttribute("class"):n?e.setAttribute("class",t):e.className=t}function h(e,t,n){const s=e.style,a=(0,r.HD)(n);if(n&&!a){if(t&&!(0,r.HD)(t))for(const e in t)null==n[e]&&d(s,e,"");for(const e in n)d(s,e,n[e])}else{const r=s.display;a?t!==n&&(s.cssText=n):t&&e.removeAttribute("style"),"_vod"in e&&(s.display=r)}}const p=/\s*!important$/;function d(e,t,n){if((0,r.kJ)(n))n.forEach((n=>d(e,t,n)));else if(null==n&&(n=""),t.startsWith("--"))e.setProperty(t,n);else{const s=g(e,t);p.test(n)?e.setProperty((0,r.rs)(s),n.replace(p,""),"important"):e[s]=n}}const f=["Webkit","Moz","ms"],m={};function g(e,t){const n=m[t];if(n)return n;let s=(0,r._A)(t);if("filter"!==s&&s in e)return m[t]=s;s=(0,r.kC)(s);for(let r=0;r<f.length;r++){const n=f[r]+s;if(n in e)return m[t]=n}return t}const y="http://www.w3.org/1999/xlink";function b(e,t,n,s,a){if(s&&t.startsWith("xlink:"))null==n?e.removeAttributeNS(y,t.slice(6,t.length)):e.setAttributeNS(y,t,n);else{const s=(0,r.Pq)(t);null==n||s&&!(0,r.yA)(n)?e.removeAttribute(t):e.setAttribute(t,s?"":n)}}function x(e,t,n,s,a,o,i){if("innerHTML"===t||"textContent"===t)return s&&i(s,a,o),void(e[t]=null==n?"":n);if("value"===t&&"PROGRESS"!==e.tagName&&!e.tagName.includes("-")){e._value=n;const r=null==n?"":n;return e.value===r&&"OPTION"!==e.tagName||(e.value=r),void(null==n&&e.removeAttribute(t))}let u=!1;if(""===n||null==n){const s=typeof e[t];"boolean"===s?n=(0,r.yA)(n):null==n&&"string"===s?(n="",u=!0):"number"===s&&(n=0,u=!0)}try{e[t]=n}catch(l){0}u&&e.removeAttribute(t)}function v(e,t,n,r){e.addEventListener(t,n,r)}function w(e,t,n,r){e.removeEventListener(t,n,r)}function k(e,t,n,r,s=null){const a=e._vei||(e._vei={}),o=a[t];if(r&&o)o.value=r;else{const[n,i]=N(t);if(r){const o=a[t]=$(r,s);v(e,n,o,i)}else o&&(w(e,n,o,i),a[t]=void 0)}}const I=/(?:Once|Passive|Capture)$/;function N(e){let t;if(I.test(e)){let n;t={};while(n=e.match(I))e=e.slice(0,e.length-n[0].length),t[n[0].toLowerCase()]=!0}const n=":"===e[2]?e.slice(3):(0,r.rs)(e.slice(2));return[n,t]}let S=0;const T=Promise.resolve(),C=()=>S||(T.then((()=>S=0)),S=Date.now());function $(e,t){const n=e=>{if(e._vts){if(e._vts<=n.attached)return}else e._vts=Date.now();(0,s.$d)(E(e,n.value),t,5,[e])};return n.value=e,n.attached=C(),n}function E(e,t){if((0,r.kJ)(t)){const n=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{n.call(e),e._stopped=!0},t.map((e=>t=>!t._stopped&&e&&e(t)))}return t}const A=/^on[a-z]/,R=(e,t,n,s,a=!1,o,i,u,l)=>{"class"===t?c(e,s,a):"style"===t?h(e,n,s):(0,r.F7)(t)?(0,r.tR)(t)||k(e,t,n,s,i):("."===t[0]?(t=t.slice(1),1):"^"===t[0]?(t=t.slice(1),0):_(e,t,s,a))?x(e,t,s,o,i,u,l):("true-value"===t?e._trueValue=s:"false-value"===t&&(e._falseValue=s),b(e,t,s,a))};function _(e,t,n,s){return s?"innerHTML"===t||"textContent"===t||!!(t in e&&A.test(t)&&(0,r.mf)(n)):"spellcheck"!==t&&"draggable"!==t&&"translate"!==t&&("form"!==t&&(("list"!==t||"INPUT"!==e.tagName)&&(("type"!==t||"TEXTAREA"!==e.tagName)&&((!A.test(t)||!(0,r.HD)(n))&&t in e))))}"undefined"!==typeof HTMLElement&&HTMLElement;const O="transition",F="animation",D=(e,{slots:t})=>(0,s.h)(s.P$,B(e),t);D.displayName="Transition";const M={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},L=D.props=(0,r.l7)({},s.P$.props,M),z=(e,t=[])=>{(0,r.kJ)(e)?e.forEach((e=>e(...t))):e&&e(...t)},P=e=>!!e&&((0,r.kJ)(e)?e.some((e=>e.length>1)):e.length>1);function B(e){const t={};for(const r in e)r in M||(t[r]=e[r]);if(!1===e.css)return t;const{name:n="v",type:s,duration:a,enterFromClass:o=`${n}-enter-from`,enterActiveClass:i=`${n}-enter-active`,enterToClass:u=`${n}-enter-to`,appearFromClass:l=o,appearActiveClass:c=i,appearToClass:h=u,leaveFromClass:p=`${n}-leave-from`,leaveActiveClass:d=`${n}-leave-active`,leaveToClass:f=`${n}-leave-to`}=e,m=W(a),g=m&&m[0],y=m&&m[1],{onBeforeEnter:b,onEnter:x,onEnterCancelled:v,onLeave:w,onLeaveCancelled:k,onBeforeAppear:I=b,onAppear:N=x,onAppearCancelled:S=v}=t,T=(e,t,n)=>{G(e,t?h:u),G(e,t?c:i),n&&n()},C=(e,t)=>{e._isLeaving=!1,G(e,p),G(e,f),G(e,d),t&&t()},$=e=>(t,n)=>{const r=e?N:x,a=()=>T(t,e,n);z(r,[t,a]),j((()=>{G(t,e?l:o),U(t,e?h:u),P(r)||q(t,s,g,a)}))};return(0,r.l7)(t,{onBeforeEnter(e){z(b,[e]),U(e,o),U(e,i)},onBeforeAppear(e){z(I,[e]),U(e,l),U(e,c)},onEnter:$(!1),onAppear:$(!0),onLeave(e,t){e._isLeaving=!0;const n=()=>C(e,t);U(e,p),Y(),U(e,d),j((()=>{e._isLeaving&&(G(e,p),U(e,f),P(w)||q(e,s,y,n))})),z(w,[e,n])},onEnterCancelled(e){T(e,!1),z(v,[e])},onAppearCancelled(e){T(e,!0),z(S,[e])},onLeaveCancelled(e){C(e),z(k,[e])}})}function W(e){if(null==e)return null;if((0,r.Kn)(e))return[V(e.enter),V(e.leave)];{const t=V(e);return[t,t]}}function V(e){const t=(0,r.He)(e);return t}function U(e,t){t.split(/\s+/).forEach((t=>t&&e.classList.add(t))),(e._vtc||(e._vtc=new Set)).add(t)}function G(e,t){t.split(/\s+/).forEach((t=>t&&e.classList.remove(t)));const{_vtc:n}=e;n&&(n.delete(t),n.size||(e._vtc=void 0))}function j(e){requestAnimationFrame((()=>{requestAnimationFrame(e)}))}let H=0;function q(e,t,n,r){const s=e._endId=++H,a=()=>{s===e._endId&&r()};if(n)return setTimeout(a,n);const{type:o,timeout:i,propCount:u}=K(e,t);if(!o)return r();const l=o+"end";let c=0;const h=()=>{e.removeEventListener(l,p),a()},p=t=>{t.target===e&&++c>=u&&h()};setTimeout((()=>{c<u&&h()}),i+1),e.addEventListener(l,p)}function K(e,t){const n=window.getComputedStyle(e),r=e=>(n[e]||"").split(", "),s=r(`${O}Delay`),a=r(`${O}Duration`),o=X(s,a),i=r(`${F}Delay`),u=r(`${F}Duration`),l=X(i,u);let c=null,h=0,p=0;t===O?o>0&&(c=O,h=o,p=a.length):t===F?l>0&&(c=F,h=l,p=u.length):(h=Math.max(o,l),c=h>0?o>l?O:F:null,p=c?c===O?a.length:u.length:0);const d=c===O&&/\b(transform|all)(,|$)/.test(r(`${O}Property`).toString());return{type:c,timeout:h,propCount:p,hasTransform:d}}function X(e,t){while(e.length<t.length)e=e.concat(e);return Math.max(...t.map(((t,n)=>J(t)+J(e[n]))))}function J(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function Y(){return document.body.offsetHeight}const Z=new WeakMap,Q=new WeakMap,ee={name:"TransitionGroup",props:(0,r.l7)({},L,{tag:String,moveClass:String}),setup(e,{slots:t}){const n=(0,s.FN)(),r=(0,s.Y8)();let o,i;return(0,s.ic)((()=>{if(!o.length)return;const t=e.moveClass||`${e.name||"v"}-move`;if(!se(o[0].el,n.vnode.el,t))return;o.forEach(te),o.forEach(ne);const r=o.filter(re);Y(),r.forEach((e=>{const n=e.el,r=n.style;U(n,t),r.transform=r.webkitTransform=r.transitionDuration="";const s=n._moveCb=e=>{e&&e.target!==n||e&&!/transform$/.test(e.propertyName)||(n.removeEventListener("transitionend",s),n._moveCb=null,G(n,t))};n.addEventListener("transitionend",s)}))})),()=>{const u=(0,a.IU)(e),l=B(u);let c=u.tag||s.HY;o=i,i=t.default?(0,s.Q6)(t.default()):[];for(let e=0;e<i.length;e++){const t=i[e];null!=t.key&&(0,s.nK)(t,(0,s.U2)(t,l,r,n))}if(o)for(let e=0;e<o.length;e++){const t=o[e];(0,s.nK)(t,(0,s.U2)(t,l,r,n)),Z.set(t,t.el.getBoundingClientRect())}return(0,s.Wm)(c,null,i)}}};ee.props;function te(e){const t=e.el;t._moveCb&&t._moveCb(),t._enterCb&&t._enterCb()}function ne(e){Q.set(e,e.el.getBoundingClientRect())}function re(e){const t=Z.get(e),n=Q.get(e),r=t.left-n.left,s=t.top-n.top;if(r||s){const t=e.el.style;return t.transform=t.webkitTransform=`translate(${r}px,${s}px)`,t.transitionDuration="0s",e}}function se(e,t,n){const r=e.cloneNode();e._vtc&&e._vtc.forEach((e=>{e.split(/\s+/).forEach((e=>e&&r.classList.remove(e)))})),n.split(/\s+/).forEach((e=>e&&r.classList.add(e))),r.style.display="none";const s=1===t.nodeType?t:t.parentNode;s.appendChild(r);const{hasTransform:a}=K(r);return s.removeChild(r),a}const ae=e=>{const t=e.props["onUpdate:modelValue"]||!1;return(0,r.kJ)(t)?e=>(0,r.ir)(t,e):t};function oe(e){e.target.composing=!0}function ie(e){const t=e.target;t.composing&&(t.composing=!1,t.dispatchEvent(new Event("input")))}const ue={created(e,{modifiers:{lazy:t,trim:n,number:s}},a){e._assign=ae(a);const o=s||a.props&&"number"===a.props.type;v(e,t?"change":"input",(t=>{if(t.target.composing)return;let s=e.value;n&&(s=s.trim()),o&&(s=(0,r.h5)(s)),e._assign(s)})),n&&v(e,"change",(()=>{e.value=e.value.trim()})),t||(v(e,"compositionstart",oe),v(e,"compositionend",ie),v(e,"change",ie))},mounted(e,{value:t}){e.value=null==t?"":t},beforeUpdate(e,{value:t,modifiers:{lazy:n,trim:s,number:a}},o){if(e._assign=ae(o),e.composing)return;if(document.activeElement===e&&"range"!==e.type){if(n)return;if(s&&e.value.trim()===t)return;if((a||"number"===e.type)&&(0,r.h5)(e.value)===t)return}const i=null==t?"":t;e.value!==i&&(e.value=i)}};const le={deep:!0,created(e,{value:t,modifiers:{number:n}},s){const a=(0,r.DM)(t);v(e,"change",(()=>{const t=Array.prototype.filter.call(e.options,(e=>e.selected)).map((e=>n?(0,r.h5)(he(e)):he(e)));e._assign(e.multiple?a?new Set(t):t:t[0])})),e._assign=ae(s)},mounted(e,{value:t}){ce(e,t)},beforeUpdate(e,t,n){e._assign=ae(n)},updated(e,{value:t}){ce(e,t)}};function ce(e,t){const n=e.multiple;if(!n||(0,r.kJ)(t)||(0,r.DM)(t)){for(let s=0,a=e.options.length;s<a;s++){const a=e.options[s],o=he(a);if(n)(0,r.kJ)(t)?a.selected=(0,r.hq)(t,o)>-1:a.selected=t.has(o);else if((0,r.WV)(he(a),t))return void(e.selectedIndex!==s&&(e.selectedIndex=s))}n||-1===e.selectedIndex||(e.selectedIndex=-1)}}function he(e){return"_value"in e?e._value:e.value}const pe=(0,r.l7)({patchProp:R},l);let de;function fe(){return de||(de=(0,s.Us)(pe))}const me=(...e)=>{const t=fe().createApp(...e);const{mount:n}=t;return t.mount=e=>{const s=ge(e);if(!s)return;const a=t._component;(0,r.mf)(a)||a.render||a.template||(a.template=s.innerHTML),s.innerHTML="";const o=n(s,!1,s instanceof SVGElement);return s instanceof Element&&(s.removeAttribute("v-cloak"),s.setAttribute("data-v-app","")),o},t};function ge(e){if((0,r.HD)(e)){const t=document.querySelector(e);return t}return e}},7139:function(e,t,n){"use strict";n.d(t,{C_:function(){return h},DM:function(){return O},E9:function(){return oe},F7:function(){return S},Gg:function(){return H},HD:function(){return L},He:function(){return se},Kj:function(){return D},Kn:function(){return P},NO:function(){return I},Nj:function(){return ne},Od:function(){return $},PO:function(){return G},Pq:function(){return d},RI:function(){return A},S0:function(){return j},W7:function(){return U},WV:function(){return g},Z6:function(){return w},_A:function(){return X},_N:function(){return _},aU:function(){return ee},dG:function(){return k},e1:function(){return a},fY:function(){return r},h5:function(){return re},hR:function(){return Q},hq:function(){return y},ir:function(){return te},j5:function(){return o},kC:function(){return Z},kJ:function(){return R},kT:function(){return v},l7:function(){return C},mf:function(){return M},rs:function(){return Y},tI:function(){return B},tR:function(){return T},yA:function(){return f},yk:function(){return z},zw:function(){return b}});n(7658);function r(e,t){const n=Object.create(null),r=e.split(",");for(let s=0;s<r.length;s++)n[r[s]]=!0;return t?e=>!!n[e.toLowerCase()]:e=>!!n[e]}const s="Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt",a=r(s);function o(e){if(R(e)){const t={};for(let n=0;n<e.length;n++){const r=e[n],s=L(r)?c(r):o(r);if(s)for(const e in s)t[e]=s[e]}return t}return L(e)||P(e)?e:void 0}const i=/;(?![^(]*\))/g,u=/:([^]+)/,l=/\/\*.*?\*\//gs;function c(e){const t={};return e.replace(l,"").split(i).forEach((e=>{if(e){const n=e.split(u);n.length>1&&(t[n[0].trim()]=n[1].trim())}})),t}function h(e){let t="";if(L(e))t=e;else if(R(e))for(let n=0;n<e.length;n++){const r=h(e[n]);r&&(t+=r+" ")}else if(P(e))for(const n in e)e[n]&&(t+=n+" ");return t.trim()}const p="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",d=r(p);function f(e){return!!e||""===e}function m(e,t){if(e.length!==t.length)return!1;let n=!0;for(let r=0;n&&r<e.length;r++)n=g(e[r],t[r]);return n}function g(e,t){if(e===t)return!0;let n=F(e),r=F(t);if(n||r)return!(!n||!r)&&e.getTime()===t.getTime();if(n=z(e),r=z(t),n||r)return e===t;if(n=R(e),r=R(t),n||r)return!(!n||!r)&&m(e,t);if(n=P(e),r=P(t),n||r){if(!n||!r)return!1;const s=Object.keys(e).length,a=Object.keys(t).length;if(s!==a)return!1;for(const n in e){const r=e.hasOwnProperty(n),s=t.hasOwnProperty(n);if(r&&!s||!r&&s||!g(e[n],t[n]))return!1}}return String(e)===String(t)}function y(e,t){return e.findIndex((e=>g(e,t)))}const b=e=>L(e)?e:null==e?"":R(e)||P(e)&&(e.toString===W||!M(e.toString))?JSON.stringify(e,x,2):String(e),x=(e,t)=>t&&t.__v_isRef?x(e,t.value):_(t)?{[`Map(${t.size})`]:[...t.entries()].reduce(((e,[t,n])=>(e[`${t} =>`]=n,e)),{})}:O(t)?{[`Set(${t.size})`]:[...t.values()]}:!P(t)||R(t)||G(t)?t:String(t),v={},w=[],k=()=>{},I=()=>!1,N=/^on[^a-z]/,S=e=>N.test(e),T=e=>e.startsWith("onUpdate:"),C=Object.assign,$=(e,t)=>{const n=e.indexOf(t);n>-1&&e.splice(n,1)},E=Object.prototype.hasOwnProperty,A=(e,t)=>E.call(e,t),R=Array.isArray,_=e=>"[object Map]"===V(e),O=e=>"[object Set]"===V(e),F=e=>"[object Date]"===V(e),D=e=>"[object RegExp]"===V(e),M=e=>"function"===typeof e,L=e=>"string"===typeof e,z=e=>"symbol"===typeof e,P=e=>null!==e&&"object"===typeof e,B=e=>P(e)&&M(e.then)&&M(e.catch),W=Object.prototype.toString,V=e=>W.call(e),U=e=>V(e).slice(8,-1),G=e=>"[object Object]"===V(e),j=e=>L(e)&&"NaN"!==e&&"-"!==e[0]&&""+parseInt(e,10)===e,H=r(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),q=e=>{const t=Object.create(null);return n=>{const r=t[n];return r||(t[n]=e(n))}},K=/-(\w)/g,X=q((e=>e.replace(K,((e,t)=>t?t.toUpperCase():"")))),J=/\B([A-Z])/g,Y=q((e=>e.replace(J,"-$1").toLowerCase())),Z=q((e=>e.charAt(0).toUpperCase()+e.slice(1))),Q=q((e=>e?`on${Z(e)}`:"")),ee=(e,t)=>!Object.is(e,t),te=(e,t)=>{for(let n=0;n<e.length;n++)e[n](t)},ne=(e,t,n)=>{Object.defineProperty(e,t,{configurable:!0,enumerable:!1,value:n})},re=e=>{const t=parseFloat(e);return isNaN(t)?e:t},se=e=>{const t=L(e)?Number(e):NaN;return isNaN(t)?e:t};let ae;const oe=()=>ae||(ae="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof self?self:"undefined"!==typeof window?window:"undefined"!==typeof n.g?n.g:{})},89:function(e,t){"use strict";t.Z=(e,t)=>{const n=e.__vccOpts||e;for(const[r,s]of t)n[r]=s;return n}},65:function(e,t,n){"use strict";n.d(t,{MT:function(){return ee}});n(7658),n(541);var r=n(3396),s=n(4870);function a(){return o().__VUE_DEVTOOLS_GLOBAL_HOOK__}function o(){return"undefined"!==typeof navigator&&"undefined"!==typeof window?window:"undefined"!==typeof n.g?n.g:{}}const i="function"===typeof Proxy,u="devtools-plugin:setup",l="plugin:settings:set";let c,h;function p(){var e;return void 0!==c||("undefined"!==typeof window&&window.performance?(c=!0,h=window.performance):"undefined"!==typeof n.g&&(null===(e=n.g.perf_hooks)||void 0===e?void 0:e.performance)?(c=!0,h=n.g.perf_hooks.performance):c=!1),c}function d(){return p()?h.now():Date.now()}class f{constructor(e,t){this.target=null,this.targetQueue=[],this.onQueue=[],this.plugin=e,this.hook=t;const n={};if(e.settings)for(const o in e.settings){const t=e.settings[o];n[o]=t.defaultValue}const r=`__vue-devtools-plugin-settings__${e.id}`;let s=Object.assign({},n);try{const e=localStorage.getItem(r),t=JSON.parse(e);Object.assign(s,t)}catch(a){}this.fallbacks={getSettings(){return s},setSettings(e){try{localStorage.setItem(r,JSON.stringify(e))}catch(a){}s=e},now(){return d()}},t&&t.on(l,((e,t)=>{e===this.plugin.id&&this.fallbacks.setSettings(t)})),this.proxiedOn=new Proxy({},{get:(e,t)=>this.target?this.target.on[t]:(...e)=>{this.onQueue.push({method:t,args:e})}}),this.proxiedTarget=new Proxy({},{get:(e,t)=>this.target?this.target[t]:"on"===t?this.proxiedOn:Object.keys(this.fallbacks).includes(t)?(...e)=>(this.targetQueue.push({method:t,args:e,resolve:()=>{}}),this.fallbacks[t](...e)):(...e)=>new Promise((n=>{this.targetQueue.push({method:t,args:e,resolve:n})}))})}async setRealTarget(e){this.target=e;for(const t of this.onQueue)this.target.on[t.method](...t.args);for(const t of this.targetQueue)t.resolve(await this.target[t.method](...t.args))}}function m(e,t){const n=e,r=o(),s=a(),l=i&&n.enableEarlyProxy;if(!s||!r.__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__&&l){const e=l?new f(n,s):null,a=r.__VUE_DEVTOOLS_PLUGINS__=r.__VUE_DEVTOOLS_PLUGINS__||[];a.push({pluginDescriptor:n,setupFn:t,proxy:e}),e&&t(e.proxiedTarget)}else s.emit(u,e,t)}
/*!
 * vuex v4.1.0
 * (c) 2022 Evan You
 * @license MIT
 */
var g="store";function y(e,t){Object.keys(e).forEach((function(n){return t(e[n],n)}))}function b(e){return null!==e&&"object"===typeof e}function x(e){return e&&"function"===typeof e.then}function v(e,t){return function(){return e(t)}}function w(e,t,n){return t.indexOf(e)<0&&(n&&n.prepend?t.unshift(e):t.push(e)),function(){var n=t.indexOf(e);n>-1&&t.splice(n,1)}}function k(e,t){e._actions=Object.create(null),e._mutations=Object.create(null),e._wrappedGetters=Object.create(null),e._modulesNamespaceMap=Object.create(null);var n=e.state;N(e,n,[],e._modules.root,!0),I(e,n,t)}function I(e,t,n){var a=e._state,o=e._scope;e.getters={},e._makeLocalGettersCache=Object.create(null);var i=e._wrappedGetters,u={},l={},c=(0,s.B)(!0);c.run((function(){y(i,(function(t,n){u[n]=v(t,e),l[n]=(0,r.Fl)((function(){return u[n]()})),Object.defineProperty(e.getters,n,{get:function(){return l[n].value},enumerable:!0})}))})),e._state=(0,s.qj)({data:t}),e._scope=c,e.strict&&A(e),a&&n&&e._withCommit((function(){a.data=null})),o&&o.stop()}function N(e,t,n,r,s){var a=!n.length,o=e._modules.getNamespace(n);if(r.namespaced&&(e._modulesNamespaceMap[o],e._modulesNamespaceMap[o]=r),!a&&!s){var i=R(t,n.slice(0,-1)),u=n[n.length-1];e._withCommit((function(){i[u]=r.state}))}var l=r.context=S(e,o,n);r.forEachMutation((function(t,n){var r=o+n;C(e,r,t,l)})),r.forEachAction((function(t,n){var r=t.root?n:o+n,s=t.handler||t;$(e,r,s,l)})),r.forEachGetter((function(t,n){var r=o+n;E(e,r,t,l)})),r.forEachChild((function(r,a){N(e,t,n.concat(a),r,s)}))}function S(e,t,n){var r=""===t,s={dispatch:r?e.dispatch:function(n,r,s){var a=_(n,r,s),o=a.payload,i=a.options,u=a.type;return i&&i.root||(u=t+u),e.dispatch(u,o)},commit:r?e.commit:function(n,r,s){var a=_(n,r,s),o=a.payload,i=a.options,u=a.type;i&&i.root||(u=t+u),e.commit(u,o,i)}};return Object.defineProperties(s,{getters:{get:r?function(){return e.getters}:function(){return T(e,t)}},state:{get:function(){return R(e.state,n)}}}),s}function T(e,t){if(!e._makeLocalGettersCache[t]){var n={},r=t.length;Object.keys(e.getters).forEach((function(s){if(s.slice(0,r)===t){var a=s.slice(r);Object.defineProperty(n,a,{get:function(){return e.getters[s]},enumerable:!0})}})),e._makeLocalGettersCache[t]=n}return e._makeLocalGettersCache[t]}function C(e,t,n,r){var s=e._mutations[t]||(e._mutations[t]=[]);s.push((function(t){n.call(e,r.state,t)}))}function $(e,t,n,r){var s=e._actions[t]||(e._actions[t]=[]);s.push((function(t){var s=n.call(e,{dispatch:r.dispatch,commit:r.commit,getters:r.getters,state:r.state,rootGetters:e.getters,rootState:e.state},t);return x(s)||(s=Promise.resolve(s)),e._devtoolHook?s.catch((function(t){throw e._devtoolHook.emit("vuex:error",t),t})):s}))}function E(e,t,n,r){e._wrappedGetters[t]||(e._wrappedGetters[t]=function(e){return n(r.state,r.getters,e.state,e.getters)})}function A(e){(0,r.YP)((function(){return e._state.data}),(function(){0}),{deep:!0,flush:"sync"})}function R(e,t){return t.reduce((function(e,t){return e[t]}),e)}function _(e,t,n){return b(e)&&e.type&&(n=t,t=e,e=e.type),{type:e,payload:t,options:n}}var O="vuex bindings",F="vuex:mutations",D="vuex:actions",M="vuex",L=0;function z(e,t){m({id:"org.vuejs.vuex",app:e,label:"Vuex",homepage:"https://next.vuex.vuejs.org/",logo:"https://vuejs.org/images/icons/favicon-96x96.png",packageName:"vuex",componentStateTypes:[O]},(function(n){n.addTimelineLayer({id:F,label:"Vuex Mutations",color:P}),n.addTimelineLayer({id:D,label:"Vuex Actions",color:P}),n.addInspector({id:M,label:"Vuex",icon:"storage",treeFilterPlaceholder:"Filter stores..."}),n.on.getInspectorTree((function(n){if(n.app===e&&n.inspectorId===M)if(n.filter){var r=[];j(r,t._modules.root,n.filter,""),n.rootNodes=r}else n.rootNodes=[G(t._modules.root,"")]})),n.on.getInspectorState((function(n){if(n.app===e&&n.inspectorId===M){var r=n.nodeId;T(t,r),n.state=H(K(t._modules,r),"root"===r?t.getters:t._makeLocalGettersCache,r)}})),n.on.editInspectorState((function(n){if(n.app===e&&n.inspectorId===M){var r=n.nodeId,s=n.path;"root"!==r&&(s=r.split("/").filter(Boolean).concat(s)),t._withCommit((function(){n.set(t._state.data,s,n.state.value)}))}})),t.subscribe((function(e,t){var r={};e.payload&&(r.payload=e.payload),r.state=t,n.notifyComponentUpdate(),n.sendInspectorTree(M),n.sendInspectorState(M),n.addTimelineEvent({layerId:F,event:{time:Date.now(),title:e.type,data:r}})})),t.subscribeAction({before:function(e,t){var r={};e.payload&&(r.payload=e.payload),e._id=L++,e._time=Date.now(),r.state=t,n.addTimelineEvent({layerId:D,event:{time:e._time,title:e.type,groupId:e._id,subtitle:"start",data:r}})},after:function(e,t){var r={},s=Date.now()-e._time;r.duration={_custom:{type:"duration",display:s+"ms",tooltip:"Action duration",value:s}},e.payload&&(r.payload=e.payload),r.state=t,n.addTimelineEvent({layerId:D,event:{time:Date.now(),title:e.type,groupId:e._id,subtitle:"end",data:r}})}})}))}var P=8702998,B=6710886,W=16777215,V={label:"namespaced",textColor:W,backgroundColor:B};function U(e){return e&&"root"!==e?e.split("/").slice(-2,-1)[0]:"Root"}function G(e,t){return{id:t||"root",label:U(t),tags:e.namespaced?[V]:[],children:Object.keys(e._children).map((function(n){return G(e._children[n],t+n+"/")}))}}function j(e,t,n,r){r.includes(n)&&e.push({id:r||"root",label:r.endsWith("/")?r.slice(0,r.length-1):r||"Root",tags:t.namespaced?[V]:[]}),Object.keys(t._children).forEach((function(s){j(e,t._children[s],n,r+s+"/")}))}function H(e,t,n){t="root"===n?t:t[n];var r=Object.keys(t),s={state:Object.keys(e.state).map((function(t){return{key:t,editable:!0,value:e.state[t]}}))};if(r.length){var a=q(t);s.getters=Object.keys(a).map((function(e){return{key:e.endsWith("/")?U(e):e,editable:!1,value:X((function(){return a[e]}))}}))}return s}function q(e){var t={};return Object.keys(e).forEach((function(n){var r=n.split("/");if(r.length>1){var s=t,a=r.pop();r.forEach((function(e){s[e]||(s[e]={_custom:{value:{},display:e,tooltip:"Module",abstract:!0}}),s=s[e]._custom.value})),s[a]=X((function(){return e[n]}))}else t[n]=X((function(){return e[n]}))})),t}function K(e,t){var n=t.split("/").filter((function(e){return e}));return n.reduce((function(e,r,s){var a=e[r];if(!a)throw new Error('Missing module "'+r+'" for path "'+t+'".');return s===n.length-1?a:a._children}),"root"===t?e:e.root._children)}function X(e){try{return e()}catch(t){return t}}var J=function(e,t){this.runtime=t,this._children=Object.create(null),this._rawModule=e;var n=e.state;this.state=("function"===typeof n?n():n)||{}},Y={namespaced:{configurable:!0}};Y.namespaced.get=function(){return!!this._rawModule.namespaced},J.prototype.addChild=function(e,t){this._children[e]=t},J.prototype.removeChild=function(e){delete this._children[e]},J.prototype.getChild=function(e){return this._children[e]},J.prototype.hasChild=function(e){return e in this._children},J.prototype.update=function(e){this._rawModule.namespaced=e.namespaced,e.actions&&(this._rawModule.actions=e.actions),e.mutations&&(this._rawModule.mutations=e.mutations),e.getters&&(this._rawModule.getters=e.getters)},J.prototype.forEachChild=function(e){y(this._children,e)},J.prototype.forEachGetter=function(e){this._rawModule.getters&&y(this._rawModule.getters,e)},J.prototype.forEachAction=function(e){this._rawModule.actions&&y(this._rawModule.actions,e)},J.prototype.forEachMutation=function(e){this._rawModule.mutations&&y(this._rawModule.mutations,e)},Object.defineProperties(J.prototype,Y);var Z=function(e){this.register([],e,!1)};function Q(e,t,n){if(t.update(n),n.modules)for(var r in n.modules){if(!t.getChild(r))return void 0;Q(e.concat(r),t.getChild(r),n.modules[r])}}Z.prototype.get=function(e){return e.reduce((function(e,t){return e.getChild(t)}),this.root)},Z.prototype.getNamespace=function(e){var t=this.root;return e.reduce((function(e,n){return t=t.getChild(n),e+(t.namespaced?n+"/":"")}),"")},Z.prototype.update=function(e){Q([],this.root,e)},Z.prototype.register=function(e,t,n){var r=this;void 0===n&&(n=!0);var s=new J(t,n);if(0===e.length)this.root=s;else{var a=this.get(e.slice(0,-1));a.addChild(e[e.length-1],s)}t.modules&&y(t.modules,(function(t,s){r.register(e.concat(s),t,n)}))},Z.prototype.unregister=function(e){var t=this.get(e.slice(0,-1)),n=e[e.length-1],r=t.getChild(n);r&&r.runtime&&t.removeChild(n)},Z.prototype.isRegistered=function(e){var t=this.get(e.slice(0,-1)),n=e[e.length-1];return!!t&&t.hasChild(n)};function ee(e){return new te(e)}var te=function(e){var t=this;void 0===e&&(e={});var n=e.plugins;void 0===n&&(n=[]);var r=e.strict;void 0===r&&(r=!1);var s=e.devtools;this._committing=!1,this._actions=Object.create(null),this._actionSubscribers=[],this._mutations=Object.create(null),this._wrappedGetters=Object.create(null),this._modules=new Z(e),this._modulesNamespaceMap=Object.create(null),this._subscribers=[],this._makeLocalGettersCache=Object.create(null),this._scope=null,this._devtools=s;var a=this,o=this,i=o.dispatch,u=o.commit;this.dispatch=function(e,t){return i.call(a,e,t)},this.commit=function(e,t,n){return u.call(a,e,t,n)},this.strict=r;var l=this._modules.root.state;N(this,l,[],this._modules.root),I(this,l),n.forEach((function(e){return e(t)}))},ne={state:{configurable:!0}};te.prototype.install=function(e,t){e.provide(t||g,this),e.config.globalProperties.$store=this;var n=void 0!==this._devtools&&this._devtools;n&&z(e,this)},ne.state.get=function(){return this._state.data},ne.state.set=function(e){0},te.prototype.commit=function(e,t,n){var r=this,s=_(e,t,n),a=s.type,o=s.payload,i=(s.options,{type:a,payload:o}),u=this._mutations[a];u&&(this._withCommit((function(){u.forEach((function(e){e(o)}))})),this._subscribers.slice().forEach((function(e){return e(i,r.state)})))},te.prototype.dispatch=function(e,t){var n=this,r=_(e,t),s=r.type,a=r.payload,o={type:s,payload:a},i=this._actions[s];if(i){try{this._actionSubscribers.slice().filter((function(e){return e.before})).forEach((function(e){return e.before(o,n.state)}))}catch(l){0}var u=i.length>1?Promise.all(i.map((function(e){return e(a)}))):i[0](a);return new Promise((function(e,t){u.then((function(t){try{n._actionSubscribers.filter((function(e){return e.after})).forEach((function(e){return e.after(o,n.state)}))}catch(l){0}e(t)}),(function(e){try{n._actionSubscribers.filter((function(e){return e.error})).forEach((function(t){return t.error(o,n.state,e)}))}catch(l){0}t(e)}))}))}},te.prototype.subscribe=function(e,t){return w(e,this._subscribers,t)},te.prototype.subscribeAction=function(e,t){var n="function"===typeof e?{before:e}:e;return w(n,this._actionSubscribers,t)},te.prototype.watch=function(e,t,n){var s=this;return(0,r.YP)((function(){return e(s.state,s.getters)}),t,Object.assign({},n))},te.prototype.replaceState=function(e){var t=this;this._withCommit((function(){t._state.data=e}))},te.prototype.registerModule=function(e,t,n){void 0===n&&(n={}),"string"===typeof e&&(e=[e]),this._modules.register(e,t),N(this,this.state,e,this._modules.get(e),n.preserveState),I(this,this.state)},te.prototype.unregisterModule=function(e){var t=this;"string"===typeof e&&(e=[e]),this._modules.unregister(e),this._withCommit((function(){var n=R(t.state,e.slice(0,-1));delete n[e[e.length-1]]})),k(this)},te.prototype.hasModule=function(e){return"string"===typeof e&&(e=[e]),this._modules.isRegistered(e)},te.prototype.hotUpdate=function(e){this._modules.update(e),k(this,!0)},te.prototype._withCommit=function(e){var t=this._committing;this._committing=!0,e(),this._committing=t},Object.defineProperties(te.prototype,ne);ae((function(e,t){var n={};return re(t).forEach((function(t){var r=t.key,s=t.val;n[r]=function(){var t=this.$store.state,n=this.$store.getters;if(e){var r=oe(this.$store,"mapState",e);if(!r)return;t=r.context.state,n=r.context.getters}return"function"===typeof s?s.call(this,t,n):t[s]},n[r].vuex=!0})),n})),ae((function(e,t){var n={};return re(t).forEach((function(t){var r=t.key,s=t.val;n[r]=function(){var t=[],n=arguments.length;while(n--)t[n]=arguments[n];var r=this.$store.commit;if(e){var a=oe(this.$store,"mapMutations",e);if(!a)return;r=a.context.commit}return"function"===typeof s?s.apply(this,[r].concat(t)):r.apply(this.$store,[s].concat(t))}})),n})),ae((function(e,t){var n={};return re(t).forEach((function(t){var r=t.key,s=t.val;s=e+s,n[r]=function(){if(!e||oe(this.$store,"mapGetters",e))return this.$store.getters[s]},n[r].vuex=!0})),n})),ae((function(e,t){var n={};return re(t).forEach((function(t){var r=t.key,s=t.val;n[r]=function(){var t=[],n=arguments.length;while(n--)t[n]=arguments[n];var r=this.$store.dispatch;if(e){var a=oe(this.$store,"mapActions",e);if(!a)return;r=a.context.dispatch}return"function"===typeof s?s.apply(this,[r].concat(t)):r.apply(this.$store,[s].concat(t))}})),n}));function re(e){return se(e)?Array.isArray(e)?e.map((function(e){return{key:e,val:e}})):Object.keys(e).map((function(t){return{key:t,val:e[t]}})):[]}function se(e){return Array.isArray(e)||b(e)}function ae(e){return function(t,n){return"string"!==typeof t?(n=t,t=""):"/"!==t.charAt(t.length-1)&&(t+="/"),e(t,n)}}function oe(e,t,n){var r=e._modulesNamespaceMap[n];return r}},2483:function(e,t,n){"use strict";n.d(t,{PO:function(){return P},p7:function(){return tt}});n(7658),n(541);var r=n(3396),s=n(4870);
/*!
  * vue-router v4.1.6
  * (c) 2022 Eduardo San Martin Morote
  * @license MIT
  */
const a="undefined"!==typeof window;function o(e){return e.__esModule||"Module"===e[Symbol.toStringTag]}const i=Object.assign;function u(e,t){const n={};for(const r in t){const s=t[r];n[r]=c(s)?s.map(e):e(s)}return n}const l=()=>{},c=Array.isArray;const h=/\/$/,p=e=>e.replace(h,"");function d(e,t,n="/"){let r,s={},a="",o="";const i=t.indexOf("#");let u=t.indexOf("?");return i<u&&i>=0&&(u=-1),u>-1&&(r=t.slice(0,u),a=t.slice(u+1,i>-1?i:t.length),s=e(a)),i>-1&&(r=r||t.slice(0,i),o=t.slice(i,t.length)),r=w(null!=r?r:t,n),{fullPath:r+(a&&"?")+a+o,path:r,query:s,hash:o}}function f(e,t){const n=t.query?e(t.query):"";return t.path+(n&&"?")+n+(t.hash||"")}function m(e,t){return t&&e.toLowerCase().startsWith(t.toLowerCase())?e.slice(t.length)||"/":e}function g(e,t,n){const r=t.matched.length-1,s=n.matched.length-1;return r>-1&&r===s&&y(t.matched[r],n.matched[s])&&b(t.params,n.params)&&e(t.query)===e(n.query)&&t.hash===n.hash}function y(e,t){return(e.aliasOf||e)===(t.aliasOf||t)}function b(e,t){if(Object.keys(e).length!==Object.keys(t).length)return!1;for(const n in e)if(!x(e[n],t[n]))return!1;return!0}function x(e,t){return c(e)?v(e,t):c(t)?v(t,e):e===t}function v(e,t){return c(t)?e.length===t.length&&e.every(((e,n)=>e===t[n])):1===e.length&&e[0]===t}function w(e,t){if(e.startsWith("/"))return e;if(!e)return t;const n=t.split("/"),r=e.split("/");let s,a,o=n.length-1;for(s=0;s<r.length;s++)if(a=r[s],"."!==a){if(".."!==a)break;o>1&&o--}return n.slice(0,o).join("/")+"/"+r.slice(s-(s===r.length?1:0)).join("/")}var k,I;(function(e){e["pop"]="pop",e["push"]="push"})(k||(k={})),function(e){e["back"]="back",e["forward"]="forward",e["unknown"]=""}(I||(I={}));function N(e){if(!e)if(a){const t=document.querySelector("base");e=t&&t.getAttribute("href")||"/",e=e.replace(/^\w+:\/\/[^\/]+/,"")}else e="/";return"/"!==e[0]&&"#"!==e[0]&&(e="/"+e),p(e)}const S=/^[^#]+#/;function T(e,t){return e.replace(S,"#")+t}function C(e,t){const n=document.documentElement.getBoundingClientRect(),r=e.getBoundingClientRect();return{behavior:t.behavior,left:r.left-n.left-(t.left||0),top:r.top-n.top-(t.top||0)}}const $=()=>({left:window.pageXOffset,top:window.pageYOffset});function E(e){let t;if("el"in e){const n=e.el,r="string"===typeof n&&n.startsWith("#");0;const s="string"===typeof n?r?document.getElementById(n.slice(1)):document.querySelector(n):n;if(!s)return;t=C(s,e)}else t=e;"scrollBehavior"in document.documentElement.style?window.scrollTo(t):window.scrollTo(null!=t.left?t.left:window.pageXOffset,null!=t.top?t.top:window.pageYOffset)}function A(e,t){const n=history.state?history.state.position-t:-1;return n+e}const R=new Map;function _(e,t){R.set(e,t)}function O(e){const t=R.get(e);return R.delete(e),t}let F=()=>location.protocol+"//"+location.host;function D(e,t){const{pathname:n,search:r,hash:s}=t,a=e.indexOf("#");if(a>-1){let t=s.includes(e.slice(a))?e.slice(a).length:1,n=s.slice(t);return"/"!==n[0]&&(n="/"+n),m(n,"")}const o=m(n,e);return o+r+s}function M(e,t,n,r){let s=[],a=[],o=null;const u=({state:a})=>{const i=D(e,location),u=n.value,l=t.value;let c=0;if(a){if(n.value=i,t.value=a,o&&o===u)return void(o=null);c=l?a.position-l.position:0}else r(i);s.forEach((e=>{e(n.value,u,{delta:c,type:k.pop,direction:c?c>0?I.forward:I.back:I.unknown})}))};function l(){o=n.value}function c(e){s.push(e);const t=()=>{const t=s.indexOf(e);t>-1&&s.splice(t,1)};return a.push(t),t}function h(){const{history:e}=window;e.state&&e.replaceState(i({},e.state,{scroll:$()}),"")}function p(){for(const e of a)e();a=[],window.removeEventListener("popstate",u),window.removeEventListener("beforeunload",h)}return window.addEventListener("popstate",u),window.addEventListener("beforeunload",h),{pauseListeners:l,listen:c,destroy:p}}function L(e,t,n,r=!1,s=!1){return{back:e,current:t,forward:n,replaced:r,position:window.history.length,scroll:s?$():null}}function z(e){const{history:t,location:n}=window,r={value:D(e,n)},s={value:t.state};function a(r,a,o){const i=e.indexOf("#"),u=i>-1?(n.host&&document.querySelector("base")?e:e.slice(i))+r:F()+e+r;try{t[o?"replaceState":"pushState"](a,"",u),s.value=a}catch(l){console.error(l),n[o?"replace":"assign"](u)}}function o(e,n){const o=i({},t.state,L(s.value.back,e,s.value.forward,!0),n,{position:s.value.position});a(e,o,!0),r.value=e}function u(e,n){const o=i({},s.value,t.state,{forward:e,scroll:$()});a(o.current,o,!0);const u=i({},L(r.value,e,null),{position:o.position+1},n);a(e,u,!1),r.value=e}return s.value||a(r.value,{back:null,current:r.value,forward:null,position:t.length-1,replaced:!0,scroll:null},!0),{location:r,state:s,push:u,replace:o}}function P(e){e=N(e);const t=z(e),n=M(e,t.state,t.location,t.replace);function r(e,t=!0){t||n.pauseListeners(),history.go(e)}const s=i({location:"",base:e,go:r,createHref:T.bind(null,e)},t,n);return Object.defineProperty(s,"location",{enumerable:!0,get:()=>t.location.value}),Object.defineProperty(s,"state",{enumerable:!0,get:()=>t.state.value}),s}function B(e){return"string"===typeof e||e&&"object"===typeof e}function W(e){return"string"===typeof e||"symbol"===typeof e}const V={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0},U=Symbol("");var G;(function(e){e[e["aborted"]=4]="aborted",e[e["cancelled"]=8]="cancelled",e[e["duplicated"]=16]="duplicated"})(G||(G={}));function j(e,t){return i(new Error,{type:e,[U]:!0},t)}function H(e,t){return e instanceof Error&&U in e&&(null==t||!!(e.type&t))}const q="[^/]+?",K={sensitive:!1,strict:!1,start:!0,end:!0},X=/[.+*?^${}()[\]/\\]/g;function J(e,t){const n=i({},K,t),r=[];let s=n.start?"^":"";const a=[];for(const i of e){const e=i.length?[]:[90];n.strict&&!i.length&&(s+="/");for(let t=0;t<i.length;t++){const r=i[t];let o=40+(n.sensitive?.25:0);if(0===r.type)t||(s+="/"),s+=r.value.replace(X,"\\$&"),o+=40;else if(1===r.type){const{value:e,repeatable:n,optional:u,regexp:l}=r;a.push({name:e,repeatable:n,optional:u});const c=l||q;if(c!==q){o+=10;try{new RegExp(`(${c})`)}catch(h){throw new Error(`Invalid custom RegExp for param "${e}" (${c}): `+h.message)}}let p=n?`((?:${c})(?:/(?:${c}))*)`:`(${c})`;t||(p=u&&i.length<2?`(?:/${p})`:"/"+p),u&&(p+="?"),s+=p,o+=20,u&&(o+=-8),n&&(o+=-20),".*"===c&&(o+=-50)}e.push(o)}r.push(e)}if(n.strict&&n.end){const e=r.length-1;r[e][r[e].length-1]+=.7000000000000001}n.strict||(s+="/?"),n.end?s+="$":n.strict&&(s+="(?:/|$)");const o=new RegExp(s,n.sensitive?"":"i");function u(e){const t=e.match(o),n={};if(!t)return null;for(let r=1;r<t.length;r++){const e=t[r]||"",s=a[r-1];n[s.name]=e&&s.repeatable?e.split("/"):e}return n}function l(t){let n="",r=!1;for(const s of e){r&&n.endsWith("/")||(n+="/"),r=!1;for(const e of s)if(0===e.type)n+=e.value;else if(1===e.type){const{value:a,repeatable:o,optional:i}=e,u=a in t?t[a]:"";if(c(u)&&!o)throw new Error(`Provided param "${a}" is an array but it is not repeatable (* or + modifiers)`);const l=c(u)?u.join("/"):u;if(!l){if(!i)throw new Error(`Missing required param "${a}"`);s.length<2&&(n.endsWith("/")?n=n.slice(0,-1):r=!0)}n+=l}}return n||"/"}return{re:o,score:r,keys:a,parse:u,stringify:l}}function Y(e,t){let n=0;while(n<e.length&&n<t.length){const r=t[n]-e[n];if(r)return r;n++}return e.length<t.length?1===e.length&&80===e[0]?-1:1:e.length>t.length?1===t.length&&80===t[0]?1:-1:0}function Z(e,t){let n=0;const r=e.score,s=t.score;while(n<r.length&&n<s.length){const e=Y(r[n],s[n]);if(e)return e;n++}if(1===Math.abs(s.length-r.length)){if(Q(r))return 1;if(Q(s))return-1}return s.length-r.length}function Q(e){const t=e[e.length-1];return e.length>0&&t[t.length-1]<0}const ee={type:0,value:""},te=/[a-zA-Z0-9_]/;function ne(e){if(!e)return[[]];if("/"===e)return[[ee]];if(!e.startsWith("/"))throw new Error(`Invalid path "${e}"`);function t(e){throw new Error(`ERR (${n})/"${l}": ${e}`)}let n=0,r=n;const s=[];let a;function o(){a&&s.push(a),a=[]}let i,u=0,l="",c="";function h(){l&&(0===n?a.push({type:0,value:l}):1===n||2===n||3===n?(a.length>1&&("*"===i||"+"===i)&&t(`A repeatable param (${l}) must be alone in its segment. eg: '/:ids+.`),a.push({type:1,value:l,regexp:c,repeatable:"*"===i||"+"===i,optional:"*"===i||"?"===i})):t("Invalid state to consume buffer"),l="")}function p(){l+=i}while(u<e.length)if(i=e[u++],"\\"!==i||2===n)switch(n){case 0:"/"===i?(l&&h(),o()):":"===i?(h(),n=1):p();break;case 4:p(),n=r;break;case 1:"("===i?n=2:te.test(i)?p():(h(),n=0,"*"!==i&&"?"!==i&&"+"!==i&&u--);break;case 2:")"===i?"\\"==c[c.length-1]?c=c.slice(0,-1)+i:n=3:c+=i;break;case 3:h(),n=0,"*"!==i&&"?"!==i&&"+"!==i&&u--,c="";break;default:t("Unknown state");break}else r=n,n=4;return 2===n&&t(`Unfinished custom RegExp for param "${l}"`),h(),o(),s}function re(e,t,n){const r=J(ne(e.path),n);const s=i(r,{record:e,parent:t,children:[],alias:[]});return t&&!s.record.aliasOf===!t.record.aliasOf&&t.children.push(s),s}function se(e,t){const n=[],r=new Map;function s(e){return r.get(e)}function a(e,n,r){const s=!r,u=oe(e);u.aliasOf=r&&r.record;const h=ce(t,e),p=[u];if("alias"in e){const t="string"===typeof e.alias?[e.alias]:e.alias;for(const e of t)p.push(i({},u,{components:r?r.record.components:u.components,path:e,aliasOf:r?r.record:u}))}let d,f;for(const t of p){const{path:i}=t;if(n&&"/"!==i[0]){const e=n.record.path,r="/"===e[e.length-1]?"":"/";t.path=n.record.path+(i&&r+i)}if(d=re(t,n,h),r?r.alias.push(d):(f=f||d,f!==d&&f.alias.push(d),s&&e.name&&!ue(d)&&o(e.name)),u.children){const e=u.children;for(let t=0;t<e.length;t++)a(e[t],d,r&&r.children[t])}r=r||d,(d.record.components&&Object.keys(d.record.components).length||d.record.name||d.record.redirect)&&c(d)}return f?()=>{o(f)}:l}function o(e){if(W(e)){const t=r.get(e);t&&(r.delete(e),n.splice(n.indexOf(t),1),t.children.forEach(o),t.alias.forEach(o))}else{const t=n.indexOf(e);t>-1&&(n.splice(t,1),e.record.name&&r.delete(e.record.name),e.children.forEach(o),e.alias.forEach(o))}}function u(){return n}function c(e){let t=0;while(t<n.length&&Z(e,n[t])>=0&&(e.record.path!==n[t].record.path||!he(e,n[t])))t++;n.splice(t,0,e),e.record.name&&!ue(e)&&r.set(e.record.name,e)}function h(e,t){let s,a,o,u={};if("name"in e&&e.name){if(s=r.get(e.name),!s)throw j(1,{location:e});0,o=s.record.name,u=i(ae(t.params,s.keys.filter((e=>!e.optional)).map((e=>e.name))),e.params&&ae(e.params,s.keys.map((e=>e.name)))),a=s.stringify(u)}else if("path"in e)a=e.path,s=n.find((e=>e.re.test(a))),s&&(u=s.parse(a),o=s.record.name);else{if(s=t.name?r.get(t.name):n.find((e=>e.re.test(t.path))),!s)throw j(1,{location:e,currentLocation:t});o=s.record.name,u=i({},t.params,e.params),a=s.stringify(u)}const l=[];let c=s;while(c)l.unshift(c.record),c=c.parent;return{name:o,path:a,params:u,matched:l,meta:le(l)}}return t=ce({strict:!1,end:!0,sensitive:!1},t),e.forEach((e=>a(e))),{addRoute:a,resolve:h,removeRoute:o,getRoutes:u,getRecordMatcher:s}}function ae(e,t){const n={};for(const r of t)r in e&&(n[r]=e[r]);return n}function oe(e){return{path:e.path,redirect:e.redirect,name:e.name,meta:e.meta||{},aliasOf:void 0,beforeEnter:e.beforeEnter,props:ie(e),children:e.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in e?e.components||null:e.component&&{default:e.component}}}function ie(e){const t={},n=e.props||!1;if("component"in e)t.default=n;else for(const r in e.components)t[r]="boolean"===typeof n?n:n[r];return t}function ue(e){while(e){if(e.record.aliasOf)return!0;e=e.parent}return!1}function le(e){return e.reduce(((e,t)=>i(e,t.meta)),{})}function ce(e,t){const n={};for(const r in e)n[r]=r in t?t[r]:e[r];return n}function he(e,t){return t.children.some((t=>t===e||he(e,t)))}const pe=/#/g,de=/&/g,fe=/\//g,me=/=/g,ge=/\?/g,ye=/\+/g,be=/%5B/g,xe=/%5D/g,ve=/%5E/g,we=/%60/g,ke=/%7B/g,Ie=/%7C/g,Ne=/%7D/g,Se=/%20/g;function Te(e){return encodeURI(""+e).replace(Ie,"|").replace(be,"[").replace(xe,"]")}function Ce(e){return Te(e).replace(ke,"{").replace(Ne,"}").replace(ve,"^")}function $e(e){return Te(e).replace(ye,"%2B").replace(Se,"+").replace(pe,"%23").replace(de,"%26").replace(we,"`").replace(ke,"{").replace(Ne,"}").replace(ve,"^")}function Ee(e){return $e(e).replace(me,"%3D")}function Ae(e){return Te(e).replace(pe,"%23").replace(ge,"%3F")}function Re(e){return null==e?"":Ae(e).replace(fe,"%2F")}function _e(e){try{return decodeURIComponent(""+e)}catch(t){}return""+e}function Oe(e){const t={};if(""===e||"?"===e)return t;const n="?"===e[0],r=(n?e.slice(1):e).split("&");for(let s=0;s<r.length;++s){const e=r[s].replace(ye," "),n=e.indexOf("="),a=_e(n<0?e:e.slice(0,n)),o=n<0?null:_e(e.slice(n+1));if(a in t){let e=t[a];c(e)||(e=t[a]=[e]),e.push(o)}else t[a]=o}return t}function Fe(e){let t="";for(let n in e){const r=e[n];if(n=Ee(n),null==r){void 0!==r&&(t+=(t.length?"&":"")+n);continue}const s=c(r)?r.map((e=>e&&$e(e))):[r&&$e(r)];s.forEach((e=>{void 0!==e&&(t+=(t.length?"&":"")+n,null!=e&&(t+="="+e))}))}return t}function De(e){const t={};for(const n in e){const r=e[n];void 0!==r&&(t[n]=c(r)?r.map((e=>null==e?null:""+e)):null==r?r:""+r)}return t}const Me=Symbol(""),Le=Symbol(""),ze=Symbol(""),Pe=Symbol(""),Be=Symbol("");function We(){let e=[];function t(t){return e.push(t),()=>{const n=e.indexOf(t);n>-1&&e.splice(n,1)}}function n(){e=[]}return{add:t,list:()=>e,reset:n}}function Ve(e,t,n,r,s){const a=r&&(r.enterCallbacks[s]=r.enterCallbacks[s]||[]);return()=>new Promise(((o,i)=>{const u=e=>{!1===e?i(j(4,{from:n,to:t})):e instanceof Error?i(e):B(e)?i(j(2,{from:t,to:e})):(a&&r.enterCallbacks[s]===a&&"function"===typeof e&&a.push(e),o())},l=e.call(r&&r.instances[s],t,n,u);let c=Promise.resolve(l);e.length<3&&(c=c.then(u)),c.catch((e=>i(e)))}))}function Ue(e,t,n,r){const s=[];for(const a of e){0;for(const e in a.components){let i=a.components[e];if("beforeRouteEnter"===t||a.instances[e])if(Ge(i)){const o=i.__vccOpts||i,u=o[t];u&&s.push(Ve(u,n,r,a,e))}else{let u=i();0,s.push((()=>u.then((s=>{if(!s)return Promise.reject(new Error(`Couldn't resolve component "${e}" at "${a.path}"`));const i=o(s)?s.default:s;a.components[e]=i;const u=i.__vccOpts||i,l=u[t];return l&&Ve(l,n,r,a,e)()}))))}}}return s}function Ge(e){return"object"===typeof e||"displayName"in e||"props"in e||"__vccOpts"in e}function je(e){const t=(0,r.f3)(ze),n=(0,r.f3)(Pe),a=(0,r.Fl)((()=>t.resolve((0,s.SU)(e.to)))),o=(0,r.Fl)((()=>{const{matched:e}=a.value,{length:t}=e,r=e[t-1],s=n.matched;if(!r||!s.length)return-1;const o=s.findIndex(y.bind(null,r));if(o>-1)return o;const i=Je(e[t-2]);return t>1&&Je(r)===i&&s[s.length-1].path!==i?s.findIndex(y.bind(null,e[t-2])):o})),i=(0,r.Fl)((()=>o.value>-1&&Xe(n.params,a.value.params))),u=(0,r.Fl)((()=>o.value>-1&&o.value===n.matched.length-1&&b(n.params,a.value.params)));function c(n={}){return Ke(n)?t[(0,s.SU)(e.replace)?"replace":"push"]((0,s.SU)(e.to)).catch(l):Promise.resolve()}return{route:a,href:(0,r.Fl)((()=>a.value.href)),isActive:i,isExactActive:u,navigate:c}}const He=(0,r.aZ)({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"}},useLink:je,setup(e,{slots:t}){const n=(0,s.qj)(je(e)),{options:a}=(0,r.f3)(ze),o=(0,r.Fl)((()=>({[Ye(e.activeClass,a.linkActiveClass,"router-link-active")]:n.isActive,[Ye(e.exactActiveClass,a.linkExactActiveClass,"router-link-exact-active")]:n.isExactActive})));return()=>{const s=t.default&&t.default(n);return e.custom?s:(0,r.h)("a",{"aria-current":n.isExactActive?e.ariaCurrentValue:null,href:n.href,onClick:n.navigate,class:o.value},s)}}}),qe=He;function Ke(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)&&!e.defaultPrevented&&(void 0===e.button||0===e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){const t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}function Xe(e,t){for(const n in t){const r=t[n],s=e[n];if("string"===typeof r){if(r!==s)return!1}else if(!c(s)||s.length!==r.length||r.some(((e,t)=>e!==s[t])))return!1}return!0}function Je(e){return e?e.aliasOf?e.aliasOf.path:e.path:""}const Ye=(e,t,n)=>null!=e?e:null!=t?t:n,Ze=(0,r.aZ)({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(e,{attrs:t,slots:n}){const a=(0,r.f3)(Be),o=(0,r.Fl)((()=>e.route||a.value)),u=(0,r.f3)(Le,0),l=(0,r.Fl)((()=>{let e=(0,s.SU)(u);const{matched:t}=o.value;let n;while((n=t[e])&&!n.components)e++;return e})),c=(0,r.Fl)((()=>o.value.matched[l.value]));(0,r.JJ)(Le,(0,r.Fl)((()=>l.value+1))),(0,r.JJ)(Me,c),(0,r.JJ)(Be,o);const h=(0,s.iH)();return(0,r.YP)((()=>[h.value,c.value,e.name]),(([e,t,n],[r,s,a])=>{t&&(t.instances[n]=e,s&&s!==t&&e&&e===r&&(t.leaveGuards.size||(t.leaveGuards=s.leaveGuards),t.updateGuards.size||(t.updateGuards=s.updateGuards))),!e||!t||s&&y(t,s)&&r||(t.enterCallbacks[n]||[]).forEach((t=>t(e)))}),{flush:"post"}),()=>{const s=o.value,a=e.name,u=c.value,l=u&&u.components[a];if(!l)return Qe(n.default,{Component:l,route:s});const p=u.props[a],d=p?!0===p?s.params:"function"===typeof p?p(s):p:null,f=e=>{e.component.isUnmounted&&(u.instances[a]=null)},m=(0,r.h)(l,i({},d,t,{onVnodeUnmounted:f,ref:h}));return Qe(n.default,{Component:m,route:s})||m}}});function Qe(e,t){if(!e)return null;const n=e(t);return 1===n.length?n[0]:n}const et=Ze;function tt(e){const t=se(e.routes,e),n=e.parseQuery||Oe,o=e.stringifyQuery||Fe,h=e.history;const p=We(),m=We(),y=We(),b=(0,s.XI)(V);let x=V;a&&e.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const v=u.bind(null,(e=>""+e)),w=u.bind(null,Re),I=u.bind(null,_e);function N(e,n){let r,s;return W(e)?(r=t.getRecordMatcher(e),s=n):s=e,t.addRoute(s,r)}function S(e){const n=t.getRecordMatcher(e);n&&t.removeRoute(n)}function T(){return t.getRoutes().map((e=>e.record))}function C(e){return!!t.getRecordMatcher(e)}function R(e,r){if(r=i({},r||b.value),"string"===typeof e){const s=d(n,e,r.path),a=t.resolve({path:s.path},r),o=h.createHref(s.fullPath);return i(s,a,{params:I(a.params),hash:_e(s.hash),redirectedFrom:void 0,href:o})}let s;if("path"in e)s=i({},e,{path:d(n,e.path,r.path).path});else{const t=i({},e.params);for(const e in t)null==t[e]&&delete t[e];s=i({},e,{params:w(e.params)}),r.params=w(r.params)}const a=t.resolve(s,r),u=e.hash||"";a.params=v(I(a.params));const l=f(o,i({},e,{hash:Ce(u),path:a.path})),c=h.createHref(l);return i({fullPath:l,hash:u,query:o===Fe?De(e.query):e.query||{}},a,{redirectedFrom:void 0,href:c})}function F(e){return"string"===typeof e?d(n,e,b.value.path):i({},e)}function D(e,t){if(x!==e)return j(8,{from:t,to:e})}function M(e){return P(e)}function L(e){return M(i(F(e),{replace:!0}))}function z(e){const t=e.matched[e.matched.length-1];if(t&&t.redirect){const{redirect:n}=t;let r="function"===typeof n?n(e):n;return"string"===typeof r&&(r=r.includes("?")||r.includes("#")?r=F(r):{path:r},r.params={}),i({query:e.query,hash:e.hash,params:"path"in r?{}:e.params},r)}}function P(e,t){const n=x=R(e),r=b.value,s=e.state,a=e.force,u=!0===e.replace,l=z(n);if(l)return P(i(F(l),{state:"object"===typeof l?i({},s,l.state):s,force:a,replace:u}),t||n);const c=n;let h;return c.redirectedFrom=t,!a&&g(o,r,n)&&(h=j(16,{to:c,from:r}),ne(r,r,!0,!1)),(h?Promise.resolve(h):U(c,r)).catch((e=>H(e)?H(e,2)?e:te(e):Q(e,c,r))).then((e=>{if(e){if(H(e,2))return P(i({replace:u},F(e.to),{state:"object"===typeof e.to?i({},s,e.to.state):s,force:a}),t||c)}else e=q(c,r,!0,u,s);return G(c,r,e),e}))}function B(e,t){const n=D(e,t);return n?Promise.reject(n):Promise.resolve()}function U(e,t){let n;const[r,s,a]=rt(e,t);n=Ue(r.reverse(),"beforeRouteLeave",e,t);for(const i of r)i.leaveGuards.forEach((r=>{n.push(Ve(r,e,t))}));const o=B.bind(null,e,t);return n.push(o),nt(n).then((()=>{n=[];for(const r of p.list())n.push(Ve(r,e,t));return n.push(o),nt(n)})).then((()=>{n=Ue(s,"beforeRouteUpdate",e,t);for(const r of s)r.updateGuards.forEach((r=>{n.push(Ve(r,e,t))}));return n.push(o),nt(n)})).then((()=>{n=[];for(const r of e.matched)if(r.beforeEnter&&!t.matched.includes(r))if(c(r.beforeEnter))for(const s of r.beforeEnter)n.push(Ve(s,e,t));else n.push(Ve(r.beforeEnter,e,t));return n.push(o),nt(n)})).then((()=>(e.matched.forEach((e=>e.enterCallbacks={})),n=Ue(a,"beforeRouteEnter",e,t),n.push(o),nt(n)))).then((()=>{n=[];for(const r of m.list())n.push(Ve(r,e,t));return n.push(o),nt(n)})).catch((e=>H(e,8)?e:Promise.reject(e)))}function G(e,t,n){for(const r of y.list())r(e,t,n)}function q(e,t,n,r,s){const o=D(e,t);if(o)return o;const u=t===V,l=a?history.state:{};n&&(r||u?h.replace(e.fullPath,i({scroll:u&&l&&l.scroll},s)):h.push(e.fullPath,s)),b.value=e,ne(e,t,n,u),te()}let K;function X(){K||(K=h.listen(((e,t,n)=>{if(!ie.listening)return;const r=R(e),s=z(r);if(s)return void P(i(s,{replace:!0}),r).catch(l);x=r;const o=b.value;a&&_(A(o.fullPath,n.delta),$()),U(r,o).catch((e=>H(e,12)?e:H(e,2)?(P(e.to,r).then((e=>{H(e,20)&&!n.delta&&n.type===k.pop&&h.go(-1,!1)})).catch(l),Promise.reject()):(n.delta&&h.go(-n.delta,!1),Q(e,r,o)))).then((e=>{e=e||q(r,o,!1),e&&(n.delta&&!H(e,8)?h.go(-n.delta,!1):n.type===k.pop&&H(e,20)&&h.go(-1,!1)),G(r,o,e)})).catch(l)})))}let J,Y=We(),Z=We();function Q(e,t,n){te(e);const r=Z.list();return r.length?r.forEach((r=>r(e,t,n))):console.error(e),Promise.reject(e)}function ee(){return J&&b.value!==V?Promise.resolve():new Promise(((e,t)=>{Y.add([e,t])}))}function te(e){return J||(J=!e,X(),Y.list().forEach((([t,n])=>e?n(e):t())),Y.reset()),e}function ne(t,n,s,o){const{scrollBehavior:i}=e;if(!a||!i)return Promise.resolve();const u=!s&&O(A(t.fullPath,0))||(o||!s)&&history.state&&history.state.scroll||null;return(0,r.Y3)().then((()=>i(t,n,u))).then((e=>e&&E(e))).catch((e=>Q(e,t,n)))}const re=e=>h.go(e);let ae;const oe=new Set,ie={currentRoute:b,listening:!0,addRoute:N,removeRoute:S,hasRoute:C,getRoutes:T,resolve:R,options:e,push:M,replace:L,go:re,back:()=>re(-1),forward:()=>re(1),beforeEach:p.add,beforeResolve:m.add,afterEach:y.add,onError:Z.add,isReady:ee,install(e){const t=this;e.component("RouterLink",qe),e.component("RouterView",et),e.config.globalProperties.$router=t,Object.defineProperty(e.config.globalProperties,"$route",{enumerable:!0,get:()=>(0,s.SU)(b)}),a&&!ae&&b.value===V&&(ae=!0,M(h.location).catch((e=>{0})));const n={};for(const s in V)n[s]=(0,r.Fl)((()=>b.value[s]));e.provide(ze,t),e.provide(Pe,(0,s.qj)(n)),e.provide(Be,b);const o=e.unmount;oe.add(e),e.unmount=function(){oe.delete(e),oe.size<1&&(x=V,K&&K(),K=null,b.value=V,ae=!1,J=!1),o()}}};return ie}function nt(e){return e.reduce(((e,t)=>e.then((()=>t()))),Promise.resolve())}function rt(e,t){const n=[],r=[],s=[],a=Math.max(t.matched.length,e.matched.length);for(let o=0;o<a;o++){const a=t.matched[o];a&&(e.matched.find((e=>y(e,a)))?r.push(a):n.push(a));const i=e.matched[o];i&&(t.matched.find((e=>y(e,i)))||s.push(i))}return[n,r,s]}}}]);
//# sourceMappingURL=chunk-vendors.0ad8afef.js.map